
                var isNode =
                    typeof global !== "undefined" &&
                    {}.toString.call(global) == '[object global]';
                if (isNode) {
                    require("../../../live.js");
                }
        LiveCodeRegistry.getInstance().putMethod("plugins/org.apache.cordova.console/www/logger.js0", "(function(require, exports, module) {\n  \n                    var __coltScope = LiveCodeRegistry.getInstance().getScope();\n                    LiveCodingCodeFlowUtil.checkRecursion(\"plugins\/org.apache.cordova.console\/www\/logger.js[0]: function(require, exports, module)\"); try {\n                  var logger = exports;\n  var exec = require(\'cordova\/exec\');\n  var utils = require(\'cordova\/utils\');\n  var UseConsole = false;\n  var UseLogger = true;\n  var Queued = [];\n  var DeviceReady = false;\n  var CurrentLevel;\n  var originalConsole = console;\n  var Levels = [\"LOG\", \"ERROR\", \"WARN\", \"INFO\", \"DEBUG\"];\n  var LevelsMap = {};\n  \n                                    var _colt0 = \"_colt0_\" + Date.now();\n                                  for (var i = 0; i < Levels.length; i++) \n    {\n      \n                                    LiveCodingCodeFlowUtil.checkLoop(_colt0);\n                                      var level = Levels[i];\n      LevelsMap[level] = i;\n      logger[level] = level;\n    }\n  \n                                    LiveCodingCodeFlowUtil.checkLoop(\"\");\n                                  CurrentLevel = LevelsMap.WARN;\n  logger.level = function(value) {\n  \n                        var _colt4 = LiveCodeRegistry.getInstance().getCachedMethod(\"plugins\/org.apache.cordova.console\/www\/logger.js2_\" + __coltScope)\n                        if (_colt4 == null) {\n                            try {\n                                _colt4 = eval(LiveCodeRegistry.getInstance().getMethod(\"plugins\/org.apache.cordova.console\/www\/logger.js2\"));\n                            } catch (e) {\n                                LogUtil.log(\"error\", \"\", \"\", \"plugins\/org.apache.cordova.console\/www\/logger.js\", \"live method plugins\/org.apache.cordova.console\/www\/logger.js[2]: function(value) execute error: \" + e.message, e);\n                                return;\n                            }\n                            LiveCodeRegistry.getInstance().putCachedMethod(\"plugins\/org.apache.cordova.console\/www\/logger.js2_\" + __coltScope, _colt4)\n                        }\n                        return _colt4.apply(this, arguments)\n            };\n  logger.useConsole = function(value) {\n  \n                        var _colt5 = LiveCodeRegistry.getInstance().getCachedMethod(\"plugins\/org.apache.cordova.console\/www\/logger.js4_\" + __coltScope)\n                        if (_colt5 == null) {\n                            try {\n                                _colt5 = eval(LiveCodeRegistry.getInstance().getMethod(\"plugins\/org.apache.cordova.console\/www\/logger.js4\"));\n                            } catch (e) {\n                                LogUtil.log(\"error\", \"\", \"\", \"plugins\/org.apache.cordova.console\/www\/logger.js\", \"live method plugins\/org.apache.cordova.console\/www\/logger.js[4]: function(value) execute error: \" + e.message, e);\n                                return;\n                            }\n                            LiveCodeRegistry.getInstance().putCachedMethod(\"plugins\/org.apache.cordova.console\/www\/logger.js4_\" + __coltScope, _colt5)\n                        }\n                        return _colt5.apply(this, arguments)\n            };\n  logger.useLogger = function(value) {\n  \n                        var _colt6 = LiveCodeRegistry.getInstance().getCachedMethod(\"plugins\/org.apache.cordova.console\/www\/logger.js9_\" + __coltScope)\n                        if (_colt6 == null) {\n                            try {\n                                _colt6 = eval(LiveCodeRegistry.getInstance().getMethod(\"plugins\/org.apache.cordova.console\/www\/logger.js9\"));\n                            } catch (e) {\n                                LogUtil.log(\"error\", \"\", \"\", \"plugins\/org.apache.cordova.console\/www\/logger.js\", \"live method plugins\/org.apache.cordova.console\/www\/logger.js[9]: function(value) execute error: \" + e.message, e);\n                                return;\n                            }\n                            LiveCodeRegistry.getInstance().putCachedMethod(\"plugins\/org.apache.cordova.console\/www\/logger.js9_\" + __coltScope, _colt6)\n                        }\n                        return _colt6.apply(this, arguments)\n            };\n  logger.log = function(message) {\n  \n                        var _colt7 = LiveCodeRegistry.getInstance().getCachedMethod(\"plugins\/org.apache.cordova.console\/www\/logger.js10_\" + __coltScope)\n                        if (_colt7 == null) {\n                            try {\n                                _colt7 = eval(LiveCodeRegistry.getInstance().getMethod(\"plugins\/org.apache.cordova.console\/www\/logger.js10\"));\n                            } catch (e) {\n                                LogUtil.log(\"error\", \"\", \"\", \"plugins\/org.apache.cordova.console\/www\/logger.js\", \"live method plugins\/org.apache.cordova.console\/www\/logger.js[10]: function(message) execute error: \" + e.message, e);\n                                return;\n                            }\n                            LiveCodeRegistry.getInstance().putCachedMethod(\"plugins\/org.apache.cordova.console\/www\/logger.js10_\" + __coltScope, _colt7)\n                        }\n                        return _colt7.apply(this, arguments)\n            };\n  logger.error = function(message) {\n  \n                        var _colt8 = LiveCodeRegistry.getInstance().getCachedMethod(\"plugins\/org.apache.cordova.console\/www\/logger.js11_\" + __coltScope)\n                        if (_colt8 == null) {\n                            try {\n                                _colt8 = eval(LiveCodeRegistry.getInstance().getMethod(\"plugins\/org.apache.cordova.console\/www\/logger.js11\"));\n                            } catch (e) {\n                                LogUtil.log(\"error\", \"\", \"\", \"plugins\/org.apache.cordova.console\/www\/logger.js\", \"live method plugins\/org.apache.cordova.console\/www\/logger.js[11]: function(message) execute error: \" + e.message, e);\n                                return;\n                            }\n                            LiveCodeRegistry.getInstance().putCachedMethod(\"plugins\/org.apache.cordova.console\/www\/logger.js11_\" + __coltScope, _colt8)\n                        }\n                        return _colt8.apply(this, arguments)\n            };\n  logger.warn = function(message) {\n  \n                        var _colt9 = LiveCodeRegistry.getInstance().getCachedMethod(\"plugins\/org.apache.cordova.console\/www\/logger.js12_\" + __coltScope)\n                        if (_colt9 == null) {\n                            try {\n                                _colt9 = eval(LiveCodeRegistry.getInstance().getMethod(\"plugins\/org.apache.cordova.console\/www\/logger.js12\"));\n                            } catch (e) {\n                                LogUtil.log(\"error\", \"\", \"\", \"plugins\/org.apache.cordova.console\/www\/logger.js\", \"live method plugins\/org.apache.cordova.console\/www\/logger.js[12]: function(message) execute error: \" + e.message, e);\n                                return;\n                            }\n                            LiveCodeRegistry.getInstance().putCachedMethod(\"plugins\/org.apache.cordova.console\/www\/logger.js12_\" + __coltScope, _colt9)\n                        }\n                        return _colt9.apply(this, arguments)\n            };\n  logger.info = function(message) {\n  \n                        var _colta = LiveCodeRegistry.getInstance().getCachedMethod(\"plugins\/org.apache.cordova.console\/www\/logger.js13_\" + __coltScope)\n                        if (_colta == null) {\n                            try {\n                                _colta = eval(LiveCodeRegistry.getInstance().getMethod(\"plugins\/org.apache.cordova.console\/www\/logger.js13\"));\n                            } catch (e) {\n                                LogUtil.log(\"error\", \"\", \"\", \"plugins\/org.apache.cordova.console\/www\/logger.js\", \"live method plugins\/org.apache.cordova.console\/www\/logger.js[13]: function(message) execute error: \" + e.message, e);\n                                return;\n                            }\n                            LiveCodeRegistry.getInstance().putCachedMethod(\"plugins\/org.apache.cordova.console\/www\/logger.js13_\" + __coltScope, _colta)\n                        }\n                        return _colta.apply(this, arguments)\n            };\n  logger.debug = function(message) {\n  \n                        var _coltb = LiveCodeRegistry.getInstance().getCachedMethod(\"plugins\/org.apache.cordova.console\/www\/logger.js14_\" + __coltScope)\n                        if (_coltb == null) {\n                            try {\n                                _coltb = eval(LiveCodeRegistry.getInstance().getMethod(\"plugins\/org.apache.cordova.console\/www\/logger.js14\"));\n                            } catch (e) {\n                                LogUtil.log(\"error\", \"\", \"\", \"plugins\/org.apache.cordova.console\/www\/logger.js\", \"live method plugins\/org.apache.cordova.console\/www\/logger.js[14]: function(message) execute error: \" + e.message, e);\n                                return;\n                            }\n                            LiveCodeRegistry.getInstance().putCachedMethod(\"plugins\/org.apache.cordova.console\/www\/logger.js14_\" + __coltScope, _coltb)\n                        }\n                        return _coltb.apply(this, arguments)\n            };\n  function logWithArgs(level, args) {\n    \n                        var _coltc = LiveCodeRegistry.getInstance().getCachedMethod(\"plugins\/org.apache.cordova.console\/www\/logger.js15_\" + __coltScope)\n                        if (_coltc == null) {\n                            try {\n                                _coltc = eval(LiveCodeRegistry.getInstance().getMethod(\"plugins\/org.apache.cordova.console\/www\/logger.js15\"));\n                            } catch (e) {\n                                LogUtil.log(\"error\", \"\", \"\", \"plugins\/org.apache.cordova.console\/www\/logger.js\", \"live method plugins\/org.apache.cordova.console\/www\/logger.js[15]: function logWithArgs(level, args) execute error: \" + e.message, e);\n                                return;\n                            }\n                            LiveCodeRegistry.getInstance().putCachedMethod(\"plugins\/org.apache.cordova.console\/www\/logger.js15_\" + __coltScope, _coltc)\n                        }\n                        return _coltc.apply(this, arguments)\n              }\n  function formatStringForMessage(message) {\n    \n                        var _coltd = LiveCodeRegistry.getInstance().getCachedMethod(\"plugins\/org.apache.cordova.console\/www\/logger.js16_\" + __coltScope)\n                        if (_coltd == null) {\n                            try {\n                                _coltd = eval(LiveCodeRegistry.getInstance().getMethod(\"plugins\/org.apache.cordova.console\/www\/logger.js16\"));\n                            } catch (e) {\n                                LogUtil.log(\"error\", \"\", \"\", \"plugins\/org.apache.cordova.console\/www\/logger.js\", \"live method plugins\/org.apache.cordova.console\/www\/logger.js[16]: function formatStringForMessage(message) execute error: \" + e.message, e);\n                                return;\n                            }\n                            LiveCodeRegistry.getInstance().putCachedMethod(\"plugins\/org.apache.cordova.console\/www\/logger.js16_\" + __coltScope, _coltd)\n                        }\n                        return _coltd.apply(this, arguments)\n              }\n  logger.logLevel = function(level) {\n  \n                        var _colte = LiveCodeRegistry.getInstance().getCachedMethod(\"plugins\/org.apache.cordova.console\/www\/logger.js17_\" + __coltScope)\n                        if (_colte == null) {\n                            try {\n                                _colte = eval(LiveCodeRegistry.getInstance().getMethod(\"plugins\/org.apache.cordova.console\/www\/logger.js17\"));\n                            } catch (e) {\n                                LogUtil.log(\"error\", \"\", \"\", \"plugins\/org.apache.cordova.console\/www\/logger.js\", \"live method plugins\/org.apache.cordova.console\/www\/logger.js[17]: function(level) execute error: \" + e.message, e);\n                                return;\n                            }\n                            LiveCodeRegistry.getInstance().putCachedMethod(\"plugins\/org.apache.cordova.console\/www\/logger.js17_\" + __coltScope, _colte)\n                        }\n                        return _colte.apply(this, arguments)\n            };\n  logger.format = function(formatString, args) {\n  \n                        var _coltf = LiveCodeRegistry.getInstance().getCachedMethod(\"plugins\/org.apache.cordova.console\/www\/logger.js18_\" + __coltScope)\n                        if (_coltf == null) {\n                            try {\n                                _coltf = eval(LiveCodeRegistry.getInstance().getMethod(\"plugins\/org.apache.cordova.console\/www\/logger.js18\"));\n                            } catch (e) {\n                                LogUtil.log(\"error\", \"\", \"\", \"plugins\/org.apache.cordova.console\/www\/logger.js\", \"live method plugins\/org.apache.cordova.console\/www\/logger.js[18]: function(formatString, args) execute error: \" + e.message, e);\n                                return;\n                            }\n                            LiveCodeRegistry.getInstance().putCachedMethod(\"plugins\/org.apache.cordova.console\/www\/logger.js18_\" + __coltScope, _coltf)\n                        }\n                        return _coltf.apply(this, arguments)\n            };\n  function __format(formatString, args) {\n    \n                        var _colt10 = LiveCodeRegistry.getInstance().getCachedMethod(\"plugins\/org.apache.cordova.console\/www\/logger.js19_\" + __coltScope)\n                        if (_colt10 == null) {\n                            try {\n                                _colt10 = eval(LiveCodeRegistry.getInstance().getMethod(\"plugins\/org.apache.cordova.console\/www\/logger.js19\"));\n                            } catch (e) {\n                                LogUtil.log(\"error\", \"\", \"\", \"plugins\/org.apache.cordova.console\/www\/logger.js\", \"live method plugins\/org.apache.cordova.console\/www\/logger.js[19]: function __format(formatString, args) execute error: \" + e.message, e);\n                                return;\n                            }\n                            LiveCodeRegistry.getInstance().putCachedMethod(\"plugins\/org.apache.cordova.console\/www\/logger.js19_\" + __coltScope, _colt10)\n                        }\n                        return _colt10.apply(this, arguments)\n              }\n  function __formatted(object, formatChar) {\n    \n                        var _colt11 = LiveCodeRegistry.getInstance().getCachedMethod(\"plugins\/org.apache.cordova.console\/www\/logger.js20_\" + __coltScope)\n                        if (_colt11 == null) {\n                            try {\n                                _colt11 = eval(LiveCodeRegistry.getInstance().getMethod(\"plugins\/org.apache.cordova.console\/www\/logger.js20\"));\n                            } catch (e) {\n                                LogUtil.log(\"error\", \"\", \"\", \"plugins\/org.apache.cordova.console\/www\/logger.js\", \"live method plugins\/org.apache.cordova.console\/www\/logger.js[20]: function __formatted(object, formatChar) execute error: \" + e.message, e);\n                                return;\n                            }\n                            LiveCodeRegistry.getInstance().putCachedMethod(\"plugins\/org.apache.cordova.console\/www\/logger.js20_\" + __coltScope, _colt11)\n                        }\n                        return _colt11.apply(this, arguments)\n              }\n  logger.__onDeviceReady = function() {\n  \n                        var _colt12 = LiveCodeRegistry.getInstance().getCachedMethod(\"plugins\/org.apache.cordova.console\/www\/logger.js21_\" + __coltScope)\n                        if (_colt12 == null) {\n                            try {\n                                _colt12 = eval(LiveCodeRegistry.getInstance().getMethod(\"plugins\/org.apache.cordova.console\/www\/logger.js21\"));\n                            } catch (e) {\n                                LogUtil.log(\"error\", \"\", \"\", \"plugins\/org.apache.cordova.console\/www\/logger.js\", \"live method plugins\/org.apache.cordova.console\/www\/logger.js[21]: function() execute error: \" + e.message, e);\n                                return;\n                            }\n                            LiveCodeRegistry.getInstance().putCachedMethod(\"plugins\/org.apache.cordova.console\/www\/logger.js21_\" + __coltScope, _colt12)\n                        }\n                        return _colt12.apply(this, arguments)\n            };\n  document.addEventListener(\"deviceready\", logger.__onDeviceReady, false);\n  \n                    } catch (e) {\n                        LogUtil.log(\"error\", \"\", \"\", \"plugins\/org.apache.cordova.console\/www\/logger.js\", \"live method plugins\/org.apache.cordova.console\/www\/logger.js[0]: function(require, exports, module) execute error: \" + e.message, e);\n                    } finally {\n                        LiveCodingCodeFlowUtil.checkRecursion2(\"plugins\/org.apache.cordova.console\/www\/logger.js[0]: function(require, exports, module)\");\n                    }\n                })")
LiveCodeRegistry.getInstance().putMethod("plugins/org.apache.cordova.console/www/logger.js2", "(function(value) {\n  \n                    var __coltScope = LiveCodeRegistry.getInstance().getScope();\n                    LiveCodingCodeFlowUtil.checkRecursion(\"plugins\/org.apache.cordova.console\/www\/logger.js[2]: function(value)\"); try {\n                  if (arguments.length) \n  {\n    if (LevelsMap[value] === null) \n    {\n      throw new Error(\"invalid logging level: \" + value);\n    }\n    CurrentLevel = LevelsMap[value];\n  }\n  return Levels[CurrentLevel];\n  \n                    } catch (e) {\n                        LogUtil.log(\"error\", \"\", \"\", \"plugins\/org.apache.cordova.console\/www\/logger.js\", \"live method plugins\/org.apache.cordova.console\/www\/logger.js[2]: function(value) execute error: \" + e.message, e);\n                    } finally {\n                        LiveCodingCodeFlowUtil.checkRecursion2(\"plugins\/org.apache.cordova.console\/www\/logger.js[2]: function(value)\");\n                    }\n                })")
LiveCodeRegistry.getInstance().putMethod("plugins/org.apache.cordova.console/www/logger.js4", "(function(value) {\n  \n                    var __coltScope = LiveCodeRegistry.getInstance().getScope();\n                    LiveCodingCodeFlowUtil.checkRecursion(\"plugins\/org.apache.cordova.console\/www\/logger.js[4]: function(value)\"); try {\n                  if (arguments.length) \n  UseConsole = !!value;\n  if (UseConsole) \n  {\n    if (typeof console == \"undefined\") \n    {\n      throw new Error(\"global console object is not defined\");\n    }\n    if (typeof console.log != \"function\") \n    {\n      throw new Error(\"global console object does not have a log function\");\n    }\n    if (typeof console.useLogger == \"function\") \n    {\n      if (console.useLogger()) \n      {\n        throw new Error(\"console and logger are too intertwingly\");\n      }\n    }\n  }\n  return UseConsole;\n  \n                    } catch (e) {\n                        LogUtil.log(\"error\", \"\", \"\", \"plugins\/org.apache.cordova.console\/www\/logger.js\", \"live method plugins\/org.apache.cordova.console\/www\/logger.js[4]: function(value) execute error: \" + e.message, e);\n                    } finally {\n                        LiveCodingCodeFlowUtil.checkRecursion2(\"plugins\/org.apache.cordova.console\/www\/logger.js[4]: function(value)\");\n                    }\n                })")
LiveCodeRegistry.getInstance().putMethod("plugins/org.apache.cordova.console/www/logger.js9", "(function(value) {\n  \n                    var __coltScope = LiveCodeRegistry.getInstance().getScope();\n                    LiveCodingCodeFlowUtil.checkRecursion(\"plugins\/org.apache.cordova.console\/www\/logger.js[9]: function(value)\"); try {\n                  if (arguments.length) \n  UseLogger = !!value;\n  return UseLogger;\n  \n                    } catch (e) {\n                        LogUtil.log(\"error\", \"\", \"\", \"plugins\/org.apache.cordova.console\/www\/logger.js\", \"live method plugins\/org.apache.cordova.console\/www\/logger.js[9]: function(value) execute error: \" + e.message, e);\n                    } finally {\n                        LiveCodingCodeFlowUtil.checkRecursion2(\"plugins\/org.apache.cordova.console\/www\/logger.js[9]: function(value)\");\n                    }\n                })")
LiveCodeRegistry.getInstance().putMethod("plugins/org.apache.cordova.console/www/logger.js10", "(function(message) {\n  \n                    var __coltScope = LiveCodeRegistry.getInstance().getScope();\n                    LiveCodingCodeFlowUtil.checkRecursion(\"plugins\/org.apache.cordova.console\/www\/logger.js[10]: function(message)\"); try {\n                  logWithArgs(\"LOG\", arguments);\n  \n                    } catch (e) {\n                        LogUtil.log(\"error\", \"\", \"\", \"plugins\/org.apache.cordova.console\/www\/logger.js\", \"live method plugins\/org.apache.cordova.console\/www\/logger.js[10]: function(message) execute error: \" + e.message, e);\n                    } finally {\n                        LiveCodingCodeFlowUtil.checkRecursion2(\"plugins\/org.apache.cordova.console\/www\/logger.js[10]: function(message)\");\n                    }\n                })")
LiveCodeRegistry.getInstance().putMethod("plugins/org.apache.cordova.console/www/logger.js11", "(function(message) {\n  \n                    var __coltScope = LiveCodeRegistry.getInstance().getScope();\n                    LiveCodingCodeFlowUtil.checkRecursion(\"plugins\/org.apache.cordova.console\/www\/logger.js[11]: function(message)\"); try {\n                  logWithArgs(\"ERROR\", arguments);\n  \n                    } catch (e) {\n                        LogUtil.log(\"error\", \"\", \"\", \"plugins\/org.apache.cordova.console\/www\/logger.js\", \"live method plugins\/org.apache.cordova.console\/www\/logger.js[11]: function(message) execute error: \" + e.message, e);\n                    } finally {\n                        LiveCodingCodeFlowUtil.checkRecursion2(\"plugins\/org.apache.cordova.console\/www\/logger.js[11]: function(message)\");\n                    }\n                })")
LiveCodeRegistry.getInstance().putMethod("plugins/org.apache.cordova.console/www/logger.js12", "(function(message) {\n  \n                    var __coltScope = LiveCodeRegistry.getInstance().getScope();\n                    LiveCodingCodeFlowUtil.checkRecursion(\"plugins\/org.apache.cordova.console\/www\/logger.js[12]: function(message)\"); try {\n                  logWithArgs(\"WARN\", arguments);\n  \n                    } catch (e) {\n                        LogUtil.log(\"error\", \"\", \"\", \"plugins\/org.apache.cordova.console\/www\/logger.js\", \"live method plugins\/org.apache.cordova.console\/www\/logger.js[12]: function(message) execute error: \" + e.message, e);\n                    } finally {\n                        LiveCodingCodeFlowUtil.checkRecursion2(\"plugins\/org.apache.cordova.console\/www\/logger.js[12]: function(message)\");\n                    }\n                })")
LiveCodeRegistry.getInstance().putMethod("plugins/org.apache.cordova.console/www/logger.js13", "(function(message) {\n  \n                    var __coltScope = LiveCodeRegistry.getInstance().getScope();\n                    LiveCodingCodeFlowUtil.checkRecursion(\"plugins\/org.apache.cordova.console\/www\/logger.js[13]: function(message)\"); try {\n                  logWithArgs(\"INFO\", arguments);\n  \n                    } catch (e) {\n                        LogUtil.log(\"error\", \"\", \"\", \"plugins\/org.apache.cordova.console\/www\/logger.js\", \"live method plugins\/org.apache.cordova.console\/www\/logger.js[13]: function(message) execute error: \" + e.message, e);\n                    } finally {\n                        LiveCodingCodeFlowUtil.checkRecursion2(\"plugins\/org.apache.cordova.console\/www\/logger.js[13]: function(message)\");\n                    }\n                })")
LiveCodeRegistry.getInstance().putMethod("plugins/org.apache.cordova.console/www/logger.js14", "(function(message) {\n  \n                    var __coltScope = LiveCodeRegistry.getInstance().getScope();\n                    LiveCodingCodeFlowUtil.checkRecursion(\"plugins\/org.apache.cordova.console\/www\/logger.js[14]: function(message)\"); try {\n                  logWithArgs(\"DEBUG\", arguments);\n  \n                    } catch (e) {\n                        LogUtil.log(\"error\", \"\", \"\", \"plugins\/org.apache.cordova.console\/www\/logger.js\", \"live method plugins\/org.apache.cordova.console\/www\/logger.js[14]: function(message) execute error: \" + e.message, e);\n                    } finally {\n                        LiveCodingCodeFlowUtil.checkRecursion2(\"plugins\/org.apache.cordova.console\/www\/logger.js[14]: function(message)\");\n                    }\n                })")
LiveCodeRegistry.getInstance().putMethod("plugins/org.apache.cordova.console/www/logger.js15", "(function(level, args) {\n  \n                    var __coltScope = LiveCodeRegistry.getInstance().getScope();\n                    LiveCodingCodeFlowUtil.checkRecursion(\"plugins\/org.apache.cordova.console\/www\/logger.js[15]: function logWithArgs(level, args)\"); try {\n                  args = [level].concat([].slice.call(args));\n  logger.logLevel.apply(logger, args);\n  \n                    } catch (e) {\n                        LogUtil.log(\"error\", \"\", \"\", \"plugins\/org.apache.cordova.console\/www\/logger.js\", \"live method plugins\/org.apache.cordova.console\/www\/logger.js[15]: function logWithArgs(level, args) execute error: \" + e.message, e);\n                    } finally {\n                        LiveCodingCodeFlowUtil.checkRecursion2(\"plugins\/org.apache.cordova.console\/www\/logger.js[15]: function logWithArgs(level, args)\");\n                    }\n                })")
LiveCodeRegistry.getInstance().putMethod("plugins/org.apache.cordova.console/www/logger.js16", "(function(message) {\n  \n                    var __coltScope = LiveCodeRegistry.getInstance().getScope();\n                    LiveCodingCodeFlowUtil.checkRecursion(\"plugins\/org.apache.cordova.console\/www\/logger.js[16]: function formatStringForMessage(message)\"); try {\n                  return (typeof message === \"string\") ? \"\" : \"%o\";\n  \n                    } catch (e) {\n                        LogUtil.log(\"error\", \"\", \"\", \"plugins\/org.apache.cordova.console\/www\/logger.js\", \"live method plugins\/org.apache.cordova.console\/www\/logger.js[16]: function formatStringForMessage(message) execute error: \" + e.message, e);\n                    } finally {\n                        LiveCodingCodeFlowUtil.checkRecursion2(\"plugins\/org.apache.cordova.console\/www\/logger.js[16]: function formatStringForMessage(message)\");\n                    }\n                })")
LiveCodeRegistry.getInstance().putMethod("plugins/org.apache.cordova.console/www/logger.js17", "(function(level) {\n  \n                    var __coltScope = LiveCodeRegistry.getInstance().getScope();\n                    LiveCodingCodeFlowUtil.checkRecursion(\"plugins\/org.apache.cordova.console\/www\/logger.js[17]: function(level)\"); try {\n                  var formatArgs = [].slice.call(arguments, 1);\n  formatArgs.unshift(formatStringForMessage(formatArgs[0]));\n  var message = logger.format.apply(logger.format, formatArgs);\n  if (LevelsMap[level] === null) \n  {\n    throw new Error(\"invalid logging level: \" + level);\n  }\n  if (LevelsMap[level] > CurrentLevel) \n  return;\n  if (!DeviceReady && !UseConsole) \n  {\n    Queued.push([level, message]);\n    return;\n  }\n  if (UseLogger) \n  {\n    exec(null, null, \"Console\", \"logLevel\", [level, message]);\n  }\n  if (UseConsole) \n  {\n    if (console.useLogger()) \n    {\n      throw new Error(\"console and logger are too intertwingly\");\n    }\n    switch (level) {\n      case logger.LOG:\n        originalConsole.log(message);\n        break;\n      case logger.ERROR:\n        originalConsole.log(\"ERROR: \" + message);\n        break;\n      case logger.WARN:\n        originalConsole.log(\"WARN: \" + message);\n        break;\n      case logger.INFO:\n        originalConsole.log(\"INFO: \" + message);\n        break;\n      case logger.DEBUG:\n        originalConsole.log(\"DEBUG: \" + message);\n        break;\n    }\n  }\n  \n                    } catch (e) {\n                        LogUtil.log(\"error\", \"\", \"\", \"plugins\/org.apache.cordova.console\/www\/logger.js\", \"live method plugins\/org.apache.cordova.console\/www\/logger.js[17]: function(level) execute error: \" + e.message, e);\n                    } finally {\n                        LiveCodingCodeFlowUtil.checkRecursion2(\"plugins\/org.apache.cordova.console\/www\/logger.js[17]: function(level)\");\n                    }\n                })")
LiveCodeRegistry.getInstance().putMethod("plugins/org.apache.cordova.console/www/logger.js18", "(function(formatString, args) {\n  \n                    var __coltScope = LiveCodeRegistry.getInstance().getScope();\n                    LiveCodingCodeFlowUtil.checkRecursion(\"plugins\/org.apache.cordova.console\/www\/logger.js[18]: function(formatString, args)\"); try {\n                  return __format(arguments[0], [].slice.call(arguments, 1)).join(\' \');\n  \n                    } catch (e) {\n                        LogUtil.log(\"error\", \"\", \"\", \"plugins\/org.apache.cordova.console\/www\/logger.js\", \"live method plugins\/org.apache.cordova.console\/www\/logger.js[18]: function(formatString, args) execute error: \" + e.message, e);\n                    } finally {\n                        LiveCodingCodeFlowUtil.checkRecursion2(\"plugins\/org.apache.cordova.console\/www\/logger.js[18]: function(formatString, args)\");\n                    }\n                })")
LiveCodeRegistry.getInstance().putMethod("plugins/org.apache.cordova.console/www/logger.js19", "(function(formatString, args) {\n  \n                    var __coltScope = LiveCodeRegistry.getInstance().getScope();\n                    LiveCodingCodeFlowUtil.checkRecursion(\"plugins\/org.apache.cordova.console\/www\/logger.js[19]: function __format(formatString, args)\"); try {\n                  if (formatString === null || formatString === undefined) \n  return [\"\"];\n  if (arguments.length == 1) \n  return [formatString.toString()];\n  if (typeof formatString != \"string\") \n  formatString = formatString.toString();\n  var pattern = \/(.*?)%(.)(.*)\/;\n  var rest = formatString;\n  var result = [];\n  \n                                    var _colt1 = \"_colt1_\" + Date.now();\n                                  while (args.length) \n    {\n      \n                                    LiveCodingCodeFlowUtil.checkLoop(_colt1);\n                                      var match = pattern.exec(rest);\n      if (!match) \n      break;\n      var arg = args.shift();\n      rest = match[3];\n      result.push(match[1]);\n      if (match[2] == \'%\') \n      {\n        result.push(\'%\');\n        args.unshift(arg);\n        continue;\n      }\n      result.push(__formatted(arg, match[2]));\n    }\n  \n                                    LiveCodingCodeFlowUtil.checkLoop(\"\");\n                                  result.push(rest);\n  var remainingArgs = [].slice.call(args);\n  remainingArgs.unshift(result.join(\'\'));\n  return remainingArgs;\n  \n                    } catch (e) {\n                        LogUtil.log(\"error\", \"\", \"\", \"plugins\/org.apache.cordova.console\/www\/logger.js\", \"live method plugins\/org.apache.cordova.console\/www\/logger.js[19]: function __format(formatString, args) execute error: \" + e.message, e);\n                    } finally {\n                        LiveCodingCodeFlowUtil.checkRecursion2(\"plugins\/org.apache.cordova.console\/www\/logger.js[19]: function __format(formatString, args)\");\n                    }\n                })")
LiveCodeRegistry.getInstance().putMethod("plugins/org.apache.cordova.console/www/logger.js20", "(function(object, formatChar) {\n  \n                    var __coltScope = LiveCodeRegistry.getInstance().getScope();\n                    LiveCodingCodeFlowUtil.checkRecursion(\"plugins\/org.apache.cordova.console\/www\/logger.js[20]: function __formatted(object, formatChar)\"); try {\n                  try {\n    switch (formatChar) {\n      case \'j\':\n      case \'o\':\n        return JSON.stringify(object);\n      case \'c\':\n        return \'\';\n    }\n  }  catch (e) {\n  return \"error JSON.stringify()ing argument: \" + e;\n}\n  if ((object === null) || (object === undefined)) \n  {\n    return Object.prototype.toString.call(object);\n  }\n  return object.toString();\n  \n                    } catch (e) {\n                        LogUtil.log(\"error\", \"\", \"\", \"plugins\/org.apache.cordova.console\/www\/logger.js\", \"live method plugins\/org.apache.cordova.console\/www\/logger.js[20]: function __formatted(object, formatChar) execute error: \" + e.message, e);\n                    } finally {\n                        LiveCodingCodeFlowUtil.checkRecursion2(\"plugins\/org.apache.cordova.console\/www\/logger.js[20]: function __formatted(object, formatChar)\");\n                    }\n                })")
LiveCodeRegistry.getInstance().putMethod("plugins/org.apache.cordova.console/www/logger.js21", "(function() {\n  \n                    var __coltScope = LiveCodeRegistry.getInstance().getScope();\n                    LiveCodingCodeFlowUtil.checkRecursion(\"plugins\/org.apache.cordova.console\/www\/logger.js[21]: function()\"); try {\n                  if (DeviceReady) \n  return;\n  DeviceReady = true;\n  \n                                    var _colt2 = \"_colt2_\" + Date.now();\n                                  for (var i = 0; i < Queued.length; i++) \n    {\n      \n                                    LiveCodingCodeFlowUtil.checkLoop(_colt2);\n                                      var messageArgs = Queued[i];\n      logger.logLevel(messageArgs[0], messageArgs[1]);\n    }\n  \n                                    LiveCodingCodeFlowUtil.checkLoop(\"\");\n                                  Queued = null;\n  \n                    } catch (e) {\n                        LogUtil.log(\"error\", \"\", \"\", \"plugins\/org.apache.cordova.console\/www\/logger.js\", \"live method plugins\/org.apache.cordova.console\/www\/logger.js[21]: function() execute error: \" + e.message, e);\n                    } finally {\n                        LiveCodingCodeFlowUtil.checkRecursion2(\"plugins\/org.apache.cordova.console\/www\/logger.js[21]: function()\");\n                    }\n                })")

LiveCodeRegistry.getInstance().setInspectables([],"plugins/org.apache.cordova.console/www/logger.js");
LiveCodeRegistry.getInstance().setLastLoadedPackage(0,"plugins/org.apache.cordova.console/www/logger.js");
cordova.define("org.apache.cordova.console.logger", function(require, exports, module) {
  
                        var _colt3 = LiveCodeRegistry.getInstance().getCachedMethod("plugins/org.apache.cordova.console/www/logger.js0_" + __coltScope)
                        if (_colt3 == null) {
                            try {
                                _colt3 = eval(LiveCodeRegistry.getInstance().getMethod("plugins/org.apache.cordova.console/www/logger.js0"));
                            } catch (e) {
                                LogUtil.log("error", "", "", "plugins/org.apache.cordova.console/www/logger.js", "live method plugins/org.apache.cordova.console/www/logger.js[0]: function(require, exports, module) execute error: " + e.message, e);
                                return;
                            }
                            LiveCodeRegistry.getInstance().putCachedMethod("plugins/org.apache.cordova.console/www/logger.js0_" + __coltScope, _colt3)
                        }
                        return _colt3.apply(this, arguments)
            });
