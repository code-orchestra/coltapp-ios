
                var isNode =
                    typeof global !== "undefined" &&
                    {}.toString.call(global) == '[object global]';
                if (isNode) {
                    require("./live.js");
                }
        LiveCodeRegistry.getInstance().putMethod("cordova.js0", "(function() {\n  \n                    var __coltScope = LiveCodeRegistry.getInstance().getScope();\n                    LiveCodingCodeFlowUtil.checkRecursion(\"cordova.js[0]: function()\"); try {\n                  var CORDOVA_JS_BUILD_LABEL = \'3.1.0\';\n  var require, define;\n  (function() {\n  \n                        var _colt1b = LiveCodeRegistry.getInstance().getCachedMethod(\"cordova.js1_\" + __coltScope)\n                        if (_colt1b == null) {\n                            try {\n                                _colt1b = eval(LiveCodeRegistry.getInstance().getMethod(\"cordova.js1\"));\n                            } catch (e) {\n                                LogUtil.log(\"error\", \"\", \"\", \"cordova.js\", \"live method cordova.js[1]: function() execute error: \" + e.message, e);\n                                return;\n                            }\n                            LiveCodeRegistry.getInstance().putCachedMethod(\"cordova.js1_\" + __coltScope, _colt1b)\n                        }\n                        return _colt1b.apply(this, arguments)\n            })();\n  if (typeof module === \"object\" && typeof require === \"function\") \n  {\n    module.exports.require = require;\n    module.exports.define = define;\n  }\n  define(\"cordova\", function(require, exports, module) {\n  \n                        var _colt21 = LiveCodeRegistry.getInstance().getCachedMethod(\"cordova.js8_\" + __coltScope)\n                        if (_colt21 == null) {\n                            try {\n                                _colt21 = eval(LiveCodeRegistry.getInstance().getMethod(\"cordova.js8\"));\n                            } catch (e) {\n                                LogUtil.log(\"error\", \"\", \"\", \"cordova.js\", \"live method cordova.js[8]: function(require, exports, module) execute error: \" + e.message, e);\n                                return;\n                            }\n                            LiveCodeRegistry.getInstance().putCachedMethod(\"cordova.js8_\" + __coltScope, _colt21)\n                        }\n                        return _colt21.apply(this, arguments)\n            });\n  define(\"cordova\/argscheck\", function(require, exports, module) {\n  \n                        var _colt36 = LiveCodeRegistry.getInstance().getCachedMethod(\"cordova.js29_\" + __coltScope)\n                        if (_colt36 == null) {\n                            try {\n                                _colt36 = eval(LiveCodeRegistry.getInstance().getMethod(\"cordova.js29\"));\n                            } catch (e) {\n                                LogUtil.log(\"error\", \"\", \"\", \"cordova.js\", \"live method cordova.js[29]: function(require, exports, module) execute error: \" + e.message, e);\n                                return;\n                            }\n                            LiveCodeRegistry.getInstance().putCachedMethod(\"cordova.js29_\" + __coltScope, _colt36)\n                        }\n                        return _colt36.apply(this, arguments)\n            });\n  define(\"cordova\/base64\", function(require, exports, module) {\n  \n                        var _colt3a = LiveCodeRegistry.getInstance().getCachedMethod(\"cordova.js35_\" + __coltScope)\n                        if (_colt3a == null) {\n                            try {\n                                _colt3a = eval(LiveCodeRegistry.getInstance().getMethod(\"cordova.js35\"));\n                            } catch (e) {\n                                LogUtil.log(\"error\", \"\", \"\", \"cordova.js\", \"live method cordova.js[35]: function(require, exports, module) execute error: \" + e.message, e);\n                                return;\n                            }\n                            LiveCodeRegistry.getInstance().putCachedMethod(\"cordova.js35_\" + __coltScope, _colt3a)\n                        }\n                        return _colt3a.apply(this, arguments)\n            });\n  define(\"cordova\/builder\", function(require, exports, module) {\n  \n                        var _colt3f = LiveCodeRegistry.getInstance().getCachedMethod(\"cordova.js40_\" + __coltScope)\n                        if (_colt3f == null) {\n                            try {\n                                _colt3f = eval(LiveCodeRegistry.getInstance().getMethod(\"cordova.js40\"));\n                            } catch (e) {\n                                LogUtil.log(\"error\", \"\", \"\", \"cordova.js\", \"live method cordova.js[40]: function(require, exports, module) execute error: \" + e.message, e);\n                                return;\n                            }\n                            LiveCodeRegistry.getInstance().putCachedMethod(\"cordova.js40_\" + __coltScope, _colt3f)\n                        }\n                        return _colt3f.apply(this, arguments)\n            });\n  define(\"cordova\/channel\", function(require, exports, module) {\n  \n                        var _colt4c = LiveCodeRegistry.getInstance().getCachedMethod(\"cordova.js53_\" + __coltScope)\n                        if (_colt4c == null) {\n                            try {\n                                _colt4c = eval(LiveCodeRegistry.getInstance().getMethod(\"cordova.js53\"));\n                            } catch (e) {\n                                LogUtil.log(\"error\", \"\", \"\", \"cordova.js\", \"live method cordova.js[53]: function(require, exports, module) execute error: \" + e.message, e);\n                                return;\n                            }\n                            LiveCodeRegistry.getInstance().putCachedMethod(\"cordova.js53_\" + __coltScope, _colt4c)\n                        }\n                        return _colt4c.apply(this, arguments)\n            });\n  define(\"cordova\/exec\", function(require, exports, module) {\n  \n                        var _colt58 = LiveCodeRegistry.getInstance().getCachedMethod(\"cordova.js76_\" + __coltScope)\n                        if (_colt58 == null) {\n                            try {\n                                _colt58 = eval(LiveCodeRegistry.getInstance().getMethod(\"cordova.js76\"));\n                            } catch (e) {\n                                LogUtil.log(\"error\", \"\", \"\", \"cordova.js\", \"live method cordova.js[76]: function(require, exports, module) execute error: \" + e.message, e);\n                                return;\n                            }\n                            LiveCodeRegistry.getInstance().putCachedMethod(\"cordova.js76_\" + __coltScope, _colt58)\n                        }\n                        return _colt58.apply(this, arguments)\n            });\n  define(\"cordova\/init\", function(require, exports, module) {\n  \n                        var _colt68 = LiveCodeRegistry.getInstance().getCachedMethod(\"cordova.js92_\" + __coltScope)\n                        if (_colt68 == null) {\n                            try {\n                                _colt68 = eval(LiveCodeRegistry.getInstance().getMethod(\"cordova.js92\"));\n                            } catch (e) {\n                                LogUtil.log(\"error\", \"\", \"\", \"cordova.js\", \"live method cordova.js[92]: function(require, exports, module) execute error: \" + e.message, e);\n                                return;\n                            }\n                            LiveCodeRegistry.getInstance().putCachedMethod(\"cordova.js92_\" + __coltScope, _colt68)\n                        }\n                        return _colt68.apply(this, arguments)\n            });\n  define(\"cordova\/modulemapper\", function(require, exports, module) {\n  \n                        var _colt73 = LiveCodeRegistry.getInstance().getCachedMethod(\"cordova.js104_\" + __coltScope)\n                        if (_colt73 == null) {\n                            try {\n                                _colt73 = eval(LiveCodeRegistry.getInstance().getMethod(\"cordova.js104\"));\n                            } catch (e) {\n                                LogUtil.log(\"error\", \"\", \"\", \"cordova.js\", \"live method cordova.js[104]: function(require, exports, module) execute error: \" + e.message, e);\n                                return;\n                            }\n                            LiveCodeRegistry.getInstance().putCachedMethod(\"cordova.js104_\" + __coltScope, _colt73)\n                        }\n                        return _colt73.apply(this, arguments)\n            });\n  define(\"cordova\/platform\", function(require, exports, module) {\n  \n                        var _colt7d = LiveCodeRegistry.getInstance().getCachedMethod(\"cordova.js114_\" + __coltScope)\n                        if (_colt7d == null) {\n                            try {\n                                _colt7d = eval(LiveCodeRegistry.getInstance().getMethod(\"cordova.js114\"));\n                            } catch (e) {\n                                LogUtil.log(\"error\", \"\", \"\", \"cordova.js\", \"live method cordova.js[114]: function(require, exports, module) execute error: \" + e.message, e);\n                                return;\n                            }\n                            LiveCodeRegistry.getInstance().putCachedMethod(\"cordova.js114_\" + __coltScope, _colt7d)\n                        }\n                        return _colt7d.apply(this, arguments)\n            });\n  define(\"cordova\/pluginloader\", function(require, exports, module) {\n  \n                        var _colt7f = LiveCodeRegistry.getInstance().getCachedMethod(\"cordova.js116_\" + __coltScope)\n                        if (_colt7f == null) {\n                            try {\n                                _colt7f = eval(LiveCodeRegistry.getInstance().getMethod(\"cordova.js116\"));\n                            } catch (e) {\n                                LogUtil.log(\"error\", \"\", \"\", \"cordova.js\", \"live method cordova.js[116]: function(require, exports, module) execute error: \" + e.message, e);\n                                return;\n                            }\n                            LiveCodeRegistry.getInstance().putCachedMethod(\"cordova.js116_\" + __coltScope, _colt7f)\n                        }\n                        return _colt7f.apply(this, arguments)\n            });\n  define(\"cordova\/urlutil\", function(require, exports, module) {\n  \n                        var _colt88 = LiveCodeRegistry.getInstance().getCachedMethod(\"cordova.js127_\" + __coltScope)\n                        if (_colt88 == null) {\n                            try {\n                                _colt88 = eval(LiveCodeRegistry.getInstance().getMethod(\"cordova.js127\"));\n                            } catch (e) {\n                                LogUtil.log(\"error\", \"\", \"\", \"cordova.js\", \"live method cordova.js[127]: function(require, exports, module) execute error: \" + e.message, e);\n                                return;\n                            }\n                            LiveCodeRegistry.getInstance().putCachedMethod(\"cordova.js127_\" + __coltScope, _colt88)\n                        }\n                        return _colt88.apply(this, arguments)\n            });\n  define(\"cordova\/utils\", function(require, exports, module) {\n  \n                        var _colt8a = LiveCodeRegistry.getInstance().getCachedMethod(\"cordova.js129_\" + __coltScope)\n                        if (_colt8a == null) {\n                            try {\n                                _colt8a = eval(LiveCodeRegistry.getInstance().getMethod(\"cordova.js129\"));\n                            } catch (e) {\n                                LogUtil.log(\"error\", \"\", \"\", \"cordova.js\", \"live method cordova.js[129]: function(require, exports, module) execute error: \" + e.message, e);\n                                return;\n                            }\n                            LiveCodeRegistry.getInstance().putCachedMethod(\"cordova.js129_\" + __coltScope, _colt8a)\n                        }\n                        return _colt8a.apply(this, arguments)\n            });\n  window.cordova = require(\'cordova\');\n  require(\'cordova\/init\');\n  \n                    } catch (e) {\n                        LogUtil.log(\"error\", \"\", \"\", \"cordova.js\", \"live method cordova.js[0]: function() execute error: \" + e.message, e);\n                    } finally {\n                        LiveCodingCodeFlowUtil.checkRecursion2(\"cordova.js[0]: function()\");\n                    }\n                })")
LiveCodeRegistry.getInstance().putMethod("cordova.js1", "(function() {\n  \n                    var __coltScope = LiveCodeRegistry.getInstance().getScope();\n                    LiveCodingCodeFlowUtil.checkRecursion(\"cordova.js[1]: function()\"); try {\n                  var modules = {}, requireStack = [], inProgressModules = {}, SEPERATOR = \".\";\n  function build(module) {\n    \n                        var _colt1c = LiveCodeRegistry.getInstance().getCachedMethod(\"cordova.js2_\" + __coltScope)\n                        if (_colt1c == null) {\n                            try {\n                                _colt1c = eval(LiveCodeRegistry.getInstance().getMethod(\"cordova.js2\"));\n                            } catch (e) {\n                                LogUtil.log(\"error\", \"\", \"\", \"cordova.js\", \"live method cordova.js[2]: function build(module) execute error: \" + e.message, e);\n                                return;\n                            }\n                            LiveCodeRegistry.getInstance().putCachedMethod(\"cordova.js2_\" + __coltScope, _colt1c)\n                        }\n                        return _colt1c.apply(this, arguments)\n              }\n  require = function(id) {\n  \n                        var _colt1e = LiveCodeRegistry.getInstance().getCachedMethod(\"cordova.js4_\" + __coltScope)\n                        if (_colt1e == null) {\n                            try {\n                                _colt1e = eval(LiveCodeRegistry.getInstance().getMethod(\"cordova.js4\"));\n                            } catch (e) {\n                                LogUtil.log(\"error\", \"\", \"\", \"cordova.js\", \"live method cordova.js[4]: function(id) execute error: \" + e.message, e);\n                                return;\n                            }\n                            LiveCodeRegistry.getInstance().putCachedMethod(\"cordova.js4_\" + __coltScope, _colt1e)\n                        }\n                        return _colt1e.apply(this, arguments)\n            };\n  define = function(id, factory) {\n  \n                        var _colt1f = LiveCodeRegistry.getInstance().getCachedMethod(\"cordova.js5_\" + __coltScope)\n                        if (_colt1f == null) {\n                            try {\n                                _colt1f = eval(LiveCodeRegistry.getInstance().getMethod(\"cordova.js5\"));\n                            } catch (e) {\n                                LogUtil.log(\"error\", \"\", \"\", \"cordova.js\", \"live method cordova.js[5]: function(id, factory) execute error: \" + e.message, e);\n                                return;\n                            }\n                            LiveCodeRegistry.getInstance().putCachedMethod(\"cordova.js5_\" + __coltScope, _colt1f)\n                        }\n                        return _colt1f.apply(this, arguments)\n            };\n  define.remove = function(id) {\n  \n                        var _colt20 = LiveCodeRegistry.getInstance().getCachedMethod(\"cordova.js6_\" + __coltScope)\n                        if (_colt20 == null) {\n                            try {\n                                _colt20 = eval(LiveCodeRegistry.getInstance().getMethod(\"cordova.js6\"));\n                            } catch (e) {\n                                LogUtil.log(\"error\", \"\", \"\", \"cordova.js\", \"live method cordova.js[6]: function(id) execute error: \" + e.message, e);\n                                return;\n                            }\n                            LiveCodeRegistry.getInstance().putCachedMethod(\"cordova.js6_\" + __coltScope, _colt20)\n                        }\n                        return _colt20.apply(this, arguments)\n            };\n  define.moduleMap = modules;\n  \n                    } catch (e) {\n                        LogUtil.log(\"error\", \"\", \"\", \"cordova.js\", \"live method cordova.js[1]: function() execute error: \" + e.message, e);\n                    } finally {\n                        LiveCodingCodeFlowUtil.checkRecursion2(\"cordova.js[1]: function()\");\n                    }\n                })")
LiveCodeRegistry.getInstance().putMethod("cordova.js2", "(function(module) {\n  \n                    var __coltScope = LiveCodeRegistry.getInstance().getScope();\n                    LiveCodingCodeFlowUtil.checkRecursion(\"cordova.js[2]: function build(module)\"); try {\n                  var factory = module.factory, localRequire = function(id) {\n  \n                        var _colt1d = LiveCodeRegistry.getInstance().getCachedMethod(\"cordova.js3_\" + __coltScope)\n                        if (_colt1d == null) {\n                            try {\n                                _colt1d = eval(LiveCodeRegistry.getInstance().getMethod(\"cordova.js3\"));\n                            } catch (e) {\n                                LogUtil.log(\"error\", \"\", \"\", \"cordova.js\", \"live method cordova.js[3]: function(id) execute error: \" + e.message, e);\n                                return;\n                            }\n                            LiveCodeRegistry.getInstance().putCachedMethod(\"cordova.js3_\" + __coltScope, _colt1d)\n                        }\n                        return _colt1d.apply(this, arguments)\n            };\n  module.exports = {};\n  delete module.factory;\n  factory(localRequire, module.exports, module);\n  return module.exports;\n  \n                    } catch (e) {\n                        LogUtil.log(\"error\", \"\", \"\", \"cordova.js\", \"live method cordova.js[2]: function build(module) execute error: \" + e.message, e);\n                    } finally {\n                        LiveCodingCodeFlowUtil.checkRecursion2(\"cordova.js[2]: function build(module)\");\n                    }\n                })")
LiveCodeRegistry.getInstance().putMethod("cordova.js3", "(function(id) {\n  \n                    var __coltScope = LiveCodeRegistry.getInstance().getScope();\n                    LiveCodingCodeFlowUtil.checkRecursion(\"cordova.js[3]: function(id)\"); try {\n                  var resultantId = id;\n  if (id.charAt(0) === \".\") \n  {\n    resultantId = module.id.slice(0, module.id.lastIndexOf(SEPERATOR)) + SEPERATOR + id.slice(2);\n  }\n  return require(resultantId);\n  \n                    } catch (e) {\n                        LogUtil.log(\"error\", \"\", \"\", \"cordova.js\", \"live method cordova.js[3]: function(id) execute error: \" + e.message, e);\n                    } finally {\n                        LiveCodingCodeFlowUtil.checkRecursion2(\"cordova.js[3]: function(id)\");\n                    }\n                })")
LiveCodeRegistry.getInstance().putMethod("cordova.js4", "(function(id) {\n  \n                    var __coltScope = LiveCodeRegistry.getInstance().getScope();\n                    LiveCodingCodeFlowUtil.checkRecursion(\"cordova.js[4]: function(id)\"); try {\n                  if (!modules[id]) \n  {\n    throw \"module \" + id + \" not found\";\n  } else if (id in inProgressModules) \n  {\n    var cycle = requireStack.slice(inProgressModules[id]).join(\'->\') + \'->\' + id;\n    throw \"Cycle in require graph: \" + cycle;\n  }\n  if (modules[id].factory) \n  {\n    try {\n      inProgressModules[id] = requireStack.length;\n      requireStack.push(id);\n      return build(modules[id]);\n    } finally     {\n      delete inProgressModules[id];\n      requireStack.pop();\n    }\n  }\n  return modules[id].exports;\n  \n                    } catch (e) {\n                        LogUtil.log(\"error\", \"\", \"\", \"cordova.js\", \"live method cordova.js[4]: function(id) execute error: \" + e.message, e);\n                    } finally {\n                        LiveCodingCodeFlowUtil.checkRecursion2(\"cordova.js[4]: function(id)\");\n                    }\n                })")
LiveCodeRegistry.getInstance().putMethod("cordova.js5", "(function(id, factory) {\n  \n                    var __coltScope = LiveCodeRegistry.getInstance().getScope();\n                    LiveCodingCodeFlowUtil.checkRecursion(\"cordova.js[5]: function(id, factory)\"); try {\n                  if (modules[id]) \n  {\n    throw \"module \" + id + \" already defined\";\n  }\n  modules[id] = {id: id, factory: factory};\n  \n                    } catch (e) {\n                        LogUtil.log(\"error\", \"\", \"\", \"cordova.js\", \"live method cordova.js[5]: function(id, factory) execute error: \" + e.message, e);\n                    } finally {\n                        LiveCodingCodeFlowUtil.checkRecursion2(\"cordova.js[5]: function(id, factory)\");\n                    }\n                })")
LiveCodeRegistry.getInstance().putMethod("cordova.js6", "(function(id) {\n  \n                    var __coltScope = LiveCodeRegistry.getInstance().getScope();\n                    LiveCodingCodeFlowUtil.checkRecursion(\"cordova.js[6]: function(id)\"); try {\n                  delete modules[id];\n  \n                    } catch (e) {\n                        LogUtil.log(\"error\", \"\", \"\", \"cordova.js\", \"live method cordova.js[6]: function(id) execute error: \" + e.message, e);\n                    } finally {\n                        LiveCodingCodeFlowUtil.checkRecursion2(\"cordova.js[6]: function(id)\");\n                    }\n                })")
LiveCodeRegistry.getInstance().putMethod("cordova.js8", "(function(require, exports, module) {\n  \n                    var __coltScope = LiveCodeRegistry.getInstance().getScope();\n                    LiveCodingCodeFlowUtil.checkRecursion(\"cordova.js[8]: function(require, exports, module)\"); try {\n                  var channel = require(\'cordova\/channel\');\n  var platform = require(\'cordova\/platform\');\n  var m_document_addEventListener = document.addEventListener;\n  var m_document_removeEventListener = document.removeEventListener;\n  var m_window_addEventListener = window.addEventListener;\n  var m_window_removeEventListener = window.removeEventListener;\n  var documentEventHandlers = {}, windowEventHandlers = {};\n  document.addEventListener = function(evt, handler, capture) {\n  \n                        var _colt22 = LiveCodeRegistry.getInstance().getCachedMethod(\"cordova.js9_\" + __coltScope)\n                        if (_colt22 == null) {\n                            try {\n                                _colt22 = eval(LiveCodeRegistry.getInstance().getMethod(\"cordova.js9\"));\n                            } catch (e) {\n                                LogUtil.log(\"error\", \"\", \"\", \"cordova.js\", \"live method cordova.js[9]: function(evt, handler, capture) execute error: \" + e.message, e);\n                                return;\n                            }\n                            LiveCodeRegistry.getInstance().putCachedMethod(\"cordova.js9_\" + __coltScope, _colt22)\n                        }\n                        return _colt22.apply(this, arguments)\n            };\n  window.addEventListener = function(evt, handler, capture) {\n  \n                        var _colt23 = LiveCodeRegistry.getInstance().getCachedMethod(\"cordova.js10_\" + __coltScope)\n                        if (_colt23 == null) {\n                            try {\n                                _colt23 = eval(LiveCodeRegistry.getInstance().getMethod(\"cordova.js10\"));\n                            } catch (e) {\n                                LogUtil.log(\"error\", \"\", \"\", \"cordova.js\", \"live method cordova.js[10]: function(evt, handler, capture) execute error: \" + e.message, e);\n                                return;\n                            }\n                            LiveCodeRegistry.getInstance().putCachedMethod(\"cordova.js10_\" + __coltScope, _colt23)\n                        }\n                        return _colt23.apply(this, arguments)\n            };\n  document.removeEventListener = function(evt, handler, capture) {\n  \n                        var _colt24 = LiveCodeRegistry.getInstance().getCachedMethod(\"cordova.js11_\" + __coltScope)\n                        if (_colt24 == null) {\n                            try {\n                                _colt24 = eval(LiveCodeRegistry.getInstance().getMethod(\"cordova.js11\"));\n                            } catch (e) {\n                                LogUtil.log(\"error\", \"\", \"\", \"cordova.js\", \"live method cordova.js[11]: function(evt, handler, capture) execute error: \" + e.message, e);\n                                return;\n                            }\n                            LiveCodeRegistry.getInstance().putCachedMethod(\"cordova.js11_\" + __coltScope, _colt24)\n                        }\n                        return _colt24.apply(this, arguments)\n            };\n  window.removeEventListener = function(evt, handler, capture) {\n  \n                        var _colt25 = LiveCodeRegistry.getInstance().getCachedMethod(\"cordova.js12_\" + __coltScope)\n                        if (_colt25 == null) {\n                            try {\n                                _colt25 = eval(LiveCodeRegistry.getInstance().getMethod(\"cordova.js12\"));\n                            } catch (e) {\n                                LogUtil.log(\"error\", \"\", \"\", \"cordova.js\", \"live method cordova.js[12]: function(evt, handler, capture) execute error: \" + e.message, e);\n                                return;\n                            }\n                            LiveCodeRegistry.getInstance().putCachedMethod(\"cordova.js12_\" + __coltScope, _colt25)\n                        }\n                        return _colt25.apply(this, arguments)\n            };\n  function createEvent(type, data) {\n    \n                        var _colt26 = LiveCodeRegistry.getInstance().getCachedMethod(\"cordova.js13_\" + __coltScope)\n                        if (_colt26 == null) {\n                            try {\n                                _colt26 = eval(LiveCodeRegistry.getInstance().getMethod(\"cordova.js13\"));\n                            } catch (e) {\n                                LogUtil.log(\"error\", \"\", \"\", \"cordova.js\", \"live method cordova.js[13]: function createEvent(type, data) execute error: \" + e.message, e);\n                                return;\n                            }\n                            LiveCodeRegistry.getInstance().putCachedMethod(\"cordova.js13_\" + __coltScope, _colt26)\n                        }\n                        return _colt26.apply(this, arguments)\n              }\n  var cordova = {define: define, require: require, version: CORDOVA_JS_BUILD_LABEL, platformId: platform.id, addWindowEventHandler: function(event) {\n  \n                        var _colt27 = LiveCodeRegistry.getInstance().getCachedMethod(\"cordova.js14_\" + __coltScope)\n                        if (_colt27 == null) {\n                            try {\n                                _colt27 = eval(LiveCodeRegistry.getInstance().getMethod(\"cordova.js14\"));\n                            } catch (e) {\n                                LogUtil.log(\"error\", \"\", \"\", \"cordova.js\", \"live method cordova.js[14]: function(event) execute error: \" + e.message, e);\n                                return;\n                            }\n                            LiveCodeRegistry.getInstance().putCachedMethod(\"cordova.js14_\" + __coltScope, _colt27)\n                        }\n                        return _colt27.apply(this, arguments)\n            }, addStickyDocumentEventHandler: function(event) {\n  \n                        var _colt28 = LiveCodeRegistry.getInstance().getCachedMethod(\"cordova.js15_\" + __coltScope)\n                        if (_colt28 == null) {\n                            try {\n                                _colt28 = eval(LiveCodeRegistry.getInstance().getMethod(\"cordova.js15\"));\n                            } catch (e) {\n                                LogUtil.log(\"error\", \"\", \"\", \"cordova.js\", \"live method cordova.js[15]: function(event) execute error: \" + e.message, e);\n                                return;\n                            }\n                            LiveCodeRegistry.getInstance().putCachedMethod(\"cordova.js15_\" + __coltScope, _colt28)\n                        }\n                        return _colt28.apply(this, arguments)\n            }, addDocumentEventHandler: function(event) {\n  \n                        var _colt29 = LiveCodeRegistry.getInstance().getCachedMethod(\"cordova.js16_\" + __coltScope)\n                        if (_colt29 == null) {\n                            try {\n                                _colt29 = eval(LiveCodeRegistry.getInstance().getMethod(\"cordova.js16\"));\n                            } catch (e) {\n                                LogUtil.log(\"error\", \"\", \"\", \"cordova.js\", \"live method cordova.js[16]: function(event) execute error: \" + e.message, e);\n                                return;\n                            }\n                            LiveCodeRegistry.getInstance().putCachedMethod(\"cordova.js16_\" + __coltScope, _colt29)\n                        }\n                        return _colt29.apply(this, arguments)\n            }, removeWindowEventHandler: function(event) {\n  \n                        var _colt2a = LiveCodeRegistry.getInstance().getCachedMethod(\"cordova.js17_\" + __coltScope)\n                        if (_colt2a == null) {\n                            try {\n                                _colt2a = eval(LiveCodeRegistry.getInstance().getMethod(\"cordova.js17\"));\n                            } catch (e) {\n                                LogUtil.log(\"error\", \"\", \"\", \"cordova.js\", \"live method cordova.js[17]: function(event) execute error: \" + e.message, e);\n                                return;\n                            }\n                            LiveCodeRegistry.getInstance().putCachedMethod(\"cordova.js17_\" + __coltScope, _colt2a)\n                        }\n                        return _colt2a.apply(this, arguments)\n            }, removeDocumentEventHandler: function(event) {\n  \n                        var _colt2b = LiveCodeRegistry.getInstance().getCachedMethod(\"cordova.js18_\" + __coltScope)\n                        if (_colt2b == null) {\n                            try {\n                                _colt2b = eval(LiveCodeRegistry.getInstance().getMethod(\"cordova.js18\"));\n                            } catch (e) {\n                                LogUtil.log(\"error\", \"\", \"\", \"cordova.js\", \"live method cordova.js[18]: function(event) execute error: \" + e.message, e);\n                                return;\n                            }\n                            LiveCodeRegistry.getInstance().putCachedMethod(\"cordova.js18_\" + __coltScope, _colt2b)\n                        }\n                        return _colt2b.apply(this, arguments)\n            }, getOriginalHandlers: function() {\n  \n                        var _colt2c = LiveCodeRegistry.getInstance().getCachedMethod(\"cordova.js19_\" + __coltScope)\n                        if (_colt2c == null) {\n                            try {\n                                _colt2c = eval(LiveCodeRegistry.getInstance().getMethod(\"cordova.js19\"));\n                            } catch (e) {\n                                LogUtil.log(\"error\", \"\", \"\", \"cordova.js\", \"live method cordova.js[19]: function() execute error: \" + e.message, e);\n                                return;\n                            }\n                            LiveCodeRegistry.getInstance().putCachedMethod(\"cordova.js19_\" + __coltScope, _colt2c)\n                        }\n                        return _colt2c.apply(this, arguments)\n            }, fireDocumentEvent: function(type, data, bNoDetach) {\n  \n                        var _colt2d = LiveCodeRegistry.getInstance().getCachedMethod(\"cordova.js20_\" + __coltScope)\n                        if (_colt2d == null) {\n                            try {\n                                _colt2d = eval(LiveCodeRegistry.getInstance().getMethod(\"cordova.js20\"));\n                            } catch (e) {\n                                LogUtil.log(\"error\", \"\", \"\", \"cordova.js\", \"live method cordova.js[20]: function(type, data, bNoDetach) execute error: \" + e.message, e);\n                                return;\n                            }\n                            LiveCodeRegistry.getInstance().putCachedMethod(\"cordova.js20_\" + __coltScope, _colt2d)\n                        }\n                        return _colt2d.apply(this, arguments)\n            }, fireWindowEvent: function(type, data) {\n  \n                        var _colt2f = LiveCodeRegistry.getInstance().getCachedMethod(\"cordova.js22_\" + __coltScope)\n                        if (_colt2f == null) {\n                            try {\n                                _colt2f = eval(LiveCodeRegistry.getInstance().getMethod(\"cordova.js22\"));\n                            } catch (e) {\n                                LogUtil.log(\"error\", \"\", \"\", \"cordova.js\", \"live method cordova.js[22]: function(type, data) execute error: \" + e.message, e);\n                                return;\n                            }\n                            LiveCodeRegistry.getInstance().putCachedMethod(\"cordova.js22_\" + __coltScope, _colt2f)\n                        }\n                        return _colt2f.apply(this, arguments)\n            }, callbackId: Math.floor(Math.random() * 2000000000), callbacks: {}, callbackStatus: {NO_RESULT: 0, OK: 1, CLASS_NOT_FOUND_EXCEPTION: 2, ILLEGAL_ACCESS_EXCEPTION: 3, INSTANTIATION_EXCEPTION: 4, MALFORMED_URL_EXCEPTION: 5, IO_EXCEPTION: 6, INVALID_ACTION: 7, JSON_EXCEPTION: 8, ERROR: 9}, callbackSuccess: function(callbackId, args) {\n  \n                        var _colt31 = LiveCodeRegistry.getInstance().getCachedMethod(\"cordova.js24_\" + __coltScope)\n                        if (_colt31 == null) {\n                            try {\n                                _colt31 = eval(LiveCodeRegistry.getInstance().getMethod(\"cordova.js24\"));\n                            } catch (e) {\n                                LogUtil.log(\"error\", \"\", \"\", \"cordova.js\", \"live method cordova.js[24]: function(callbackId, args) execute error: \" + e.message, e);\n                                return;\n                            }\n                            LiveCodeRegistry.getInstance().putCachedMethod(\"cordova.js24_\" + __coltScope, _colt31)\n                        }\n                        return _colt31.apply(this, arguments)\n            }, callbackError: function(callbackId, args) {\n  \n                        var _colt32 = LiveCodeRegistry.getInstance().getCachedMethod(\"cordova.js25_\" + __coltScope)\n                        if (_colt32 == null) {\n                            try {\n                                _colt32 = eval(LiveCodeRegistry.getInstance().getMethod(\"cordova.js25\"));\n                            } catch (e) {\n                                LogUtil.log(\"error\", \"\", \"\", \"cordova.js\", \"live method cordova.js[25]: function(callbackId, args) execute error: \" + e.message, e);\n                                return;\n                            }\n                            LiveCodeRegistry.getInstance().putCachedMethod(\"cordova.js25_\" + __coltScope, _colt32)\n                        }\n                        return _colt32.apply(this, arguments)\n            }, callbackFromNative: function(callbackId, success, status, args, keepCallback) {\n  \n                        var _colt33 = LiveCodeRegistry.getInstance().getCachedMethod(\"cordova.js26_\" + __coltScope)\n                        if (_colt33 == null) {\n                            try {\n                                _colt33 = eval(LiveCodeRegistry.getInstance().getMethod(\"cordova.js26\"));\n                            } catch (e) {\n                                LogUtil.log(\"error\", \"\", \"\", \"cordova.js\", \"live method cordova.js[26]: function(callbackId, success, status, args, keepCallback) execute error: \" + e.message, e);\n                                return;\n                            }\n                            LiveCodeRegistry.getInstance().putCachedMethod(\"cordova.js26_\" + __coltScope, _colt33)\n                        }\n                        return _colt33.apply(this, arguments)\n            }, addConstructor: function(func) {\n  \n                        var _colt34 = LiveCodeRegistry.getInstance().getCachedMethod(\"cordova.js27_\" + __coltScope)\n                        if (_colt34 == null) {\n                            try {\n                                _colt34 = eval(LiveCodeRegistry.getInstance().getMethod(\"cordova.js27\"));\n                            } catch (e) {\n                                LogUtil.log(\"error\", \"\", \"\", \"cordova.js\", \"live method cordova.js[27]: function(func) execute error: \" + e.message, e);\n                                return;\n                            }\n                            LiveCodeRegistry.getInstance().putCachedMethod(\"cordova.js27_\" + __coltScope, _colt34)\n                        }\n                        return _colt34.apply(this, arguments)\n            }};\n  module.exports = cordova;\n  \n                    } catch (e) {\n                        LogUtil.log(\"error\", \"\", \"\", \"cordova.js\", \"live method cordova.js[8]: function(require, exports, module) execute error: \" + e.message, e);\n                    } finally {\n                        LiveCodingCodeFlowUtil.checkRecursion2(\"cordova.js[8]: function(require, exports, module)\");\n                    }\n                })")
LiveCodeRegistry.getInstance().putMethod("cordova.js9", "(function(evt, handler, capture) {\n  \n                    var __coltScope = LiveCodeRegistry.getInstance().getScope();\n                    LiveCodingCodeFlowUtil.checkRecursion(\"cordova.js[9]: function(evt, handler, capture)\"); try {\n                  var e = evt.toLowerCase();\n  if (typeof documentEventHandlers[e] != \'undefined\') \n  {\n    documentEventHandlers[e].subscribe(handler);\n  } else {\n    m_document_addEventListener.call(document, evt, handler, capture);\n  }\n  \n                    } catch (e) {\n                        LogUtil.log(\"error\", \"\", \"\", \"cordova.js\", \"live method cordova.js[9]: function(evt, handler, capture) execute error: \" + e.message, e);\n                    } finally {\n                        LiveCodingCodeFlowUtil.checkRecursion2(\"cordova.js[9]: function(evt, handler, capture)\");\n                    }\n                })")
LiveCodeRegistry.getInstance().putMethod("cordova.js10", "(function(evt, handler, capture) {\n  \n                    var __coltScope = LiveCodeRegistry.getInstance().getScope();\n                    LiveCodingCodeFlowUtil.checkRecursion(\"cordova.js[10]: function(evt, handler, capture)\"); try {\n                  var e = evt.toLowerCase();\n  if (typeof windowEventHandlers[e] != \'undefined\') \n  {\n    windowEventHandlers[e].subscribe(handler);\n  } else {\n    m_window_addEventListener.call(window, evt, handler, capture);\n  }\n  \n                    } catch (e) {\n                        LogUtil.log(\"error\", \"\", \"\", \"cordova.js\", \"live method cordova.js[10]: function(evt, handler, capture) execute error: \" + e.message, e);\n                    } finally {\n                        LiveCodingCodeFlowUtil.checkRecursion2(\"cordova.js[10]: function(evt, handler, capture)\");\n                    }\n                })")
LiveCodeRegistry.getInstance().putMethod("cordova.js11", "(function(evt, handler, capture) {\n  \n                    var __coltScope = LiveCodeRegistry.getInstance().getScope();\n                    LiveCodingCodeFlowUtil.checkRecursion(\"cordova.js[11]: function(evt, handler, capture)\"); try {\n                  var e = evt.toLowerCase();\n  if (typeof documentEventHandlers[e] != \"undefined\") \n  {\n    documentEventHandlers[e].unsubscribe(handler);\n  } else {\n    m_document_removeEventListener.call(document, evt, handler, capture);\n  }\n  \n                    } catch (e) {\n                        LogUtil.log(\"error\", \"\", \"\", \"cordova.js\", \"live method cordova.js[11]: function(evt, handler, capture) execute error: \" + e.message, e);\n                    } finally {\n                        LiveCodingCodeFlowUtil.checkRecursion2(\"cordova.js[11]: function(evt, handler, capture)\");\n                    }\n                })")
LiveCodeRegistry.getInstance().putMethod("cordova.js12", "(function(evt, handler, capture) {\n  \n                    var __coltScope = LiveCodeRegistry.getInstance().getScope();\n                    LiveCodingCodeFlowUtil.checkRecursion(\"cordova.js[12]: function(evt, handler, capture)\"); try {\n                  var e = evt.toLowerCase();\n  if (typeof windowEventHandlers[e] != \"undefined\") \n  {\n    windowEventHandlers[e].unsubscribe(handler);\n  } else {\n    m_window_removeEventListener.call(window, evt, handler, capture);\n  }\n  \n                    } catch (e) {\n                        LogUtil.log(\"error\", \"\", \"\", \"cordova.js\", \"live method cordova.js[12]: function(evt, handler, capture) execute error: \" + e.message, e);\n                    } finally {\n                        LiveCodingCodeFlowUtil.checkRecursion2(\"cordova.js[12]: function(evt, handler, capture)\");\n                    }\n                })")
LiveCodeRegistry.getInstance().putMethod("cordova.js13", "(function(type, data) {\n  \n                    var __coltScope = LiveCodeRegistry.getInstance().getScope();\n                    LiveCodingCodeFlowUtil.checkRecursion(\"cordova.js[13]: function createEvent(type, data)\"); try {\n                  var event = document.createEvent(\'Events\');\n  event.initEvent(type, false, false);\n  if (data) \n  {\n    \n                                    var _colt0 = \"_colt0_\" + Date.now();\n                                    for (var i in data) \n      {\n        \n                                    LiveCodingCodeFlowUtil.checkLoop(_colt0);\n                                        if (data.hasOwnProperty(i)) \n        {\n          event[i] = data[i];\n        }\n      }\n    \n                                    LiveCodingCodeFlowUtil.checkLoop(\"\");\n                                  }\n  return event;\n  \n                    } catch (e) {\n                        LogUtil.log(\"error\", \"\", \"\", \"cordova.js\", \"live method cordova.js[13]: function createEvent(type, data) execute error: \" + e.message, e);\n                    } finally {\n                        LiveCodingCodeFlowUtil.checkRecursion2(\"cordova.js[13]: function createEvent(type, data)\");\n                    }\n                })")
LiveCodeRegistry.getInstance().putMethod("cordova.js14", "(function(event) {\n  \n                    var __coltScope = LiveCodeRegistry.getInstance().getScope();\n                    LiveCodingCodeFlowUtil.checkRecursion(\"cordova.js[14]: function(event)\"); try {\n                  return (windowEventHandlers[event] = channel.create(event));\n  \n                    } catch (e) {\n                        LogUtil.log(\"error\", \"\", \"\", \"cordova.js\", \"live method cordova.js[14]: function(event) execute error: \" + e.message, e);\n                    } finally {\n                        LiveCodingCodeFlowUtil.checkRecursion2(\"cordova.js[14]: function(event)\");\n                    }\n                })")
LiveCodeRegistry.getInstance().putMethod("cordova.js15", "(function(event) {\n  \n                    var __coltScope = LiveCodeRegistry.getInstance().getScope();\n                    LiveCodingCodeFlowUtil.checkRecursion(\"cordova.js[15]: function(event)\"); try {\n                  return (documentEventHandlers[event] = channel.createSticky(event));\n  \n                    } catch (e) {\n                        LogUtil.log(\"error\", \"\", \"\", \"cordova.js\", \"live method cordova.js[15]: function(event) execute error: \" + e.message, e);\n                    } finally {\n                        LiveCodingCodeFlowUtil.checkRecursion2(\"cordova.js[15]: function(event)\");\n                    }\n                })")
LiveCodeRegistry.getInstance().putMethod("cordova.js16", "(function(event) {\n  \n                    var __coltScope = LiveCodeRegistry.getInstance().getScope();\n                    LiveCodingCodeFlowUtil.checkRecursion(\"cordova.js[16]: function(event)\"); try {\n                  return (documentEventHandlers[event] = channel.create(event));\n  \n                    } catch (e) {\n                        LogUtil.log(\"error\", \"\", \"\", \"cordova.js\", \"live method cordova.js[16]: function(event) execute error: \" + e.message, e);\n                    } finally {\n                        LiveCodingCodeFlowUtil.checkRecursion2(\"cordova.js[16]: function(event)\");\n                    }\n                })")
LiveCodeRegistry.getInstance().putMethod("cordova.js17", "(function(event) {\n  \n                    var __coltScope = LiveCodeRegistry.getInstance().getScope();\n                    LiveCodingCodeFlowUtil.checkRecursion(\"cordova.js[17]: function(event)\"); try {\n                  delete windowEventHandlers[event];\n  \n                    } catch (e) {\n                        LogUtil.log(\"error\", \"\", \"\", \"cordova.js\", \"live method cordova.js[17]: function(event) execute error: \" + e.message, e);\n                    } finally {\n                        LiveCodingCodeFlowUtil.checkRecursion2(\"cordova.js[17]: function(event)\");\n                    }\n                })")
LiveCodeRegistry.getInstance().putMethod("cordova.js18", "(function(event) {\n  \n                    var __coltScope = LiveCodeRegistry.getInstance().getScope();\n                    LiveCodingCodeFlowUtil.checkRecursion(\"cordova.js[18]: function(event)\"); try {\n                  delete documentEventHandlers[event];\n  \n                    } catch (e) {\n                        LogUtil.log(\"error\", \"\", \"\", \"cordova.js\", \"live method cordova.js[18]: function(event) execute error: \" + e.message, e);\n                    } finally {\n                        LiveCodingCodeFlowUtil.checkRecursion2(\"cordova.js[18]: function(event)\");\n                    }\n                })")
LiveCodeRegistry.getInstance().putMethod("cordova.js19", "(function() {\n  \n                    var __coltScope = LiveCodeRegistry.getInstance().getScope();\n                    LiveCodingCodeFlowUtil.checkRecursion(\"cordova.js[19]: function()\"); try {\n                  return {\'document\': {\'addEventListener\': m_document_addEventListener, \'removeEventListener\': m_document_removeEventListener}, \'window\': {\'addEventListener\': m_window_addEventListener, \'removeEventListener\': m_window_removeEventListener}};\n  \n                    } catch (e) {\n                        LogUtil.log(\"error\", \"\", \"\", \"cordova.js\", \"live method cordova.js[19]: function() execute error: \" + e.message, e);\n                    } finally {\n                        LiveCodingCodeFlowUtil.checkRecursion2(\"cordova.js[19]: function()\");\n                    }\n                })")
LiveCodeRegistry.getInstance().putMethod("cordova.js20", "(function(type, data, bNoDetach) {\n  \n                    var __coltScope = LiveCodeRegistry.getInstance().getScope();\n                    LiveCodingCodeFlowUtil.checkRecursion(\"cordova.js[20]: function(type, data, bNoDetach)\"); try {\n                  var evt = createEvent(type, data);\n  if (typeof documentEventHandlers[type] != \'undefined\') \n  {\n    if (bNoDetach) \n    {\n      documentEventHandlers[type].fire(evt);\n    } else {\n      setTimeout(function() {\n  \n                        var _colt2e = LiveCodeRegistry.getInstance().getCachedMethod(\"cordova.js21_\" + __coltScope)\n                        if (_colt2e == null) {\n                            try {\n                                _colt2e = eval(LiveCodeRegistry.getInstance().getMethod(\"cordova.js21\"));\n                            } catch (e) {\n                                LogUtil.log(\"error\", \"\", \"\", \"cordova.js\", \"live method cordova.js[21]: function() execute error: \" + e.message, e);\n                                return;\n                            }\n                            LiveCodeRegistry.getInstance().putCachedMethod(\"cordova.js21_\" + __coltScope, _colt2e)\n                        }\n                        return _colt2e.apply(this, arguments)\n            }, 0);\n    }\n  } else {\n    document.dispatchEvent(evt);\n  }\n  \n                    } catch (e) {\n                        LogUtil.log(\"error\", \"\", \"\", \"cordova.js\", \"live method cordova.js[20]: function(type, data, bNoDetach) execute error: \" + e.message, e);\n                    } finally {\n                        LiveCodingCodeFlowUtil.checkRecursion2(\"cordova.js[20]: function(type, data, bNoDetach)\");\n                    }\n                })")
LiveCodeRegistry.getInstance().putMethod("cordova.js21", "(function() {\n  \n                    var __coltScope = LiveCodeRegistry.getInstance().getScope();\n                    LiveCodingCodeFlowUtil.checkRecursion(\"cordova.js[21]: function()\"); try {\n                  if (type == \'deviceready\') \n  {\n    document.dispatchEvent(evt);\n  }\n  documentEventHandlers[type].fire(evt);\n  \n                    } catch (e) {\n                        LogUtil.log(\"error\", \"\", \"\", \"cordova.js\", \"live method cordova.js[21]: function() execute error: \" + e.message, e);\n                    } finally {\n                        LiveCodingCodeFlowUtil.checkRecursion2(\"cordova.js[21]: function()\");\n                    }\n                })")
LiveCodeRegistry.getInstance().putMethod("cordova.js22", "(function(type, data) {\n  \n                    var __coltScope = LiveCodeRegistry.getInstance().getScope();\n                    LiveCodingCodeFlowUtil.checkRecursion(\"cordova.js[22]: function(type, data)\"); try {\n                  var evt = createEvent(type, data);\n  if (typeof windowEventHandlers[type] != \'undefined\') \n  {\n    setTimeout(function() {\n  \n                        var _colt30 = LiveCodeRegistry.getInstance().getCachedMethod(\"cordova.js23_\" + __coltScope)\n                        if (_colt30 == null) {\n                            try {\n                                _colt30 = eval(LiveCodeRegistry.getInstance().getMethod(\"cordova.js23\"));\n                            } catch (e) {\n                                LogUtil.log(\"error\", \"\", \"\", \"cordova.js\", \"live method cordova.js[23]: function() execute error: \" + e.message, e);\n                                return;\n                            }\n                            LiveCodeRegistry.getInstance().putCachedMethod(\"cordova.js23_\" + __coltScope, _colt30)\n                        }\n                        return _colt30.apply(this, arguments)\n            }, 0);\n  } else {\n    window.dispatchEvent(evt);\n  }\n  \n                    } catch (e) {\n                        LogUtil.log(\"error\", \"\", \"\", \"cordova.js\", \"live method cordova.js[22]: function(type, data) execute error: \" + e.message, e);\n                    } finally {\n                        LiveCodingCodeFlowUtil.checkRecursion2(\"cordova.js[22]: function(type, data)\");\n                    }\n                })")
LiveCodeRegistry.getInstance().putMethod("cordova.js23", "(function() {\n  \n                    var __coltScope = LiveCodeRegistry.getInstance().getScope();\n                    LiveCodingCodeFlowUtil.checkRecursion(\"cordova.js[23]: function()\"); try {\n                  windowEventHandlers[type].fire(evt);\n  \n                    } catch (e) {\n                        LogUtil.log(\"error\", \"\", \"\", \"cordova.js\", \"live method cordova.js[23]: function() execute error: \" + e.message, e);\n                    } finally {\n                        LiveCodingCodeFlowUtil.checkRecursion2(\"cordova.js[23]: function()\");\n                    }\n                })")
LiveCodeRegistry.getInstance().putMethod("cordova.js24", "(function(callbackId, args) {\n  \n                    var __coltScope = LiveCodeRegistry.getInstance().getScope();\n                    LiveCodingCodeFlowUtil.checkRecursion(\"cordova.js[24]: function(callbackId, args)\"); try {\n                  try {\n    cordova.callbackFromNative(callbackId, true, args.status, [args.message], args.keepCallback);\n  }  catch (e) {\n  console.log(\"Error in error callback: \" + callbackId + \" = \" + e);\n}\n  \n                    } catch (e) {\n                        LogUtil.log(\"error\", \"\", \"\", \"cordova.js\", \"live method cordova.js[24]: function(callbackId, args) execute error: \" + e.message, e);\n                    } finally {\n                        LiveCodingCodeFlowUtil.checkRecursion2(\"cordova.js[24]: function(callbackId, args)\");\n                    }\n                })")
LiveCodeRegistry.getInstance().putMethod("cordova.js25", "(function(callbackId, args) {\n  \n                    var __coltScope = LiveCodeRegistry.getInstance().getScope();\n                    LiveCodingCodeFlowUtil.checkRecursion(\"cordova.js[25]: function(callbackId, args)\"); try {\n                  try {\n    cordova.callbackFromNative(callbackId, false, args.status, [args.message], args.keepCallback);\n  }  catch (e) {\n  console.log(\"Error in error callback: \" + callbackId + \" = \" + e);\n}\n  \n                    } catch (e) {\n                        LogUtil.log(\"error\", \"\", \"\", \"cordova.js\", \"live method cordova.js[25]: function(callbackId, args) execute error: \" + e.message, e);\n                    } finally {\n                        LiveCodingCodeFlowUtil.checkRecursion2(\"cordova.js[25]: function(callbackId, args)\");\n                    }\n                })")
LiveCodeRegistry.getInstance().putMethod("cordova.js26", "(function(callbackId, success, status, args, keepCallback) {\n  \n                    var __coltScope = LiveCodeRegistry.getInstance().getScope();\n                    LiveCodingCodeFlowUtil.checkRecursion(\"cordova.js[26]: function(callbackId, success, status, args, keepCallback)\"); try {\n                  var callback = cordova.callbacks[callbackId];\n  if (callback) \n  {\n    if (success && status == cordova.callbackStatus.OK) \n    {\n      callback.success && callback.success.apply(null, args);\n    } else if (!success) \n    {\n      callback.fail && callback.fail.apply(null, args);\n    }\n    if (!keepCallback) \n    {\n      delete cordova.callbacks[callbackId];\n    }\n  }\n  \n                    } catch (e) {\n                        LogUtil.log(\"error\", \"\", \"\", \"cordova.js\", \"live method cordova.js[26]: function(callbackId, success, status, args, keepCallback) execute error: \" + e.message, e);\n                    } finally {\n                        LiveCodingCodeFlowUtil.checkRecursion2(\"cordova.js[26]: function(callbackId, success, status, args, keepCallback)\");\n                    }\n                })")
LiveCodeRegistry.getInstance().putMethod("cordova.js27", "(function(func) {\n  \n                    var __coltScope = LiveCodeRegistry.getInstance().getScope();\n                    LiveCodingCodeFlowUtil.checkRecursion(\"cordova.js[27]: function(func)\"); try {\n                  channel.onCordovaReady.subscribe(function() {\n  \n                        var _colt35 = LiveCodeRegistry.getInstance().getCachedMethod(\"cordova.js28_\" + __coltScope)\n                        if (_colt35 == null) {\n                            try {\n                                _colt35 = eval(LiveCodeRegistry.getInstance().getMethod(\"cordova.js28\"));\n                            } catch (e) {\n                                LogUtil.log(\"error\", \"\", \"\", \"cordova.js\", \"live method cordova.js[28]: function() execute error: \" + e.message, e);\n                                return;\n                            }\n                            LiveCodeRegistry.getInstance().putCachedMethod(\"cordova.js28_\" + __coltScope, _colt35)\n                        }\n                        return _colt35.apply(this, arguments)\n            });\n  \n                    } catch (e) {\n                        LogUtil.log(\"error\", \"\", \"\", \"cordova.js\", \"live method cordova.js[27]: function(func) execute error: \" + e.message, e);\n                    } finally {\n                        LiveCodingCodeFlowUtil.checkRecursion2(\"cordova.js[27]: function(func)\");\n                    }\n                })")
LiveCodeRegistry.getInstance().putMethod("cordova.js28", "(function() {\n  \n                    var __coltScope = LiveCodeRegistry.getInstance().getScope();\n                    LiveCodingCodeFlowUtil.checkRecursion(\"cordova.js[28]: function()\"); try {\n                  try {\n    func();\n  }  catch (e) {\n  console.log(\"Failed to run constructor: \" + e);\n}\n  \n                    } catch (e) {\n                        LogUtil.log(\"error\", \"\", \"\", \"cordova.js\", \"live method cordova.js[28]: function() execute error: \" + e.message, e);\n                    } finally {\n                        LiveCodingCodeFlowUtil.checkRecursion2(\"cordova.js[28]: function()\");\n                    }\n                })")
LiveCodeRegistry.getInstance().putMethod("cordova.js29", "(function(require, exports, module) {\n  \n                    var __coltScope = LiveCodeRegistry.getInstance().getScope();\n                    LiveCodingCodeFlowUtil.checkRecursion(\"cordova.js[29]: function(require, exports, module)\"); try {\n                  var exec = require(\'cordova\/exec\');\n  var utils = require(\'cordova\/utils\');\n  var moduleExports = module.exports;\n  var typeMap = {\'A\': \'Array\', \'D\': \'Date\', \'N\': \'Number\', \'S\': \'String\', \'F\': \'Function\', \'O\': \'Object\'};\n  function extractParamName(callee, argIndex) {\n    \n                        var _colt37 = LiveCodeRegistry.getInstance().getCachedMethod(\"cordova.js30_\" + __coltScope)\n                        if (_colt37 == null) {\n                            try {\n                                _colt37 = eval(LiveCodeRegistry.getInstance().getMethod(\"cordova.js30\"));\n                            } catch (e) {\n                                LogUtil.log(\"error\", \"\", \"\", \"cordova.js\", \"live method cordova.js[30]: function extractParamName(callee, argIndex) execute error: \" + e.message, e);\n                                return;\n                            }\n                            LiveCodeRegistry.getInstance().putCachedMethod(\"cordova.js30_\" + __coltScope, _colt37)\n                        }\n                        return _colt37.apply(this, arguments)\n              }\n  function checkArgs(spec, functionName, args, opt_callee) {\n    \n                        var _colt38 = LiveCodeRegistry.getInstance().getCachedMethod(\"cordova.js31_\" + __coltScope)\n                        if (_colt38 == null) {\n                            try {\n                                _colt38 = eval(LiveCodeRegistry.getInstance().getMethod(\"cordova.js31\"));\n                            } catch (e) {\n                                LogUtil.log(\"error\", \"\", \"\", \"cordova.js\", \"live method cordova.js[31]: function checkArgs(spec, functionName, args, opt_callee) execute error: \" + e.message, e);\n                                return;\n                            }\n                            LiveCodeRegistry.getInstance().putCachedMethod(\"cordova.js31_\" + __coltScope, _colt38)\n                        }\n                        return _colt38.apply(this, arguments)\n              }\n  function getValue(value, defaultValue) {\n    \n                        var _colt39 = LiveCodeRegistry.getInstance().getCachedMethod(\"cordova.js34_\" + __coltScope)\n                        if (_colt39 == null) {\n                            try {\n                                _colt39 = eval(LiveCodeRegistry.getInstance().getMethod(\"cordova.js34\"));\n                            } catch (e) {\n                                LogUtil.log(\"error\", \"\", \"\", \"cordova.js\", \"live method cordova.js[34]: function getValue(value, defaultValue) execute error: \" + e.message, e);\n                                return;\n                            }\n                            LiveCodeRegistry.getInstance().putCachedMethod(\"cordova.js34_\" + __coltScope, _colt39)\n                        }\n                        return _colt39.apply(this, arguments)\n              }\n  moduleExports.checkArgs = checkArgs;\n  moduleExports.getValue = getValue;\n  moduleExports.enableChecks = true;\n  \n                    } catch (e) {\n                        LogUtil.log(\"error\", \"\", \"\", \"cordova.js\", \"live method cordova.js[29]: function(require, exports, module) execute error: \" + e.message, e);\n                    } finally {\n                        LiveCodingCodeFlowUtil.checkRecursion2(\"cordova.js[29]: function(require, exports, module)\");\n                    }\n                })")
LiveCodeRegistry.getInstance().putMethod("cordova.js30", "(function(callee, argIndex) {\n  \n                    var __coltScope = LiveCodeRegistry.getInstance().getScope();\n                    LiveCodingCodeFlowUtil.checkRecursion(\"cordova.js[30]: function extractParamName(callee, argIndex)\"); try {\n                  return (\/.*?\\((.*?)\\)\/).exec(callee)[1].split(\', \')[argIndex];\n  \n                    } catch (e) {\n                        LogUtil.log(\"error\", \"\", \"\", \"cordova.js\", \"live method cordova.js[30]: function extractParamName(callee, argIndex) execute error: \" + e.message, e);\n                    } finally {\n                        LiveCodingCodeFlowUtil.checkRecursion2(\"cordova.js[30]: function extractParamName(callee, argIndex)\");\n                    }\n                })")
LiveCodeRegistry.getInstance().putMethod("cordova.js31", "(function(spec, functionName, args, opt_callee) {\n  \n                    var __coltScope = LiveCodeRegistry.getInstance().getScope();\n                    LiveCodingCodeFlowUtil.checkRecursion(\"cordova.js[31]: function checkArgs(spec, functionName, args, opt_callee)\"); try {\n                  if (!moduleExports.enableChecks) \n  {\n    return;\n  }\n  var errMsg = null;\n  var typeName;\n  \n                                    var _colt1 = \"_colt1_\" + Date.now();\n                                  for (var i = 0; i < spec.length; ++i) \n    {\n      \n                                    LiveCodingCodeFlowUtil.checkLoop(_colt1);\n                                      var c = spec.charAt(i), cUpper = c.toUpperCase(), arg = args[i];\n      if (c == \'*\') \n      {\n        continue;\n      }\n      typeName = utils.typeName(arg);\n      if ((arg === null || arg === undefined) && c == cUpper) \n      {\n        continue;\n      }\n      if (typeName != typeMap[cUpper]) \n      {\n        errMsg = \'Expected \' + typeMap[cUpper];\n        break;\n      }\n    }\n  \n                                    LiveCodingCodeFlowUtil.checkLoop(\"\");\n                                  if (errMsg) \n  {\n    errMsg += \', but got \' + typeName + \'.\';\n    errMsg = \'Wrong type for parameter \"\' + extractParamName(opt_callee || args.callee, i) + \'\" of \' + functionName + \': \' + errMsg;\n    if (typeof jasmine == \'undefined\') \n    {\n      console.error(errMsg);\n    }\n    throw TypeError(errMsg);\n  }\n  \n                    } catch (e) {\n                        LogUtil.log(\"error\", \"\", \"\", \"cordova.js\", \"live method cordova.js[31]: function checkArgs(spec, functionName, args, opt_callee) execute error: \" + e.message, e);\n                    } finally {\n                        LiveCodingCodeFlowUtil.checkRecursion2(\"cordova.js[31]: function checkArgs(spec, functionName, args, opt_callee)\");\n                    }\n                })")
LiveCodeRegistry.getInstance().putMethod("cordova.js34", "(function(value, defaultValue) {\n  \n                    var __coltScope = LiveCodeRegistry.getInstance().getScope();\n                    LiveCodingCodeFlowUtil.checkRecursion(\"cordova.js[34]: function getValue(value, defaultValue)\"); try {\n                  return value === undefined ? defaultValue : value;\n  \n                    } catch (e) {\n                        LogUtil.log(\"error\", \"\", \"\", \"cordova.js\", \"live method cordova.js[34]: function getValue(value, defaultValue) execute error: \" + e.message, e);\n                    } finally {\n                        LiveCodingCodeFlowUtil.checkRecursion2(\"cordova.js[34]: function getValue(value, defaultValue)\");\n                    }\n                })")
LiveCodeRegistry.getInstance().putMethod("cordova.js35", "(function(require, exports, module) {\n  \n                    var __coltScope = LiveCodeRegistry.getInstance().getScope();\n                    LiveCodingCodeFlowUtil.checkRecursion(\"cordova.js[35]: function(require, exports, module)\"); try {\n                  var base64 = exports;\n  base64.fromArrayBuffer = function(arrayBuffer) {\n  \n                        var _colt3b = LiveCodeRegistry.getInstance().getCachedMethod(\"cordova.js36_\" + __coltScope)\n                        if (_colt3b == null) {\n                            try {\n                                _colt3b = eval(LiveCodeRegistry.getInstance().getMethod(\"cordova.js36\"));\n                            } catch (e) {\n                                LogUtil.log(\"error\", \"\", \"\", \"cordova.js\", \"live method cordova.js[36]: function(arrayBuffer) execute error: \" + e.message, e);\n                                return;\n                            }\n                            LiveCodeRegistry.getInstance().putCachedMethod(\"cordova.js36_\" + __coltScope, _colt3b)\n                        }\n                        return _colt3b.apply(this, arguments)\n            };\n  var b64_6bit = \"ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+\/\";\n  var b64_12bit;\n  var b64_12bitTable = function() {\n  \n                        var _colt3c = LiveCodeRegistry.getInstance().getCachedMethod(\"cordova.js37_\" + __coltScope)\n                        if (_colt3c == null) {\n                            try {\n                                _colt3c = eval(LiveCodeRegistry.getInstance().getMethod(\"cordova.js37\"));\n                            } catch (e) {\n                                LogUtil.log(\"error\", \"\", \"\", \"cordova.js\", \"live method cordova.js[37]: function() execute error: \" + e.message, e);\n                                return;\n                            }\n                            LiveCodeRegistry.getInstance().putCachedMethod(\"cordova.js37_\" + __coltScope, _colt3c)\n                        }\n                        return _colt3c.apply(this, arguments)\n            };\n  function uint8ToBase64(rawData) {\n    \n                        var _colt3e = LiveCodeRegistry.getInstance().getCachedMethod(\"cordova.js39_\" + __coltScope)\n                        if (_colt3e == null) {\n                            try {\n                                _colt3e = eval(LiveCodeRegistry.getInstance().getMethod(\"cordova.js39\"));\n                            } catch (e) {\n                                LogUtil.log(\"error\", \"\", \"\", \"cordova.js\", \"live method cordova.js[39]: function uint8ToBase64(rawData) execute error: \" + e.message, e);\n                                return;\n                            }\n                            LiveCodeRegistry.getInstance().putCachedMethod(\"cordova.js39_\" + __coltScope, _colt3e)\n                        }\n                        return _colt3e.apply(this, arguments)\n              }\n  \n                    } catch (e) {\n                        LogUtil.log(\"error\", \"\", \"\", \"cordova.js\", \"live method cordova.js[35]: function(require, exports, module) execute error: \" + e.message, e);\n                    } finally {\n                        LiveCodingCodeFlowUtil.checkRecursion2(\"cordova.js[35]: function(require, exports, module)\");\n                    }\n                })")
LiveCodeRegistry.getInstance().putMethod("cordova.js36", "(function(arrayBuffer) {\n  \n                    var __coltScope = LiveCodeRegistry.getInstance().getScope();\n                    LiveCodingCodeFlowUtil.checkRecursion(\"cordova.js[36]: function(arrayBuffer)\"); try {\n                  var array = new Uint8Array(arrayBuffer);\n  return uint8ToBase64(array);\n  \n                    } catch (e) {\n                        LogUtil.log(\"error\", \"\", \"\", \"cordova.js\", \"live method cordova.js[36]: function(arrayBuffer) execute error: \" + e.message, e);\n                    } finally {\n                        LiveCodingCodeFlowUtil.checkRecursion2(\"cordova.js[36]: function(arrayBuffer)\");\n                    }\n                })")
LiveCodeRegistry.getInstance().putMethod("cordova.js37", "(function() {\n  \n                    var __coltScope = LiveCodeRegistry.getInstance().getScope();\n                    LiveCodingCodeFlowUtil.checkRecursion(\"cordova.js[37]: function()\"); try {\n                  b64_12bit = [];\n  \n                                    var _colt2 = \"_colt2_\" + Date.now();\n                                  for (var i = 0; i < 64; i++) \n    {\n      \n                                    LiveCodingCodeFlowUtil.checkLoop(_colt2);\n                                      \n                                    var _colt3 = \"_colt3_\" + Date.now();\n                                      for (var j = 0; j < 64; j++) \n        {\n          \n                                    LiveCodingCodeFlowUtil.checkLoop(_colt3);\n                                          b64_12bit[i * 64 + j] = b64_6bit[i] + b64_6bit[j];\n        }\n      \n                                    LiveCodingCodeFlowUtil.checkLoop(\"\");\n                                    }\n  \n                                    LiveCodingCodeFlowUtil.checkLoop(\"\");\n                                  b64_12bitTable = function() {\n  \n                        var _colt3d = LiveCodeRegistry.getInstance().getCachedMethod(\"cordova.js38_\" + __coltScope)\n                        if (_colt3d == null) {\n                            try {\n                                _colt3d = eval(LiveCodeRegistry.getInstance().getMethod(\"cordova.js38\"));\n                            } catch (e) {\n                                LogUtil.log(\"error\", \"\", \"\", \"cordova.js\", \"live method cordova.js[38]: function() execute error: \" + e.message, e);\n                                return;\n                            }\n                            LiveCodeRegistry.getInstance().putCachedMethod(\"cordova.js38_\" + __coltScope, _colt3d)\n                        }\n                        return _colt3d.apply(this, arguments)\n            };\n  return b64_12bit;\n  \n                    } catch (e) {\n                        LogUtil.log(\"error\", \"\", \"\", \"cordova.js\", \"live method cordova.js[37]: function() execute error: \" + e.message, e);\n                    } finally {\n                        LiveCodingCodeFlowUtil.checkRecursion2(\"cordova.js[37]: function()\");\n                    }\n                })")
LiveCodeRegistry.getInstance().putMethod("cordova.js38", "(function() {\n  \n                    var __coltScope = LiveCodeRegistry.getInstance().getScope();\n                    LiveCodingCodeFlowUtil.checkRecursion(\"cordova.js[38]: function()\"); try {\n                  return b64_12bit;\n  \n                    } catch (e) {\n                        LogUtil.log(\"error\", \"\", \"\", \"cordova.js\", \"live method cordova.js[38]: function() execute error: \" + e.message, e);\n                    } finally {\n                        LiveCodingCodeFlowUtil.checkRecursion2(\"cordova.js[38]: function()\");\n                    }\n                })")
LiveCodeRegistry.getInstance().putMethod("cordova.js39", "(function(rawData) {\n  \n                    var __coltScope = LiveCodeRegistry.getInstance().getScope();\n                    LiveCodingCodeFlowUtil.checkRecursion(\"cordova.js[39]: function uint8ToBase64(rawData)\"); try {\n                  var numBytes = rawData.byteLength;\n  var output = \"\";\n  var segment;\n  var table = b64_12bitTable();\n  \n                                    var _colt4 = \"_colt4_\" + Date.now();\n                                  for (var i = 0; i < numBytes - 2; i += 3) \n    {\n      \n                                    LiveCodingCodeFlowUtil.checkLoop(_colt4);\n                                      segment = (rawData[i] << 16) + (rawData[i + 1] << 8) + rawData[i + 2];\n      output += table[segment >> 12];\n      output += table[segment & 0xfff];\n    }\n  \n                                    LiveCodingCodeFlowUtil.checkLoop(\"\");\n                                  if (numBytes - i == 2) \n  {\n    segment = (rawData[i] << 16) + (rawData[i + 1] << 8);\n    output += table[segment >> 12];\n    output += b64_6bit[(segment & 0xfff) >> 6];\n    output += \'=\';\n  } else if (numBytes - i == 1) \n  {\n    segment = (rawData[i] << 16);\n    output += table[segment >> 12];\n    output += \'==\';\n  }\n  return output;\n  \n                    } catch (e) {\n                        LogUtil.log(\"error\", \"\", \"\", \"cordova.js\", \"live method cordova.js[39]: function uint8ToBase64(rawData) execute error: \" + e.message, e);\n                    } finally {\n                        LiveCodingCodeFlowUtil.checkRecursion2(\"cordova.js[39]: function uint8ToBase64(rawData)\");\n                    }\n                })")
LiveCodeRegistry.getInstance().putMethod("cordova.js40", "(function(require, exports, module) {\n  \n                    var __coltScope = LiveCodeRegistry.getInstance().getScope();\n                    LiveCodingCodeFlowUtil.checkRecursion(\"cordova.js[40]: function(require, exports, module)\"); try {\n                  var utils = require(\'cordova\/utils\');\n  function each(objects, func, context) {\n    \n                        var _colt40 = LiveCodeRegistry.getInstance().getCachedMethod(\"cordova.js41_\" + __coltScope)\n                        if (_colt40 == null) {\n                            try {\n                                _colt40 = eval(LiveCodeRegistry.getInstance().getMethod(\"cordova.js41\"));\n                            } catch (e) {\n                                LogUtil.log(\"error\", \"\", \"\", \"cordova.js\", \"live method cordova.js[41]: function each(objects, func, context) execute error: \" + e.message, e);\n                                return;\n                            }\n                            LiveCodeRegistry.getInstance().putCachedMethod(\"cordova.js41_\" + __coltScope, _colt40)\n                        }\n                        return _colt40.apply(this, arguments)\n              }\n  function clobber(obj, key, value) {\n    \n                        var _colt41 = LiveCodeRegistry.getInstance().getCachedMethod(\"cordova.js42_\" + __coltScope)\n                        if (_colt41 == null) {\n                            try {\n                                _colt41 = eval(LiveCodeRegistry.getInstance().getMethod(\"cordova.js42\"));\n                            } catch (e) {\n                                LogUtil.log(\"error\", \"\", \"\", \"cordova.js\", \"live method cordova.js[42]: function clobber(obj, key, value) execute error: \" + e.message, e);\n                                return;\n                            }\n                            LiveCodeRegistry.getInstance().putCachedMethod(\"cordova.js42_\" + __coltScope, _colt41)\n                        }\n                        return _colt41.apply(this, arguments)\n              }\n  function assignOrWrapInDeprecateGetter(obj, key, value, message) {\n    \n                        var _colt43 = LiveCodeRegistry.getInstance().getCachedMethod(\"cordova.js44_\" + __coltScope)\n                        if (_colt43 == null) {\n                            try {\n                                _colt43 = eval(LiveCodeRegistry.getInstance().getMethod(\"cordova.js44\"));\n                            } catch (e) {\n                                LogUtil.log(\"error\", \"\", \"\", \"cordova.js\", \"live method cordova.js[44]: function assignOrWrapInDeprecateGetter(obj, key, value, message) execute error: \" + e.message, e);\n                                return;\n                            }\n                            LiveCodeRegistry.getInstance().putCachedMethod(\"cordova.js44_\" + __coltScope, _colt43)\n                        }\n                        return _colt43.apply(this, arguments)\n              }\n  function include(parent, objects, clobber, merge) {\n    \n                        var _colt45 = LiveCodeRegistry.getInstance().getCachedMethod(\"cordova.js46_\" + __coltScope)\n                        if (_colt45 == null) {\n                            try {\n                                _colt45 = eval(LiveCodeRegistry.getInstance().getMethod(\"cordova.js46\"));\n                            } catch (e) {\n                                LogUtil.log(\"error\", \"\", \"\", \"cordova.js\", \"live method cordova.js[46]: function include(parent, objects, clobber, merge) execute error: \" + e.message, e);\n                                return;\n                            }\n                            LiveCodeRegistry.getInstance().putCachedMethod(\"cordova.js46_\" + __coltScope, _colt45)\n                        }\n                        return _colt45.apply(this, arguments)\n              }\n  function recursiveMerge(target, src) {\n    \n                        var _colt47 = LiveCodeRegistry.getInstance().getCachedMethod(\"cordova.js48_\" + __coltScope)\n                        if (_colt47 == null) {\n                            try {\n                                _colt47 = eval(LiveCodeRegistry.getInstance().getMethod(\"cordova.js48\"));\n                            } catch (e) {\n                                LogUtil.log(\"error\", \"\", \"\", \"cordova.js\", \"live method cordova.js[48]: function recursiveMerge(target, src) execute error: \" + e.message, e);\n                                return;\n                            }\n                            LiveCodeRegistry.getInstance().putCachedMethod(\"cordova.js48_\" + __coltScope, _colt47)\n                        }\n                        return _colt47.apply(this, arguments)\n              }\n  exports.buildIntoButDoNotClobber = function(objects, target) {\n  \n                        var _colt48 = LiveCodeRegistry.getInstance().getCachedMethod(\"cordova.js49_\" + __coltScope)\n                        if (_colt48 == null) {\n                            try {\n                                _colt48 = eval(LiveCodeRegistry.getInstance().getMethod(\"cordova.js49\"));\n                            } catch (e) {\n                                LogUtil.log(\"error\", \"\", \"\", \"cordova.js\", \"live method cordova.js[49]: function(objects, target) execute error: \" + e.message, e);\n                                return;\n                            }\n                            LiveCodeRegistry.getInstance().putCachedMethod(\"cordova.js49_\" + __coltScope, _colt48)\n                        }\n                        return _colt48.apply(this, arguments)\n            };\n  exports.buildIntoAndClobber = function(objects, target) {\n  \n                        var _colt49 = LiveCodeRegistry.getInstance().getCachedMethod(\"cordova.js50_\" + __coltScope)\n                        if (_colt49 == null) {\n                            try {\n                                _colt49 = eval(LiveCodeRegistry.getInstance().getMethod(\"cordova.js50\"));\n                            } catch (e) {\n                                LogUtil.log(\"error\", \"\", \"\", \"cordova.js\", \"live method cordova.js[50]: function(objects, target) execute error: \" + e.message, e);\n                                return;\n                            }\n                            LiveCodeRegistry.getInstance().putCachedMethod(\"cordova.js50_\" + __coltScope, _colt49)\n                        }\n                        return _colt49.apply(this, arguments)\n            };\n  exports.buildIntoAndMerge = function(objects, target) {\n  \n                        var _colt4a = LiveCodeRegistry.getInstance().getCachedMethod(\"cordova.js51_\" + __coltScope)\n                        if (_colt4a == null) {\n                            try {\n                                _colt4a = eval(LiveCodeRegistry.getInstance().getMethod(\"cordova.js51\"));\n                            } catch (e) {\n                                LogUtil.log(\"error\", \"\", \"\", \"cordova.js\", \"live method cordova.js[51]: function(objects, target) execute error: \" + e.message, e);\n                                return;\n                            }\n                            LiveCodeRegistry.getInstance().putCachedMethod(\"cordova.js51_\" + __coltScope, _colt4a)\n                        }\n                        return _colt4a.apply(this, arguments)\n            };\n  exports.recursiveMerge = recursiveMerge;\n  exports.assignOrWrapInDeprecateGetter = assignOrWrapInDeprecateGetter;\n  exports.replaceHookForTesting = function() {\n  \n                        var _colt4b = LiveCodeRegistry.getInstance().getCachedMethod(\"cordova.js52_\" + __coltScope)\n                        if (_colt4b == null) {\n                            try {\n                                _colt4b = eval(LiveCodeRegistry.getInstance().getMethod(\"cordova.js52\"));\n                            } catch (e) {\n                                LogUtil.log(\"error\", \"\", \"\", \"cordova.js\", \"live method cordova.js[52]: function() execute error: \" + e.message, e);\n                                return;\n                            }\n                            LiveCodeRegistry.getInstance().putCachedMethod(\"cordova.js52_\" + __coltScope, _colt4b)\n                        }\n                        return _colt4b.apply(this, arguments)\n            };\n  \n                    } catch (e) {\n                        LogUtil.log(\"error\", \"\", \"\", \"cordova.js\", \"live method cordova.js[40]: function(require, exports, module) execute error: \" + e.message, e);\n                    } finally {\n                        LiveCodingCodeFlowUtil.checkRecursion2(\"cordova.js[40]: function(require, exports, module)\");\n                    }\n                })")
LiveCodeRegistry.getInstance().putMethod("cordova.js41", "(function(objects, func, context) {\n  \n                    var __coltScope = LiveCodeRegistry.getInstance().getScope();\n                    LiveCodingCodeFlowUtil.checkRecursion(\"cordova.js[41]: function each(objects, func, context)\"); try {\n                  \n                                    var _colt5 = \"_colt5_\" + Date.now();\n                                  for (var prop in objects) \n    {\n      \n                                    LiveCodingCodeFlowUtil.checkLoop(_colt5);\n                                      if (objects.hasOwnProperty(prop)) \n      {\n        func.apply(context, [objects[prop], prop]);\n      }\n    }\n  \n                                    LiveCodingCodeFlowUtil.checkLoop(\"\");\n                                  \n                    } catch (e) {\n                        LogUtil.log(\"error\", \"\", \"\", \"cordova.js\", \"live method cordova.js[41]: function each(objects, func, context) execute error: \" + e.message, e);\n                    } finally {\n                        LiveCodingCodeFlowUtil.checkRecursion2(\"cordova.js[41]: function each(objects, func, context)\");\n                    }\n                })")
LiveCodeRegistry.getInstance().putMethod("cordova.js42", "(function(obj, key, value) {\n  \n                    var __coltScope = LiveCodeRegistry.getInstance().getScope();\n                    LiveCodingCodeFlowUtil.checkRecursion(\"cordova.js[42]: function clobber(obj, key, value)\"); try {\n                  exports.replaceHookForTesting(obj, key);\n  obj[key] = value;\n  if (obj[key] !== value) \n  {\n    utils.defineGetter(obj, key, function() {\n  \n                        var _colt42 = LiveCodeRegistry.getInstance().getCachedMethod(\"cordova.js43_\" + __coltScope)\n                        if (_colt42 == null) {\n                            try {\n                                _colt42 = eval(LiveCodeRegistry.getInstance().getMethod(\"cordova.js43\"));\n                            } catch (e) {\n                                LogUtil.log(\"error\", \"\", \"\", \"cordova.js\", \"live method cordova.js[43]: function() execute error: \" + e.message, e);\n                                return;\n                            }\n                            LiveCodeRegistry.getInstance().putCachedMethod(\"cordova.js43_\" + __coltScope, _colt42)\n                        }\n                        return _colt42.apply(this, arguments)\n            });\n  }\n  \n                    } catch (e) {\n                        LogUtil.log(\"error\", \"\", \"\", \"cordova.js\", \"live method cordova.js[42]: function clobber(obj, key, value) execute error: \" + e.message, e);\n                    } finally {\n                        LiveCodingCodeFlowUtil.checkRecursion2(\"cordova.js[42]: function clobber(obj, key, value)\");\n                    }\n                })")
LiveCodeRegistry.getInstance().putMethod("cordova.js43", "(function() {\n  \n                    var __coltScope = LiveCodeRegistry.getInstance().getScope();\n                    LiveCodingCodeFlowUtil.checkRecursion(\"cordova.js[43]: function()\"); try {\n                  return value;\n  \n                    } catch (e) {\n                        LogUtil.log(\"error\", \"\", \"\", \"cordova.js\", \"live method cordova.js[43]: function() execute error: \" + e.message, e);\n                    } finally {\n                        LiveCodingCodeFlowUtil.checkRecursion2(\"cordova.js[43]: function()\");\n                    }\n                })")
LiveCodeRegistry.getInstance().putMethod("cordova.js44", "(function(obj, key, value, message) {\n  \n                    var __coltScope = LiveCodeRegistry.getInstance().getScope();\n                    LiveCodingCodeFlowUtil.checkRecursion(\"cordova.js[44]: function assignOrWrapInDeprecateGetter(obj, key, value, message)\"); try {\n                  if (message) \n  {\n    utils.defineGetter(obj, key, function() {\n  \n                        var _colt44 = LiveCodeRegistry.getInstance().getCachedMethod(\"cordova.js45_\" + __coltScope)\n                        if (_colt44 == null) {\n                            try {\n                                _colt44 = eval(LiveCodeRegistry.getInstance().getMethod(\"cordova.js45\"));\n                            } catch (e) {\n                                LogUtil.log(\"error\", \"\", \"\", \"cordova.js\", \"live method cordova.js[45]: function() execute error: \" + e.message, e);\n                                return;\n                            }\n                            LiveCodeRegistry.getInstance().putCachedMethod(\"cordova.js45_\" + __coltScope, _colt44)\n                        }\n                        return _colt44.apply(this, arguments)\n            });\n  } else {\n    clobber(obj, key, value);\n  }\n  \n                    } catch (e) {\n                        LogUtil.log(\"error\", \"\", \"\", \"cordova.js\", \"live method cordova.js[44]: function assignOrWrapInDeprecateGetter(obj, key, value, message) execute error: \" + e.message, e);\n                    } finally {\n                        LiveCodingCodeFlowUtil.checkRecursion2(\"cordova.js[44]: function assignOrWrapInDeprecateGetter(obj, key, value, message)\");\n                    }\n                })")
LiveCodeRegistry.getInstance().putMethod("cordova.js45", "(function() {\n  \n                    var __coltScope = LiveCodeRegistry.getInstance().getScope();\n                    LiveCodingCodeFlowUtil.checkRecursion(\"cordova.js[45]: function()\"); try {\n                  console.log(message);\n  delete obj[key];\n  clobber(obj, key, value);\n  return value;\n  \n                    } catch (e) {\n                        LogUtil.log(\"error\", \"\", \"\", \"cordova.js\", \"live method cordova.js[45]: function() execute error: \" + e.message, e);\n                    } finally {\n                        LiveCodingCodeFlowUtil.checkRecursion2(\"cordova.js[45]: function()\");\n                    }\n                })")
LiveCodeRegistry.getInstance().putMethod("cordova.js46", "(function(parent, objects, clobber, merge) {\n  \n                    var __coltScope = LiveCodeRegistry.getInstance().getScope();\n                    LiveCodingCodeFlowUtil.checkRecursion(\"cordova.js[46]: function include(parent, objects, clobber, merge)\"); try {\n                  each(objects, function(obj, key) {\n  \n                        var _colt46 = LiveCodeRegistry.getInstance().getCachedMethod(\"cordova.js47_\" + __coltScope)\n                        if (_colt46 == null) {\n                            try {\n                                _colt46 = eval(LiveCodeRegistry.getInstance().getMethod(\"cordova.js47\"));\n                            } catch (e) {\n                                LogUtil.log(\"error\", \"\", \"\", \"cordova.js\", \"live method cordova.js[47]: function(obj, key) execute error: \" + e.message, e);\n                                return;\n                            }\n                            LiveCodeRegistry.getInstance().putCachedMethod(\"cordova.js47_\" + __coltScope, _colt46)\n                        }\n                        return _colt46.apply(this, arguments)\n            });\n  \n                    } catch (e) {\n                        LogUtil.log(\"error\", \"\", \"\", \"cordova.js\", \"live method cordova.js[46]: function include(parent, objects, clobber, merge) execute error: \" + e.message, e);\n                    } finally {\n                        LiveCodingCodeFlowUtil.checkRecursion2(\"cordova.js[46]: function include(parent, objects, clobber, merge)\");\n                    }\n                })")
LiveCodeRegistry.getInstance().putMethod("cordova.js47", "(function(obj, key) {\n  \n                    var __coltScope = LiveCodeRegistry.getInstance().getScope();\n                    LiveCodingCodeFlowUtil.checkRecursion(\"cordova.js[47]: function(obj, key)\"); try {\n                  try {\n    var result = obj.path ? require(obj.path) : {};\n    if (clobber) \n    {\n      if (typeof parent[key] === \'undefined\') \n      {\n        assignOrWrapInDeprecateGetter(parent, key, result, obj.deprecated);\n      } else if (typeof obj.path !== \'undefined\') \n      {\n        if (merge) \n        {\n          recursiveMerge(parent[key], result);\n        } else {\n          assignOrWrapInDeprecateGetter(parent, key, result, obj.deprecated);\n        }\n      }\n      result = parent[key];\n    } else {\n      if (typeof parent[key] == \'undefined\') \n      {\n        assignOrWrapInDeprecateGetter(parent, key, result, obj.deprecated);\n      } else {\n        result = parent[key];\n      }\n    }\n    if (obj.children) \n    {\n      include(result, obj.children, clobber, merge);\n    }\n  }  catch (e) {\n  utils.alert(\'Exception building cordova JS globals: \' + e + \' for key \"\' + key + \'\"\');\n}\n  \n                    } catch (e) {\n                        LogUtil.log(\"error\", \"\", \"\", \"cordova.js\", \"live method cordova.js[47]: function(obj, key) execute error: \" + e.message, e);\n                    } finally {\n                        LiveCodingCodeFlowUtil.checkRecursion2(\"cordova.js[47]: function(obj, key)\");\n                    }\n                })")
LiveCodeRegistry.getInstance().putMethod("cordova.js48", "(function(target, src) {\n  \n                    var __coltScope = LiveCodeRegistry.getInstance().getScope();\n                    LiveCodingCodeFlowUtil.checkRecursion(\"cordova.js[48]: function recursiveMerge(target, src)\"); try {\n                  \n                                    var _colt6 = \"_colt6_\" + Date.now();\n                                  for (var prop in src) \n    {\n      \n                                    LiveCodingCodeFlowUtil.checkLoop(_colt6);\n                                      if (src.hasOwnProperty(prop)) \n      {\n        if (target.prototype && target.prototype.constructor === target) \n        {\n          clobber(target.prototype, prop, src[prop]);\n        } else {\n          if (typeof src[prop] === \'object\' && typeof target[prop] === \'object\') \n          {\n            recursiveMerge(target[prop], src[prop]);\n          } else {\n            clobber(target, prop, src[prop]);\n          }\n        }\n      }\n    }\n  \n                                    LiveCodingCodeFlowUtil.checkLoop(\"\");\n                                  \n                    } catch (e) {\n                        LogUtil.log(\"error\", \"\", \"\", \"cordova.js\", \"live method cordova.js[48]: function recursiveMerge(target, src) execute error: \" + e.message, e);\n                    } finally {\n                        LiveCodingCodeFlowUtil.checkRecursion2(\"cordova.js[48]: function recursiveMerge(target, src)\");\n                    }\n                })")
LiveCodeRegistry.getInstance().putMethod("cordova.js49", "(function(objects, target) {\n  \n                    var __coltScope = LiveCodeRegistry.getInstance().getScope();\n                    LiveCodingCodeFlowUtil.checkRecursion(\"cordova.js[49]: function(objects, target)\"); try {\n                  include(target, objects, false, false);\n  \n                    } catch (e) {\n                        LogUtil.log(\"error\", \"\", \"\", \"cordova.js\", \"live method cordova.js[49]: function(objects, target) execute error: \" + e.message, e);\n                    } finally {\n                        LiveCodingCodeFlowUtil.checkRecursion2(\"cordova.js[49]: function(objects, target)\");\n                    }\n                })")
LiveCodeRegistry.getInstance().putMethod("cordova.js50", "(function(objects, target) {\n  \n                    var __coltScope = LiveCodeRegistry.getInstance().getScope();\n                    LiveCodingCodeFlowUtil.checkRecursion(\"cordova.js[50]: function(objects, target)\"); try {\n                  include(target, objects, true, false);\n  \n                    } catch (e) {\n                        LogUtil.log(\"error\", \"\", \"\", \"cordova.js\", \"live method cordova.js[50]: function(objects, target) execute error: \" + e.message, e);\n                    } finally {\n                        LiveCodingCodeFlowUtil.checkRecursion2(\"cordova.js[50]: function(objects, target)\");\n                    }\n                })")
LiveCodeRegistry.getInstance().putMethod("cordova.js51", "(function(objects, target) {\n  \n                    var __coltScope = LiveCodeRegistry.getInstance().getScope();\n                    LiveCodingCodeFlowUtil.checkRecursion(\"cordova.js[51]: function(objects, target)\"); try {\n                  include(target, objects, true, true);\n  \n                    } catch (e) {\n                        LogUtil.log(\"error\", \"\", \"\", \"cordova.js\", \"live method cordova.js[51]: function(objects, target) execute error: \" + e.message, e);\n                    } finally {\n                        LiveCodingCodeFlowUtil.checkRecursion2(\"cordova.js[51]: function(objects, target)\");\n                    }\n                })")
LiveCodeRegistry.getInstance().putMethod("cordova.js52", "(function() {\n})")
LiveCodeRegistry.getInstance().putMethod("cordova.js53", "(function(require, exports, module) {\n  \n                    var __coltScope = LiveCodeRegistry.getInstance().getScope();\n                    LiveCodingCodeFlowUtil.checkRecursion(\"cordova.js[53]: function(require, exports, module)\"); try {\n                  var utils = require(\'cordova\/utils\'), nextGuid = 1;\n  var Channel = function(type, sticky) {\n  \n                        var _colt4d = LiveCodeRegistry.getInstance().getCachedMethod(\"cordova.js55_\" + __coltScope)\n                        if (_colt4d == null) {\n                            try {\n                                _colt4d = eval(LiveCodeRegistry.getInstance().getMethod(\"cordova.js55\"));\n                            } catch (e) {\n                                LogUtil.log(\"error\", \"\", \"\", \"cordova.js\", \"live method cordova.js[55]: function(type, sticky) execute error: \" + e.message, e);\n                                return;\n                            }\n                            LiveCodeRegistry.getInstance().putCachedMethod(\"cordova.js55_\" + __coltScope, _colt4d)\n                        }\n                        return _colt4d.apply(this, arguments)\n            }, channel = {join: function(h, c) {\n  \n                        var _colt4e = LiveCodeRegistry.getInstance().getCachedMethod(\"cordova.js58_\" + __coltScope)\n                        if (_colt4e == null) {\n                            try {\n                                _colt4e = eval(LiveCodeRegistry.getInstance().getMethod(\"cordova.js58\"));\n                            } catch (e) {\n                                LogUtil.log(\"error\", \"\", \"\", \"cordova.js\", \"live method cordova.js[58]: function(h, c) execute error: \" + e.message, e);\n                                return;\n                            }\n                            LiveCodeRegistry.getInstance().putCachedMethod(\"cordova.js58_\" + __coltScope, _colt4e)\n                        }\n                        return _colt4e.apply(this, arguments)\n            }, create: function(type) {\n  \n                        var _colt50 = LiveCodeRegistry.getInstance().getCachedMethod(\"cordova.js60_\" + __coltScope)\n                        if (_colt50 == null) {\n                            try {\n                                _colt50 = eval(LiveCodeRegistry.getInstance().getMethod(\"cordova.js60\"));\n                            } catch (e) {\n                                LogUtil.log(\"error\", \"\", \"\", \"cordova.js\", \"live method cordova.js[60]: function(type) execute error: \" + e.message, e);\n                                return;\n                            }\n                            LiveCodeRegistry.getInstance().putCachedMethod(\"cordova.js60_\" + __coltScope, _colt50)\n                        }\n                        return _colt50.apply(this, arguments)\n            }, createSticky: function(type) {\n  \n                        var _colt51 = LiveCodeRegistry.getInstance().getCachedMethod(\"cordova.js61_\" + __coltScope)\n                        if (_colt51 == null) {\n                            try {\n                                _colt51 = eval(LiveCodeRegistry.getInstance().getMethod(\"cordova.js61\"));\n                            } catch (e) {\n                                LogUtil.log(\"error\", \"\", \"\", \"cordova.js\", \"live method cordova.js[61]: function(type) execute error: \" + e.message, e);\n                                return;\n                            }\n                            LiveCodeRegistry.getInstance().putCachedMethod(\"cordova.js61_\" + __coltScope, _colt51)\n                        }\n                        return _colt51.apply(this, arguments)\n            }, deviceReadyChannelsArray: [], deviceReadyChannelsMap: {}, waitForInitialization: function(feature) {\n  \n                        var _colt52 = LiveCodeRegistry.getInstance().getCachedMethod(\"cordova.js62_\" + __coltScope)\n                        if (_colt52 == null) {\n                            try {\n                                _colt52 = eval(LiveCodeRegistry.getInstance().getMethod(\"cordova.js62\"));\n                            } catch (e) {\n                                LogUtil.log(\"error\", \"\", \"\", \"cordova.js\", \"live method cordova.js[62]: function(feature) execute error: \" + e.message, e);\n                                return;\n                            }\n                            LiveCodeRegistry.getInstance().putCachedMethod(\"cordova.js62_\" + __coltScope, _colt52)\n                        }\n                        return _colt52.apply(this, arguments)\n            }, initializationComplete: function(feature) {\n  \n                        var _colt53 = LiveCodeRegistry.getInstance().getCachedMethod(\"cordova.js63_\" + __coltScope)\n                        if (_colt53 == null) {\n                            try {\n                                _colt53 = eval(LiveCodeRegistry.getInstance().getMethod(\"cordova.js63\"));\n                            } catch (e) {\n                                LogUtil.log(\"error\", \"\", \"\", \"cordova.js\", \"live method cordova.js[63]: function(feature) execute error: \" + e.message, e);\n                                return;\n                            }\n                            LiveCodeRegistry.getInstance().putCachedMethod(\"cordova.js63_\" + __coltScope, _colt53)\n                        }\n                        return _colt53.apply(this, arguments)\n            }};\n  function forceFunction(f) {\n    \n                        var _colt54 = LiveCodeRegistry.getInstance().getCachedMethod(\"cordova.js64_\" + __coltScope)\n                        if (_colt54 == null) {\n                            try {\n                                _colt54 = eval(LiveCodeRegistry.getInstance().getMethod(\"cordova.js64\"));\n                            } catch (e) {\n                                LogUtil.log(\"error\", \"\", \"\", \"cordova.js\", \"live method cordova.js[64]: function forceFunction(f) execute error: \" + e.message, e);\n                                return;\n                            }\n                            LiveCodeRegistry.getInstance().putCachedMethod(\"cordova.js64_\" + __coltScope, _colt54)\n                        }\n                        return _colt54.apply(this, arguments)\n              }\n  Channel.prototype.subscribe = function(f, c) {\n  \n                        var _colt55 = LiveCodeRegistry.getInstance().getCachedMethod(\"cordova.js69_\" + __coltScope)\n                        if (_colt55 == null) {\n                            try {\n                                _colt55 = eval(LiveCodeRegistry.getInstance().getMethod(\"cordova.js69\"));\n                            } catch (e) {\n                                LogUtil.log(\"error\", \"\", \"\", \"cordova.js\", \"live method cordova.js[69]: function(f, c) execute error: \" + e.message, e);\n                                return;\n                            }\n                            LiveCodeRegistry.getInstance().putCachedMethod(\"cordova.js69_\" + __coltScope, _colt55)\n                        }\n                        return _colt55.apply(this, arguments)\n            };\n  Channel.prototype.unsubscribe = function(f) {\n  \n                        var _colt56 = LiveCodeRegistry.getInstance().getCachedMethod(\"cordova.js72_\" + __coltScope)\n                        if (_colt56 == null) {\n                            try {\n                                _colt56 = eval(LiveCodeRegistry.getInstance().getMethod(\"cordova.js72\"));\n                            } catch (e) {\n                                LogUtil.log(\"error\", \"\", \"\", \"cordova.js\", \"live method cordova.js[72]: function(f) execute error: \" + e.message, e);\n                                return;\n                            }\n                            LiveCodeRegistry.getInstance().putCachedMethod(\"cordova.js72_\" + __coltScope, _colt56)\n                        }\n                        return _colt56.apply(this, arguments)\n            };\n  Channel.prototype.fire = function(e) {\n  \n                        var _colt57 = LiveCodeRegistry.getInstance().getCachedMethod(\"cordova.js75_\" + __coltScope)\n                        if (_colt57 == null) {\n                            try {\n                                _colt57 = eval(LiveCodeRegistry.getInstance().getMethod(\"cordova.js75\"));\n                            } catch (e) {\n                                LogUtil.log(\"error\", \"\", \"\", \"cordova.js\", \"live method cordova.js[75]: function(e) execute error: \" + e.message, e);\n                                return;\n                            }\n                            LiveCodeRegistry.getInstance().putCachedMethod(\"cordova.js75_\" + __coltScope, _colt57)\n                        }\n                        return _colt57.apply(this, arguments)\n            };\n  channel.createSticky(\'onDOMContentLoaded\');\n  channel.createSticky(\'onNativeReady\');\n  channel.createSticky(\'onCordovaReady\');\n  channel.createSticky(\'onPluginsReady\');\n  channel.createSticky(\'onDeviceReady\');\n  channel.create(\'onResume\');\n  channel.create(\'onPause\');\n  channel.createSticky(\'onDestroy\');\n  channel.waitForInitialization(\'onCordovaReady\');\n  channel.waitForInitialization(\'onDOMContentLoaded\');\n  module.exports = channel;\n  \n                    } catch (e) {\n                        LogUtil.log(\"error\", \"\", \"\", \"cordova.js\", \"live method cordova.js[53]: function(require, exports, module) execute error: \" + e.message, e);\n                    } finally {\n                        LiveCodingCodeFlowUtil.checkRecursion2(\"cordova.js[53]: function(require, exports, module)\");\n                    }\n                })")
LiveCodeRegistry.getInstance().putMethod("cordova.js55", "(function(type, sticky) {\n  \n                    var __coltScope = LiveCodeRegistry.getInstance().getScope();\n                    LiveCodingCodeFlowUtil.checkRecursion(\"cordova.js[55]: function(type, sticky)\"); try {\n                  this.type = type;\n  this.handlers = {};\n  this.state = sticky ? 1 : 0;\n  this.fireArgs = null;\n  this.numHandlers = 0;\n  this.onHasSubscribersChange = null;\n  \n                    } catch (e) {\n                        LogUtil.log(\"error\", \"\", \"\", \"cordova.js\", \"live method cordova.js[55]: function(type, sticky) execute error: \" + e.message, e);\n                    } finally {\n                        LiveCodingCodeFlowUtil.checkRecursion2(\"cordova.js[55]: function(type, sticky)\");\n                    }\n                })")
LiveCodeRegistry.getInstance().putMethod("cordova.js58", "(function(h, c) {\n  \n                    var __coltScope = LiveCodeRegistry.getInstance().getScope();\n                    LiveCodingCodeFlowUtil.checkRecursion(\"cordova.js[58]: function(h, c)\"); try {\n                  var len = c.length, i = len, f = function() {\n  \n                        var _colt4f = LiveCodeRegistry.getInstance().getCachedMethod(\"cordova.js59_\" + __coltScope)\n                        if (_colt4f == null) {\n                            try {\n                                _colt4f = eval(LiveCodeRegistry.getInstance().getMethod(\"cordova.js59\"));\n                            } catch (e) {\n                                LogUtil.log(\"error\", \"\", \"\", \"cordova.js\", \"live method cordova.js[59]: function() execute error: \" + e.message, e);\n                                return;\n                            }\n                            LiveCodeRegistry.getInstance().putCachedMethod(\"cordova.js59_\" + __coltScope, _colt4f)\n                        }\n                        return _colt4f.apply(this, arguments)\n            };\n  \n                                    var _colt7 = \"_colt7_\" + Date.now();\n                                  for (var j = 0; j < len; j++) \n    {\n      \n                                    LiveCodingCodeFlowUtil.checkLoop(_colt7);\n                                      if (c[j].state === 0) \n      {\n        throw Error(\'Can only use join with sticky channels.\');\n      }\n      c[j].subscribe(f);\n    }\n  \n                                    LiveCodingCodeFlowUtil.checkLoop(\"\");\n                                  if (!len) \n  h();\n  \n                    } catch (e) {\n                        LogUtil.log(\"error\", \"\", \"\", \"cordova.js\", \"live method cordova.js[58]: function(h, c) execute error: \" + e.message, e);\n                    } finally {\n                        LiveCodingCodeFlowUtil.checkRecursion2(\"cordova.js[58]: function(h, c)\");\n                    }\n                })")
LiveCodeRegistry.getInstance().putMethod("cordova.js59", "(function() {\n  \n                    var __coltScope = LiveCodeRegistry.getInstance().getScope();\n                    LiveCodingCodeFlowUtil.checkRecursion(\"cordova.js[59]: function()\"); try {\n                  if (!(--i)) \n  h();\n  \n                    } catch (e) {\n                        LogUtil.log(\"error\", \"\", \"\", \"cordova.js\", \"live method cordova.js[59]: function() execute error: \" + e.message, e);\n                    } finally {\n                        LiveCodingCodeFlowUtil.checkRecursion2(\"cordova.js[59]: function()\");\n                    }\n                })")
LiveCodeRegistry.getInstance().putMethod("cordova.js60", "(function(type) {\n  \n                    var __coltScope = LiveCodeRegistry.getInstance().getScope();\n                    LiveCodingCodeFlowUtil.checkRecursion(\"cordova.js[60]: function(type)\"); try {\n                  return channel[type] = new Channel(type, false);\n  \n                    } catch (e) {\n                        LogUtil.log(\"error\", \"\", \"\", \"cordova.js\", \"live method cordova.js[60]: function(type) execute error: \" + e.message, e);\n                    } finally {\n                        LiveCodingCodeFlowUtil.checkRecursion2(\"cordova.js[60]: function(type)\");\n                    }\n                })")
LiveCodeRegistry.getInstance().putMethod("cordova.js61", "(function(type) {\n  \n                    var __coltScope = LiveCodeRegistry.getInstance().getScope();\n                    LiveCodingCodeFlowUtil.checkRecursion(\"cordova.js[61]: function(type)\"); try {\n                  return channel[type] = new Channel(type, true);\n  \n                    } catch (e) {\n                        LogUtil.log(\"error\", \"\", \"\", \"cordova.js\", \"live method cordova.js[61]: function(type) execute error: \" + e.message, e);\n                    } finally {\n                        LiveCodingCodeFlowUtil.checkRecursion2(\"cordova.js[61]: function(type)\");\n                    }\n                })")
LiveCodeRegistry.getInstance().putMethod("cordova.js62", "(function(feature) {\n  \n                    var __coltScope = LiveCodeRegistry.getInstance().getScope();\n                    LiveCodingCodeFlowUtil.checkRecursion(\"cordova.js[62]: function(feature)\"); try {\n                  if (feature) \n  {\n    var c = channel[feature] || this.createSticky(feature);\n    this.deviceReadyChannelsMap[feature] = c;\n    this.deviceReadyChannelsArray.push(c);\n  }\n  \n                    } catch (e) {\n                        LogUtil.log(\"error\", \"\", \"\", \"cordova.js\", \"live method cordova.js[62]: function(feature) execute error: \" + e.message, e);\n                    } finally {\n                        LiveCodingCodeFlowUtil.checkRecursion2(\"cordova.js[62]: function(feature)\");\n                    }\n                })")
LiveCodeRegistry.getInstance().putMethod("cordova.js63", "(function(feature) {\n  \n                    var __coltScope = LiveCodeRegistry.getInstance().getScope();\n                    LiveCodingCodeFlowUtil.checkRecursion(\"cordova.js[63]: function(feature)\"); try {\n                  var c = this.deviceReadyChannelsMap[feature];\n  if (c) \n  {\n    c.fire();\n  }\n  \n                    } catch (e) {\n                        LogUtil.log(\"error\", \"\", \"\", \"cordova.js\", \"live method cordova.js[63]: function(feature) execute error: \" + e.message, e);\n                    } finally {\n                        LiveCodingCodeFlowUtil.checkRecursion2(\"cordova.js[63]: function(feature)\");\n                    }\n                })")
LiveCodeRegistry.getInstance().putMethod("cordova.js64", "(function(f) {\n  \n                    var __coltScope = LiveCodeRegistry.getInstance().getScope();\n                    LiveCodingCodeFlowUtil.checkRecursion(\"cordova.js[64]: function forceFunction(f)\"); try {\n                  if (typeof f != \'function\') \n  throw \"Function required as first argument!\";\n  \n                    } catch (e) {\n                        LogUtil.log(\"error\", \"\", \"\", \"cordova.js\", \"live method cordova.js[64]: function forceFunction(f) execute error: \" + e.message, e);\n                    } finally {\n                        LiveCodingCodeFlowUtil.checkRecursion2(\"cordova.js[64]: function forceFunction(f)\");\n                    }\n                })")
LiveCodeRegistry.getInstance().putMethod("cordova.js69", "(function(f, c) {\n  \n                    var __coltScope = LiveCodeRegistry.getInstance().getScope();\n                    LiveCodingCodeFlowUtil.checkRecursion(\"cordova.js[69]: function(f, c)\"); try {\n                  forceFunction(f);\n  if (this.state == 2) \n  {\n    f.apply(c || this, this.fireArgs);\n    return;\n  }\n  var func = f, guid = f.observer_guid;\n  if (typeof c == \"object\") \n  {\n    func = utils.close(c, f);\n  }\n  if (!guid) \n  {\n    guid = \'\' + nextGuid++;\n  }\n  func.observer_guid = guid;\n  f.observer_guid = guid;\n  if (!this.handlers[guid]) \n  {\n    this.handlers[guid] = func;\n    this.numHandlers++;\n    if (this.numHandlers == 1) \n    {\n      this.onHasSubscribersChange && this.onHasSubscribersChange();\n    }\n  }\n  \n                    } catch (e) {\n                        LogUtil.log(\"error\", \"\", \"\", \"cordova.js\", \"live method cordova.js[69]: function(f, c) execute error: \" + e.message, e);\n                    } finally {\n                        LiveCodingCodeFlowUtil.checkRecursion2(\"cordova.js[69]: function(f, c)\");\n                    }\n                })")
LiveCodeRegistry.getInstance().putMethod("cordova.js72", "(function(f) {\n  \n                    var __coltScope = LiveCodeRegistry.getInstance().getScope();\n                    LiveCodingCodeFlowUtil.checkRecursion(\"cordova.js[72]: function(f)\"); try {\n                  forceFunction(f);\n  var guid = f.observer_guid, handler = this.handlers[guid];\n  if (handler) \n  {\n    delete this.handlers[guid];\n    this.numHandlers--;\n    if (this.numHandlers === 0) \n    {\n      this.onHasSubscribersChange && this.onHasSubscribersChange();\n    }\n  }\n  \n                    } catch (e) {\n                        LogUtil.log(\"error\", \"\", \"\", \"cordova.js\", \"live method cordova.js[72]: function(f) execute error: \" + e.message, e);\n                    } finally {\n                        LiveCodingCodeFlowUtil.checkRecursion2(\"cordova.js[72]: function(f)\");\n                    }\n                })")
LiveCodeRegistry.getInstance().putMethod("cordova.js75", "(function(e) {\n  \n                    var __coltScope = LiveCodeRegistry.getInstance().getScope();\n                    LiveCodingCodeFlowUtil.checkRecursion(\"cordova.js[75]: function(e)\"); try {\n                  var fail = false, fireArgs = Array.prototype.slice.call(arguments);\n  if (this.state == 1) \n  {\n    this.state = 2;\n    this.fireArgs = fireArgs;\n  }\n  if (this.numHandlers) \n  {\n    var toCall = [];\n    \n                                    var _colt8 = \"_colt8_\" + Date.now();\n                                    for (var item in this.handlers) \n      {\n        \n                                    LiveCodingCodeFlowUtil.checkLoop(_colt8);\n                                        toCall.push(this.handlers[item]);\n      }\n    \n                                    LiveCodingCodeFlowUtil.checkLoop(\"\");\n                                    \n                                    var _colt9 = \"_colt9_\" + Date.now();\n                                    for (var i = 0; i < toCall.length; ++i) \n      {\n        \n                                    LiveCodingCodeFlowUtil.checkLoop(_colt9);\n                                        toCall[i].apply(this, fireArgs);\n      }\n    \n                                    LiveCodingCodeFlowUtil.checkLoop(\"\");\n                                    if (this.state == 2 && this.numHandlers) \n    {\n      this.numHandlers = 0;\n      this.handlers = {};\n      this.onHasSubscribersChange && this.onHasSubscribersChange();\n    }\n  }\n  \n                    } catch (e) {\n                        LogUtil.log(\"error\", \"\", \"\", \"cordova.js\", \"live method cordova.js[75]: function(e) execute error: \" + e.message, e);\n                    } finally {\n                        LiveCodingCodeFlowUtil.checkRecursion2(\"cordova.js[75]: function(e)\");\n                    }\n                })")
LiveCodeRegistry.getInstance().putMethod("cordova.js76", "(function(require, exports, module) {\n  \n                    var __coltScope = LiveCodeRegistry.getInstance().getScope();\n                    LiveCodingCodeFlowUtil.checkRecursion(\"cordova.js[76]: function(require, exports, module)\"); try {\n                  var cordova = require(\'cordova\'), channel = require(\'cordova\/channel\'), utils = require(\'cordova\/utils\'), base64 = require(\'cordova\/base64\'), jsToNativeModes = {IFRAME_NAV: 0, XHR_NO_PAYLOAD: 1, XHR_WITH_PAYLOAD: 2, XHR_OPTIONAL_PAYLOAD: 3}, bridgeMode, execIframe, execXhr, requestCount = 0, vcHeaderValue = null, commandQueue = [], isInContextOfEvalJs = 0;\n  function createExecIframe() {\n    \n                        var _colt59 = LiveCodeRegistry.getInstance().getCachedMethod(\"cordova.js77_\" + __coltScope)\n                        if (_colt59 == null) {\n                            try {\n                                _colt59 = eval(LiveCodeRegistry.getInstance().getMethod(\"cordova.js77\"));\n                            } catch (e) {\n                                LogUtil.log(\"error\", \"\", \"\", \"cordova.js\", \"live method cordova.js[77]: function createExecIframe() execute error: \" + e.message, e);\n                                return;\n                            }\n                            LiveCodeRegistry.getInstance().putCachedMethod(\"cordova.js77_\" + __coltScope, _colt59)\n                        }\n                        return _colt59.apply(this, arguments)\n              }\n  function shouldBundleCommandJson() {\n    \n                        var _colt5a = LiveCodeRegistry.getInstance().getCachedMethod(\"cordova.js78_\" + __coltScope)\n                        if (_colt5a == null) {\n                            try {\n                                _colt5a = eval(LiveCodeRegistry.getInstance().getMethod(\"cordova.js78\"));\n                            } catch (e) {\n                                LogUtil.log(\"error\", \"\", \"\", \"cordova.js\", \"live method cordova.js[78]: function shouldBundleCommandJson() execute error: \" + e.message, e);\n                                return;\n                            }\n                            LiveCodeRegistry.getInstance().putCachedMethod(\"cordova.js78_\" + __coltScope, _colt5a)\n                        }\n                        return _colt5a.apply(this, arguments)\n              }\n  function massageArgsJsToNative(args) {\n    \n                        var _colt5b = LiveCodeRegistry.getInstance().getCachedMethod(\"cordova.js79_\" + __coltScope)\n                        if (_colt5b == null) {\n                            try {\n                                _colt5b = eval(LiveCodeRegistry.getInstance().getMethod(\"cordova.js79\"));\n                            } catch (e) {\n                                LogUtil.log(\"error\", \"\", \"\", \"cordova.js\", \"live method cordova.js[79]: function massageArgsJsToNative(args) execute error: \" + e.message, e);\n                                return;\n                            }\n                            LiveCodeRegistry.getInstance().putCachedMethod(\"cordova.js79_\" + __coltScope, _colt5b)\n                        }\n                        return _colt5b.apply(this, arguments)\n              }\n  function massageMessageNativeToJs(message) {\n    \n                        var _colt5d = LiveCodeRegistry.getInstance().getCachedMethod(\"cordova.js81_\" + __coltScope)\n                        if (_colt5d == null) {\n                            try {\n                                _colt5d = eval(LiveCodeRegistry.getInstance().getMethod(\"cordova.js81\"));\n                            } catch (e) {\n                                LogUtil.log(\"error\", \"\", \"\", \"cordova.js\", \"live method cordova.js[81]: function massageMessageNativeToJs(message) execute error: \" + e.message, e);\n                                return;\n                            }\n                            LiveCodeRegistry.getInstance().putCachedMethod(\"cordova.js81_\" + __coltScope, _colt5d)\n                        }\n                        return _colt5d.apply(this, arguments)\n              }\n  function convertMessageToArgsNativeToJs(message) {\n    \n                        var _colt60 = LiveCodeRegistry.getInstance().getCachedMethod(\"cordova.js84_\" + __coltScope)\n                        if (_colt60 == null) {\n                            try {\n                                _colt60 = eval(LiveCodeRegistry.getInstance().getMethod(\"cordova.js84\"));\n                            } catch (e) {\n                                LogUtil.log(\"error\", \"\", \"\", \"cordova.js\", \"live method cordova.js[84]: function convertMessageToArgsNativeToJs(message) execute error: \" + e.message, e);\n                                return;\n                            }\n                            LiveCodeRegistry.getInstance().putCachedMethod(\"cordova.js84_\" + __coltScope, _colt60)\n                        }\n                        return _colt60.apply(this, arguments)\n              }\n  function iOSExec() {\n    \n                        var _colt62 = LiveCodeRegistry.getInstance().getCachedMethod(\"cordova.js86_\" + __coltScope)\n                        if (_colt62 == null) {\n                            try {\n                                _colt62 = eval(LiveCodeRegistry.getInstance().getMethod(\"cordova.js86\"));\n                            } catch (e) {\n                                LogUtil.log(\"error\", \"\", \"\", \"cordova.js\", \"live method cordova.js[86]: function iOSExec() execute error: \" + e.message, e);\n                                return;\n                            }\n                            LiveCodeRegistry.getInstance().putCachedMethod(\"cordova.js86_\" + __coltScope, _colt62)\n                        }\n                        return _colt62.apply(this, arguments)\n              }\n  iOSExec.jsToNativeModes = jsToNativeModes;\n  iOSExec.setJsToNativeBridgeMode = function(mode) {\n  \n                        var _colt63 = LiveCodeRegistry.getInstance().getCachedMethod(\"cordova.js87_\" + __coltScope)\n                        if (_colt63 == null) {\n                            try {\n                                _colt63 = eval(LiveCodeRegistry.getInstance().getMethod(\"cordova.js87\"));\n                            } catch (e) {\n                                LogUtil.log(\"error\", \"\", \"\", \"cordova.js\", \"live method cordova.js[87]: function(mode) execute error: \" + e.message, e);\n                                return;\n                            }\n                            LiveCodeRegistry.getInstance().putCachedMethod(\"cordova.js87_\" + __coltScope, _colt63)\n                        }\n                        return _colt63.apply(this, arguments)\n            };\n  iOSExec.nativeFetchMessages = function() {\n  \n                        var _colt64 = LiveCodeRegistry.getInstance().getCachedMethod(\"cordova.js88_\" + __coltScope)\n                        if (_colt64 == null) {\n                            try {\n                                _colt64 = eval(LiveCodeRegistry.getInstance().getMethod(\"cordova.js88\"));\n                            } catch (e) {\n                                LogUtil.log(\"error\", \"\", \"\", \"cordova.js\", \"live method cordova.js[88]: function() execute error: \" + e.message, e);\n                                return;\n                            }\n                            LiveCodeRegistry.getInstance().putCachedMethod(\"cordova.js88_\" + __coltScope, _colt64)\n                        }\n                        return _colt64.apply(this, arguments)\n            };\n  iOSExec.nativeCallback = function(callbackId, status, message, keepCallback) {\n  \n                        var _colt65 = LiveCodeRegistry.getInstance().getCachedMethod(\"cordova.js89_\" + __coltScope)\n                        if (_colt65 == null) {\n                            try {\n                                _colt65 = eval(LiveCodeRegistry.getInstance().getMethod(\"cordova.js89\"));\n                            } catch (e) {\n                                LogUtil.log(\"error\", \"\", \"\", \"cordova.js\", \"live method cordova.js[89]: function(callbackId, status, message, keepCallback) execute error: \" + e.message, e);\n                                return;\n                            }\n                            LiveCodeRegistry.getInstance().putCachedMethod(\"cordova.js89_\" + __coltScope, _colt65)\n                        }\n                        return _colt65.apply(this, arguments)\n            };\n  iOSExec.nativeEvalAndFetch = function(func) {\n  \n                        var _colt67 = LiveCodeRegistry.getInstance().getCachedMethod(\"cordova.js91_\" + __coltScope)\n                        if (_colt67 == null) {\n                            try {\n                                _colt67 = eval(LiveCodeRegistry.getInstance().getMethod(\"cordova.js91\"));\n                            } catch (e) {\n                                LogUtil.log(\"error\", \"\", \"\", \"cordova.js\", \"live method cordova.js[91]: function(func) execute error: \" + e.message, e);\n                                return;\n                            }\n                            LiveCodeRegistry.getInstance().putCachedMethod(\"cordova.js91_\" + __coltScope, _colt67)\n                        }\n                        return _colt67.apply(this, arguments)\n            };\n  module.exports = iOSExec;\n  \n                    } catch (e) {\n                        LogUtil.log(\"error\", \"\", \"\", \"cordova.js\", \"live method cordova.js[76]: function(require, exports, module) execute error: \" + e.message, e);\n                    } finally {\n                        LiveCodingCodeFlowUtil.checkRecursion2(\"cordova.js[76]: function(require, exports, module)\");\n                    }\n                })")
LiveCodeRegistry.getInstance().putMethod("cordova.js77", "(function() {\n  \n                    var __coltScope = LiveCodeRegistry.getInstance().getScope();\n                    LiveCodingCodeFlowUtil.checkRecursion(\"cordova.js[77]: function createExecIframe()\"); try {\n                  var iframe = document.createElement(\"iframe\");\n  iframe.style.display = \'none\';\n  document.body.appendChild(iframe);\n  return iframe;\n  \n                    } catch (e) {\n                        LogUtil.log(\"error\", \"\", \"\", \"cordova.js\", \"live method cordova.js[77]: function createExecIframe() execute error: \" + e.message, e);\n                    } finally {\n                        LiveCodingCodeFlowUtil.checkRecursion2(\"cordova.js[77]: function createExecIframe()\");\n                    }\n                })")
LiveCodeRegistry.getInstance().putMethod("cordova.js78", "(function() {\n  \n                    var __coltScope = LiveCodeRegistry.getInstance().getScope();\n                    LiveCodingCodeFlowUtil.checkRecursion(\"cordova.js[78]: function shouldBundleCommandJson()\"); try {\n                  if (bridgeMode == jsToNativeModes.XHR_WITH_PAYLOAD) \n  {\n    return true;\n  }\n  if (bridgeMode == jsToNativeModes.XHR_OPTIONAL_PAYLOAD) \n  {\n    var payloadLength = 0;\n    \n                                    var _colta = \"_colta_\" + Date.now();\n                                    for (var i = 0; i < commandQueue.length; ++i) \n      {\n        \n                                    LiveCodingCodeFlowUtil.checkLoop(_colta);\n                                        payloadLength += commandQueue[i].length;\n      }\n    \n                                    LiveCodingCodeFlowUtil.checkLoop(\"\");\n                                    return payloadLength < 4500;\n  }\n  return false;\n  \n                    } catch (e) {\n                        LogUtil.log(\"error\", \"\", \"\", \"cordova.js\", \"live method cordova.js[78]: function shouldBundleCommandJson() execute error: \" + e.message, e);\n                    } finally {\n                        LiveCodingCodeFlowUtil.checkRecursion2(\"cordova.js[78]: function shouldBundleCommandJson()\");\n                    }\n                })")
LiveCodeRegistry.getInstance().putMethod("cordova.js79", "(function(args) {\n  \n                    var __coltScope = LiveCodeRegistry.getInstance().getScope();\n                    LiveCodingCodeFlowUtil.checkRecursion(\"cordova.js[79]: function massageArgsJsToNative(args)\"); try {\n                  if (!args || utils.typeName(args) != \'Array\') \n  {\n    return args;\n  }\n  var ret = [];\n  args.forEach(function(arg, i) {\n  \n                        var _colt5c = LiveCodeRegistry.getInstance().getCachedMethod(\"cordova.js80_\" + __coltScope)\n                        if (_colt5c == null) {\n                            try {\n                                _colt5c = eval(LiveCodeRegistry.getInstance().getMethod(\"cordova.js80\"));\n                            } catch (e) {\n                                LogUtil.log(\"error\", \"\", \"\", \"cordova.js\", \"live method cordova.js[80]: function(arg, i) execute error: \" + e.message, e);\n                                return;\n                            }\n                            LiveCodeRegistry.getInstance().putCachedMethod(\"cordova.js80_\" + __coltScope, _colt5c)\n                        }\n                        return _colt5c.apply(this, arguments)\n            });\n  return ret;\n  \n                    } catch (e) {\n                        LogUtil.log(\"error\", \"\", \"\", \"cordova.js\", \"live method cordova.js[79]: function massageArgsJsToNative(args) execute error: \" + e.message, e);\n                    } finally {\n                        LiveCodingCodeFlowUtil.checkRecursion2(\"cordova.js[79]: function massageArgsJsToNative(args)\");\n                    }\n                })")
LiveCodeRegistry.getInstance().putMethod("cordova.js80", "(function(arg, i) {\n  \n                    var __coltScope = LiveCodeRegistry.getInstance().getScope();\n                    LiveCodingCodeFlowUtil.checkRecursion(\"cordova.js[80]: function(arg, i)\"); try {\n                  if (utils.typeName(arg) == \'ArrayBuffer\') \n  {\n    ret.push({\'CDVType\': \'ArrayBuffer\', \'data\': base64.fromArrayBuffer(arg)});\n  } else {\n    ret.push(arg);\n  }\n  \n                    } catch (e) {\n                        LogUtil.log(\"error\", \"\", \"\", \"cordova.js\", \"live method cordova.js[80]: function(arg, i) execute error: \" + e.message, e);\n                    } finally {\n                        LiveCodingCodeFlowUtil.checkRecursion2(\"cordova.js[80]: function(arg, i)\");\n                    }\n                })")
LiveCodeRegistry.getInstance().putMethod("cordova.js81", "(function(message) {\n  \n                    var __coltScope = LiveCodeRegistry.getInstance().getScope();\n                    LiveCodingCodeFlowUtil.checkRecursion(\"cordova.js[81]: function massageMessageNativeToJs(message)\"); try {\n                  if (message.CDVType == \'ArrayBuffer\') \n  {\n    var stringToArrayBuffer = function(str) {\n  \n                        var _colt5e = LiveCodeRegistry.getInstance().getCachedMethod(\"cordova.js82_\" + __coltScope)\n                        if (_colt5e == null) {\n                            try {\n                                _colt5e = eval(LiveCodeRegistry.getInstance().getMethod(\"cordova.js82\"));\n                            } catch (e) {\n                                LogUtil.log(\"error\", \"\", \"\", \"cordova.js\", \"live method cordova.js[82]: function(str) execute error: \" + e.message, e);\n                                return;\n                            }\n                            LiveCodeRegistry.getInstance().putCachedMethod(\"cordova.js82_\" + __coltScope, _colt5e)\n                        }\n                        return _colt5e.apply(this, arguments)\n            };\n    var base64ToArrayBuffer = function(b64) {\n  \n                        var _colt5f = LiveCodeRegistry.getInstance().getCachedMethod(\"cordova.js83_\" + __coltScope)\n                        if (_colt5f == null) {\n                            try {\n                                _colt5f = eval(LiveCodeRegistry.getInstance().getMethod(\"cordova.js83\"));\n                            } catch (e) {\n                                LogUtil.log(\"error\", \"\", \"\", \"cordova.js\", \"live method cordova.js[83]: function(b64) execute error: \" + e.message, e);\n                                return;\n                            }\n                            LiveCodeRegistry.getInstance().putCachedMethod(\"cordova.js83_\" + __coltScope, _colt5f)\n                        }\n                        return _colt5f.apply(this, arguments)\n            };\n    message = base64ToArrayBuffer(message.data);\n  }\n  return message;\n  \n                    } catch (e) {\n                        LogUtil.log(\"error\", \"\", \"\", \"cordova.js\", \"live method cordova.js[81]: function massageMessageNativeToJs(message) execute error: \" + e.message, e);\n                    } finally {\n                        LiveCodingCodeFlowUtil.checkRecursion2(\"cordova.js[81]: function massageMessageNativeToJs(message)\");\n                    }\n                })")
LiveCodeRegistry.getInstance().putMethod("cordova.js82", "(function(str) {\n  \n                    var __coltScope = LiveCodeRegistry.getInstance().getScope();\n                    LiveCodingCodeFlowUtil.checkRecursion(\"cordova.js[82]: function(str)\"); try {\n                  var ret = new Uint8Array(str.length);\n  \n                                    var _coltb = \"_coltb_\" + Date.now();\n                                  for (var i = 0; i < str.length; i++) \n    {\n      \n                                    LiveCodingCodeFlowUtil.checkLoop(_coltb);\n                                      ret[i] = str.charCodeAt(i);\n    }\n  \n                                    LiveCodingCodeFlowUtil.checkLoop(\"\");\n                                  return ret.buffer;\n  \n                    } catch (e) {\n                        LogUtil.log(\"error\", \"\", \"\", \"cordova.js\", \"live method cordova.js[82]: function(str) execute error: \" + e.message, e);\n                    } finally {\n                        LiveCodingCodeFlowUtil.checkRecursion2(\"cordova.js[82]: function(str)\");\n                    }\n                })")
LiveCodeRegistry.getInstance().putMethod("cordova.js83", "(function(b64) {\n  \n                    var __coltScope = LiveCodeRegistry.getInstance().getScope();\n                    LiveCodingCodeFlowUtil.checkRecursion(\"cordova.js[83]: function(b64)\"); try {\n                  return stringToArrayBuffer(atob(b64));\n  \n                    } catch (e) {\n                        LogUtil.log(\"error\", \"\", \"\", \"cordova.js\", \"live method cordova.js[83]: function(b64) execute error: \" + e.message, e);\n                    } finally {\n                        LiveCodingCodeFlowUtil.checkRecursion2(\"cordova.js[83]: function(b64)\");\n                    }\n                })")
LiveCodeRegistry.getInstance().putMethod("cordova.js84", "(function(message) {\n  \n                    var __coltScope = LiveCodeRegistry.getInstance().getScope();\n                    LiveCodingCodeFlowUtil.checkRecursion(\"cordova.js[84]: function convertMessageToArgsNativeToJs(message)\"); try {\n                  var args = [];\n  if (!message || !message.hasOwnProperty(\'CDVType\')) \n  {\n    args.push(message);\n  } else if (message.CDVType == \'MultiPart\') \n  {\n    message.messages.forEach(function(e) {\n  \n                        var _colt61 = LiveCodeRegistry.getInstance().getCachedMethod(\"cordova.js85_\" + __coltScope)\n                        if (_colt61 == null) {\n                            try {\n                                _colt61 = eval(LiveCodeRegistry.getInstance().getMethod(\"cordova.js85\"));\n                            } catch (e) {\n                                LogUtil.log(\"error\", \"\", \"\", \"cordova.js\", \"live method cordova.js[85]: function(e) execute error: \" + e.message, e);\n                                return;\n                            }\n                            LiveCodeRegistry.getInstance().putCachedMethod(\"cordova.js85_\" + __coltScope, _colt61)\n                        }\n                        return _colt61.apply(this, arguments)\n            });\n  } else {\n    args.push(massageMessageNativeToJs(message));\n  }\n  return args;\n  \n                    } catch (e) {\n                        LogUtil.log(\"error\", \"\", \"\", \"cordova.js\", \"live method cordova.js[84]: function convertMessageToArgsNativeToJs(message) execute error: \" + e.message, e);\n                    } finally {\n                        LiveCodingCodeFlowUtil.checkRecursion2(\"cordova.js[84]: function convertMessageToArgsNativeToJs(message)\");\n                    }\n                })")
LiveCodeRegistry.getInstance().putMethod("cordova.js85", "(function(e) {\n  \n                    var __coltScope = LiveCodeRegistry.getInstance().getScope();\n                    LiveCodingCodeFlowUtil.checkRecursion(\"cordova.js[85]: function(e)\"); try {\n                  args.push(massageMessageNativeToJs(e));\n  \n                    } catch (e) {\n                        LogUtil.log(\"error\", \"\", \"\", \"cordova.js\", \"live method cordova.js[85]: function(e) execute error: \" + e.message, e);\n                    } finally {\n                        LiveCodingCodeFlowUtil.checkRecursion2(\"cordova.js[85]: function(e)\");\n                    }\n                })")
LiveCodeRegistry.getInstance().putMethod("cordova.js86", "(function() {\n  \n                    var __coltScope = LiveCodeRegistry.getInstance().getScope();\n                    LiveCodingCodeFlowUtil.checkRecursion(\"cordova.js[86]: function iOSExec()\"); try {\n                  if (bridgeMode === undefined) \n  {\n    bridgeMode = navigator.userAgent.indexOf(\' 4_\') == -1 ? jsToNativeModes.XHR_NO_PAYLOAD : jsToNativeModes.IFRAME_NAV;\n  }\n  var successCallback, failCallback, service, action, actionArgs, splitCommand;\n  var callbackId = null;\n  if (typeof arguments[0] !== \"string\") \n  {\n    successCallback = arguments[0];\n    failCallback = arguments[1];\n    service = arguments[2];\n    action = arguments[3];\n    actionArgs = arguments[4];\n    callbackId = \'INVALID\';\n  } else {\n    try {\n      splitCommand = arguments[0].split(\".\");\n      action = splitCommand.pop();\n      service = splitCommand.join(\".\");\n      actionArgs = Array.prototype.splice.call(arguments, 1);\n      console.log(\'The old format of this exec call has been removed (deprecated since 2.1). Change to: \' + \"cordova.exec(null, null, \\\"\" + service + \"\\\", \\\"\" + action + \"\\\",\" + JSON.stringify(actionArgs) + \");\");\n      return;\n    }    catch (e) {\n}\n  }\n  if (successCallback || failCallback) \n  {\n    callbackId = service + cordova.callbackId++;\n    cordova.callbacks[callbackId] = {success: successCallback, fail: failCallback};\n  }\n  actionArgs = massageArgsJsToNative(actionArgs);\n  var command = [callbackId, service, action, actionArgs];\n  commandQueue.push(JSON.stringify(command));\n  if (!isInContextOfEvalJs && commandQueue.length == 1) \n  {\n    if (bridgeMode != jsToNativeModes.IFRAME_NAV) \n    {\n      if (execXhr && execXhr.readyState != 4) \n      {\n        execXhr = null;\n      }\n      execXhr = execXhr || new XMLHttpRequest();\n      execXhr.open(\'HEAD\', \"\/!gap_exec?\" + (+new Date()), true);\n      if (!vcHeaderValue) \n      {\n        vcHeaderValue = \/.*\\((.*)\\)\/.exec(navigator.userAgent)[1];\n      }\n      execXhr.setRequestHeader(\'vc\', vcHeaderValue);\n      execXhr.setRequestHeader(\'rc\', ++requestCount);\n      if (shouldBundleCommandJson()) \n      {\n        execXhr.setRequestHeader(\'cmds\', iOSExec.nativeFetchMessages());\n      }\n      execXhr.send(null);\n    } else {\n      execIframe = execIframe || createExecIframe();\n      execIframe.src = \"gap:\/\/ready\";\n    }\n  }\n  \n                    } catch (e) {\n                        LogUtil.log(\"error\", \"\", \"\", \"cordova.js\", \"live method cordova.js[86]: function iOSExec() execute error: \" + e.message, e);\n                    } finally {\n                        LiveCodingCodeFlowUtil.checkRecursion2(\"cordova.js[86]: function iOSExec()\");\n                    }\n                })")
LiveCodeRegistry.getInstance().putMethod("cordova.js87", "(function(mode) {\n  \n                    var __coltScope = LiveCodeRegistry.getInstance().getScope();\n                    LiveCodingCodeFlowUtil.checkRecursion(\"cordova.js[87]: function(mode)\"); try {\n                  if (execIframe) \n  {\n    execIframe.parentNode.removeChild(execIframe);\n    execIframe = null;\n  }\n  bridgeMode = mode;\n  \n                    } catch (e) {\n                        LogUtil.log(\"error\", \"\", \"\", \"cordova.js\", \"live method cordova.js[87]: function(mode) execute error: \" + e.message, e);\n                    } finally {\n                        LiveCodingCodeFlowUtil.checkRecursion2(\"cordova.js[87]: function(mode)\");\n                    }\n                })")
LiveCodeRegistry.getInstance().putMethod("cordova.js88", "(function() {\n  \n                    var __coltScope = LiveCodeRegistry.getInstance().getScope();\n                    LiveCodingCodeFlowUtil.checkRecursion(\"cordova.js[88]: function()\"); try {\n                  if (!commandQueue.length) \n  {\n    return \'\';\n  }\n  var json = \'[\' + commandQueue.join(\',\') + \']\';\n  commandQueue.length = 0;\n  return json;\n  \n                    } catch (e) {\n                        LogUtil.log(\"error\", \"\", \"\", \"cordova.js\", \"live method cordova.js[88]: function() execute error: \" + e.message, e);\n                    } finally {\n                        LiveCodingCodeFlowUtil.checkRecursion2(\"cordova.js[88]: function()\");\n                    }\n                })")
LiveCodeRegistry.getInstance().putMethod("cordova.js89", "(function(callbackId, status, message, keepCallback) {\n  \n                    var __coltScope = LiveCodeRegistry.getInstance().getScope();\n                    LiveCodingCodeFlowUtil.checkRecursion(\"cordova.js[89]: function(callbackId, status, message, keepCallback)\"); try {\n                  return iOSExec.nativeEvalAndFetch(function() {\n  \n                        var _colt66 = LiveCodeRegistry.getInstance().getCachedMethod(\"cordova.js90_\" + __coltScope)\n                        if (_colt66 == null) {\n                            try {\n                                _colt66 = eval(LiveCodeRegistry.getInstance().getMethod(\"cordova.js90\"));\n                            } catch (e) {\n                                LogUtil.log(\"error\", \"\", \"\", \"cordova.js\", \"live method cordova.js[90]: function() execute error: \" + e.message, e);\n                                return;\n                            }\n                            LiveCodeRegistry.getInstance().putCachedMethod(\"cordova.js90_\" + __coltScope, _colt66)\n                        }\n                        return _colt66.apply(this, arguments)\n            });\n  \n                    } catch (e) {\n                        LogUtil.log(\"error\", \"\", \"\", \"cordova.js\", \"live method cordova.js[89]: function(callbackId, status, message, keepCallback) execute error: \" + e.message, e);\n                    } finally {\n                        LiveCodingCodeFlowUtil.checkRecursion2(\"cordova.js[89]: function(callbackId, status, message, keepCallback)\");\n                    }\n                })")
LiveCodeRegistry.getInstance().putMethod("cordova.js90", "(function() {\n  \n                    var __coltScope = LiveCodeRegistry.getInstance().getScope();\n                    LiveCodingCodeFlowUtil.checkRecursion(\"cordova.js[90]: function()\"); try {\n                  var success = status === 0 || status === 1;\n  var args = convertMessageToArgsNativeToJs(message);\n  cordova.callbackFromNative(callbackId, success, status, args, keepCallback);\n  \n                    } catch (e) {\n                        LogUtil.log(\"error\", \"\", \"\", \"cordova.js\", \"live method cordova.js[90]: function() execute error: \" + e.message, e);\n                    } finally {\n                        LiveCodingCodeFlowUtil.checkRecursion2(\"cordova.js[90]: function()\");\n                    }\n                })")
LiveCodeRegistry.getInstance().putMethod("cordova.js91", "(function(func) {\n  \n                    var __coltScope = LiveCodeRegistry.getInstance().getScope();\n                    LiveCodingCodeFlowUtil.checkRecursion(\"cordova.js[91]: function(func)\"); try {\n                  isInContextOfEvalJs++;\n  try {\n    func();\n    return iOSExec.nativeFetchMessages();\n  } finally   {\n    isInContextOfEvalJs--;\n  }\n  \n                    } catch (e) {\n                        LogUtil.log(\"error\", \"\", \"\", \"cordova.js\", \"live method cordova.js[91]: function(func) execute error: \" + e.message, e);\n                    } finally {\n                        LiveCodingCodeFlowUtil.checkRecursion2(\"cordova.js[91]: function(func)\");\n                    }\n                })")
LiveCodeRegistry.getInstance().putMethod("cordova.js92", "(function(require, exports, module) {\n  \n                    var __coltScope = LiveCodeRegistry.getInstance().getScope();\n                    LiveCodingCodeFlowUtil.checkRecursion(\"cordova.js[92]: function(require, exports, module)\"); try {\n                  var channel = require(\'cordova\/channel\');\n  var cordova = require(\'cordova\');\n  var modulemapper = require(\'cordova\/modulemapper\');\n  var platform = require(\'cordova\/platform\');\n  var pluginloader = require(\'cordova\/pluginloader\');\n  var platformInitChannelsArray = [channel.onNativeReady, channel.onPluginsReady];\n  function logUnfiredChannels(arr) {\n    \n                        var _colt69 = LiveCodeRegistry.getInstance().getCachedMethod(\"cordova.js93_\" + __coltScope)\n                        if (_colt69 == null) {\n                            try {\n                                _colt69 = eval(LiveCodeRegistry.getInstance().getMethod(\"cordova.js93\"));\n                            } catch (e) {\n                                LogUtil.log(\"error\", \"\", \"\", \"cordova.js\", \"live method cordova.js[93]: function logUnfiredChannels(arr) execute error: \" + e.message, e);\n                                return;\n                            }\n                            LiveCodeRegistry.getInstance().putCachedMethod(\"cordova.js93_\" + __coltScope, _colt69)\n                        }\n                        return _colt69.apply(this, arguments)\n              }\n  window.setTimeout(function() {\n  \n                        var _colt6a = LiveCodeRegistry.getInstance().getCachedMethod(\"cordova.js94_\" + __coltScope)\n                        if (_colt6a == null) {\n                            try {\n                                _colt6a = eval(LiveCodeRegistry.getInstance().getMethod(\"cordova.js94\"));\n                            } catch (e) {\n                                LogUtil.log(\"error\", \"\", \"\", \"cordova.js\", \"live method cordova.js[94]: function() execute error: \" + e.message, e);\n                                return;\n                            }\n                            LiveCodeRegistry.getInstance().putCachedMethod(\"cordova.js94_\" + __coltScope, _colt6a)\n                        }\n                        return _colt6a.apply(this, arguments)\n            }, 5000);\n  function replaceNavigator(origNavigator) {\n    \n                        var _colt6b = LiveCodeRegistry.getInstance().getCachedMethod(\"cordova.js95_\" + __coltScope)\n                        if (_colt6b == null) {\n                            try {\n                                _colt6b = eval(LiveCodeRegistry.getInstance().getMethod(\"cordova.js95\"));\n                            } catch (e) {\n                                LogUtil.log(\"error\", \"\", \"\", \"cordova.js\", \"live method cordova.js[95]: function replaceNavigator(origNavigator) execute error: \" + e.message, e);\n                                return;\n                            }\n                            LiveCodeRegistry.getInstance().putCachedMethod(\"cordova.js95_\" + __coltScope, _colt6b)\n                        }\n                        return _colt6b.apply(this, arguments)\n              }\n  if (window.navigator) \n  {\n    window.navigator = replaceNavigator(window.navigator);\n  }\n  if (!window.console) \n  {\n    window.console = {log: function() {\n  \n                        var _colt6d = LiveCodeRegistry.getInstance().getCachedMethod(\"cordova.js98_\" + __coltScope)\n                        if (_colt6d == null) {\n                            try {\n                                _colt6d = eval(LiveCodeRegistry.getInstance().getMethod(\"cordova.js98\"));\n                            } catch (e) {\n                                LogUtil.log(\"error\", \"\", \"\", \"cordova.js\", \"live method cordova.js[98]: function() execute error: \" + e.message, e);\n                                return;\n                            }\n                            LiveCodeRegistry.getInstance().putCachedMethod(\"cordova.js98_\" + __coltScope, _colt6d)\n                        }\n                        return _colt6d.apply(this, arguments)\n            }};\n  }\n  if (!window.console.warn) \n  {\n    window.console.warn = function(msg) {\n  \n                        var _colt6e = LiveCodeRegistry.getInstance().getCachedMethod(\"cordova.js99_\" + __coltScope)\n                        if (_colt6e == null) {\n                            try {\n                                _colt6e = eval(LiveCodeRegistry.getInstance().getMethod(\"cordova.js99\"));\n                            } catch (e) {\n                                LogUtil.log(\"error\", \"\", \"\", \"cordova.js\", \"live method cordova.js[99]: function(msg) execute error: \" + e.message, e);\n                                return;\n                            }\n                            LiveCodeRegistry.getInstance().putCachedMethod(\"cordova.js99_\" + __coltScope, _colt6e)\n                        }\n                        return _colt6e.apply(this, arguments)\n            };\n  }\n  channel.onPause = cordova.addDocumentEventHandler(\'pause\');\n  channel.onResume = cordova.addDocumentEventHandler(\'resume\');\n  channel.onDeviceReady = cordova.addStickyDocumentEventHandler(\'deviceready\');\n  if (document.readyState == \'complete\' || document.readyState == \'interactive\') \n  {\n    channel.onDOMContentLoaded.fire();\n  } else {\n    document.addEventListener(\'DOMContentLoaded\', function() {\n  \n                        var _colt6f = LiveCodeRegistry.getInstance().getCachedMethod(\"cordova.js100_\" + __coltScope)\n                        if (_colt6f == null) {\n                            try {\n                                _colt6f = eval(LiveCodeRegistry.getInstance().getMethod(\"cordova.js100\"));\n                            } catch (e) {\n                                LogUtil.log(\"error\", \"\", \"\", \"cordova.js\", \"live method cordova.js[100]: function() execute error: \" + e.message, e);\n                                return;\n                            }\n                            LiveCodeRegistry.getInstance().putCachedMethod(\"cordova.js100_\" + __coltScope, _colt6f)\n                        }\n                        return _colt6f.apply(this, arguments)\n            }, false);\n  }\n  if (window._nativeReady) \n  {\n    channel.onNativeReady.fire();\n  }\n  modulemapper.clobbers(\'cordova\', \'cordova\');\n  modulemapper.clobbers(\'cordova\/exec\', \'cordova.exec\');\n  modulemapper.clobbers(\'cordova\/exec\', \'Cordova.exec\');\n  platform.bootstrap && platform.bootstrap();\n  pluginloader.load(function() {\n  \n                        var _colt70 = LiveCodeRegistry.getInstance().getCachedMethod(\"cordova.js101_\" + __coltScope)\n                        if (_colt70 == null) {\n                            try {\n                                _colt70 = eval(LiveCodeRegistry.getInstance().getMethod(\"cordova.js101\"));\n                            } catch (e) {\n                                LogUtil.log(\"error\", \"\", \"\", \"cordova.js\", \"live method cordova.js[101]: function() execute error: \" + e.message, e);\n                                return;\n                            }\n                            LiveCodeRegistry.getInstance().putCachedMethod(\"cordova.js101_\" + __coltScope, _colt70)\n                        }\n                        return _colt70.apply(this, arguments)\n            });\n  channel.join(function() {\n  \n                        var _colt71 = LiveCodeRegistry.getInstance().getCachedMethod(\"cordova.js102_\" + __coltScope)\n                        if (_colt71 == null) {\n                            try {\n                                _colt71 = eval(LiveCodeRegistry.getInstance().getMethod(\"cordova.js102\"));\n                            } catch (e) {\n                                LogUtil.log(\"error\", \"\", \"\", \"cordova.js\", \"live method cordova.js[102]: function() execute error: \" + e.message, e);\n                                return;\n                            }\n                            LiveCodeRegistry.getInstance().putCachedMethod(\"cordova.js102_\" + __coltScope, _colt71)\n                        }\n                        return _colt71.apply(this, arguments)\n            }, platformInitChannelsArray);\n  \n                    } catch (e) {\n                        LogUtil.log(\"error\", \"\", \"\", \"cordova.js\", \"live method cordova.js[92]: function(require, exports, module) execute error: \" + e.message, e);\n                    } finally {\n                        LiveCodingCodeFlowUtil.checkRecursion2(\"cordova.js[92]: function(require, exports, module)\");\n                    }\n                })")
LiveCodeRegistry.getInstance().putMethod("cordova.js93", "(function(arr) {\n  \n                    var __coltScope = LiveCodeRegistry.getInstance().getScope();\n                    LiveCodingCodeFlowUtil.checkRecursion(\"cordova.js[93]: function logUnfiredChannels(arr)\"); try {\n                  \n                                    var _coltc = \"_coltc_\" + Date.now();\n                                  for (var i = 0; i < arr.length; ++i) \n    {\n      \n                                    LiveCodingCodeFlowUtil.checkLoop(_coltc);\n                                      if (arr[i].state != 2) \n      {\n        console.log(\'Channel not fired: \' + arr[i].type);\n      }\n    }\n  \n                                    LiveCodingCodeFlowUtil.checkLoop(\"\");\n                                  \n                    } catch (e) {\n                        LogUtil.log(\"error\", \"\", \"\", \"cordova.js\", \"live method cordova.js[93]: function logUnfiredChannels(arr) execute error: \" + e.message, e);\n                    } finally {\n                        LiveCodingCodeFlowUtil.checkRecursion2(\"cordova.js[93]: function logUnfiredChannels(arr)\");\n                    }\n                })")
LiveCodeRegistry.getInstance().putMethod("cordova.js94", "(function() {\n  \n                    var __coltScope = LiveCodeRegistry.getInstance().getScope();\n                    LiveCodingCodeFlowUtil.checkRecursion(\"cordova.js[94]: function()\"); try {\n                  if (channel.onDeviceReady.state != 2) \n  {\n    console.log(\'deviceready has not fired after 5 seconds.\');\n    logUnfiredChannels(platformInitChannelsArray);\n    logUnfiredChannels(channel.deviceReadyChannelsArray);\n  }\n  \n                    } catch (e) {\n                        LogUtil.log(\"error\", \"\", \"\", \"cordova.js\", \"live method cordova.js[94]: function() execute error: \" + e.message, e);\n                    } finally {\n                        LiveCodingCodeFlowUtil.checkRecursion2(\"cordova.js[94]: function()\");\n                    }\n                })")
LiveCodeRegistry.getInstance().putMethod("cordova.js95", "(function(origNavigator) {\n  \n                    var __coltScope = LiveCodeRegistry.getInstance().getScope();\n                    LiveCodingCodeFlowUtil.checkRecursion(\"cordova.js[95]: function replaceNavigator(origNavigator)\"); try {\n                  var CordovaNavigator = function() {\n  \n                        var _colt6c = LiveCodeRegistry.getInstance().getCachedMethod(\"cordova.js96_\" + __coltScope)\n                        if (_colt6c == null) {\n                            try {\n                                _colt6c = eval(LiveCodeRegistry.getInstance().getMethod(\"cordova.js96\"));\n                            } catch (e) {\n                                LogUtil.log(\"error\", \"\", \"\", \"cordova.js\", \"live method cordova.js[96]: function() execute error: \" + e.message, e);\n                                return;\n                            }\n                            LiveCodeRegistry.getInstance().putCachedMethod(\"cordova.js96_\" + __coltScope, _colt6c)\n                        }\n                        return _colt6c.apply(this, arguments)\n            };\n  CordovaNavigator.prototype = origNavigator;\n  var newNavigator = new CordovaNavigator();\n  if (CordovaNavigator.bind) \n  {\n    \n                                    var _coltd = \"_coltd_\" + Date.now();\n                                    for (var key in origNavigator) \n      {\n        \n                                    LiveCodingCodeFlowUtil.checkLoop(_coltd);\n                                        if (typeof origNavigator[key] == \'function\') \n        {\n          newNavigator[key] = origNavigator[key].bind(origNavigator);\n        }\n      }\n    \n                                    LiveCodingCodeFlowUtil.checkLoop(\"\");\n                                  }\n  return newNavigator;\n  \n                    } catch (e) {\n                        LogUtil.log(\"error\", \"\", \"\", \"cordova.js\", \"live method cordova.js[95]: function replaceNavigator(origNavigator) execute error: \" + e.message, e);\n                    } finally {\n                        LiveCodingCodeFlowUtil.checkRecursion2(\"cordova.js[95]: function replaceNavigator(origNavigator)\");\n                    }\n                })")
LiveCodeRegistry.getInstance().putMethod("cordova.js96", "(function() {\n})")
LiveCodeRegistry.getInstance().putMethod("cordova.js98", "(function() {\n})")
LiveCodeRegistry.getInstance().putMethod("cordova.js99", "(function(msg) {\n  \n                    var __coltScope = LiveCodeRegistry.getInstance().getScope();\n                    LiveCodingCodeFlowUtil.checkRecursion(\"cordova.js[99]: function(msg)\"); try {\n                  this.log(\"warn: \" + msg);\n  \n                    } catch (e) {\n                        LogUtil.log(\"error\", \"\", \"\", \"cordova.js\", \"live method cordova.js[99]: function(msg) execute error: \" + e.message, e);\n                    } finally {\n                        LiveCodingCodeFlowUtil.checkRecursion2(\"cordova.js[99]: function(msg)\");\n                    }\n                })")
LiveCodeRegistry.getInstance().putMethod("cordova.js100", "(function() {\n  \n                    var __coltScope = LiveCodeRegistry.getInstance().getScope();\n                    LiveCodingCodeFlowUtil.checkRecursion(\"cordova.js[100]: function()\"); try {\n                  channel.onDOMContentLoaded.fire();\n  \n                    } catch (e) {\n                        LogUtil.log(\"error\", \"\", \"\", \"cordova.js\", \"live method cordova.js[100]: function() execute error: \" + e.message, e);\n                    } finally {\n                        LiveCodingCodeFlowUtil.checkRecursion2(\"cordova.js[100]: function()\");\n                    }\n                })")
LiveCodeRegistry.getInstance().putMethod("cordova.js101", "(function() {\n  \n                    var __coltScope = LiveCodeRegistry.getInstance().getScope();\n                    LiveCodingCodeFlowUtil.checkRecursion(\"cordova.js[101]: function()\"); try {\n                  channel.onPluginsReady.fire();\n  \n                    } catch (e) {\n                        LogUtil.log(\"error\", \"\", \"\", \"cordova.js\", \"live method cordova.js[101]: function() execute error: \" + e.message, e);\n                    } finally {\n                        LiveCodingCodeFlowUtil.checkRecursion2(\"cordova.js[101]: function()\");\n                    }\n                })")
LiveCodeRegistry.getInstance().putMethod("cordova.js102", "(function() {\n  \n                    var __coltScope = LiveCodeRegistry.getInstance().getScope();\n                    LiveCodingCodeFlowUtil.checkRecursion(\"cordova.js[102]: function()\"); try {\n                  modulemapper.mapModules(window);\n  platform.initialize && platform.initialize();\n  channel.onCordovaReady.fire();\n  channel.join(function() {\n  \n                        var _colt72 = LiveCodeRegistry.getInstance().getCachedMethod(\"cordova.js103_\" + __coltScope)\n                        if (_colt72 == null) {\n                            try {\n                                _colt72 = eval(LiveCodeRegistry.getInstance().getMethod(\"cordova.js103\"));\n                            } catch (e) {\n                                LogUtil.log(\"error\", \"\", \"\", \"cordova.js\", \"live method cordova.js[103]: function() execute error: \" + e.message, e);\n                                return;\n                            }\n                            LiveCodeRegistry.getInstance().putCachedMethod(\"cordova.js103_\" + __coltScope, _colt72)\n                        }\n                        return _colt72.apply(this, arguments)\n            }, channel.deviceReadyChannelsArray);\n  \n                    } catch (e) {\n                        LogUtil.log(\"error\", \"\", \"\", \"cordova.js\", \"live method cordova.js[102]: function() execute error: \" + e.message, e);\n                    } finally {\n                        LiveCodingCodeFlowUtil.checkRecursion2(\"cordova.js[102]: function()\");\n                    }\n                })")
LiveCodeRegistry.getInstance().putMethod("cordova.js103", "(function() {\n  \n                    var __coltScope = LiveCodeRegistry.getInstance().getScope();\n                    LiveCodingCodeFlowUtil.checkRecursion(\"cordova.js[103]: function()\"); try {\n                  require(\'cordova\').fireDocumentEvent(\'deviceready\');\n  \n                    } catch (e) {\n                        LogUtil.log(\"error\", \"\", \"\", \"cordova.js\", \"live method cordova.js[103]: function() execute error: \" + e.message, e);\n                    } finally {\n                        LiveCodingCodeFlowUtil.checkRecursion2(\"cordova.js[103]: function()\");\n                    }\n                })")
LiveCodeRegistry.getInstance().putMethod("cordova.js104", "(function(require, exports, module) {\n  \n                    var __coltScope = LiveCodeRegistry.getInstance().getScope();\n                    LiveCodingCodeFlowUtil.checkRecursion(\"cordova.js[104]: function(require, exports, module)\"); try {\n                  var builder = require(\'cordova\/builder\'), moduleMap = define.moduleMap, symbolList, deprecationMap;\n  exports.reset = function() {\n  \n                        var _colt74 = LiveCodeRegistry.getInstance().getCachedMethod(\"cordova.js105_\" + __coltScope)\n                        if (_colt74 == null) {\n                            try {\n                                _colt74 = eval(LiveCodeRegistry.getInstance().getMethod(\"cordova.js105\"));\n                            } catch (e) {\n                                LogUtil.log(\"error\", \"\", \"\", \"cordova.js\", \"live method cordova.js[105]: function() execute error: \" + e.message, e);\n                                return;\n                            }\n                            LiveCodeRegistry.getInstance().putCachedMethod(\"cordova.js105_\" + __coltScope, _colt74)\n                        }\n                        return _colt74.apply(this, arguments)\n            };\n  function addEntry(strategy, moduleName, symbolPath, opt_deprecationMessage) {\n    \n                        var _colt75 = LiveCodeRegistry.getInstance().getCachedMethod(\"cordova.js106_\" + __coltScope)\n                        if (_colt75 == null) {\n                            try {\n                                _colt75 = eval(LiveCodeRegistry.getInstance().getMethod(\"cordova.js106\"));\n                            } catch (e) {\n                                LogUtil.log(\"error\", \"\", \"\", \"cordova.js\", \"live method cordova.js[106]: function addEntry(strategy, moduleName, symbolPath, opt_deprecationMessage) execute error: \" + e.message, e);\n                                return;\n                            }\n                            LiveCodeRegistry.getInstance().putCachedMethod(\"cordova.js106_\" + __coltScope, _colt75)\n                        }\n                        return _colt75.apply(this, arguments)\n              }\n  exports.clobbers = function(moduleName, symbolPath, opt_deprecationMessage) {\n  \n                        var _colt76 = LiveCodeRegistry.getInstance().getCachedMethod(\"cordova.js107_\" + __coltScope)\n                        if (_colt76 == null) {\n                            try {\n                                _colt76 = eval(LiveCodeRegistry.getInstance().getMethod(\"cordova.js107\"));\n                            } catch (e) {\n                                LogUtil.log(\"error\", \"\", \"\", \"cordova.js\", \"live method cordova.js[107]: function(moduleName, symbolPath, opt_deprecationMessage) execute error: \" + e.message, e);\n                                return;\n                            }\n                            LiveCodeRegistry.getInstance().putCachedMethod(\"cordova.js107_\" + __coltScope, _colt76)\n                        }\n                        return _colt76.apply(this, arguments)\n            };\n  exports.merges = function(moduleName, symbolPath, opt_deprecationMessage) {\n  \n                        var _colt77 = LiveCodeRegistry.getInstance().getCachedMethod(\"cordova.js108_\" + __coltScope)\n                        if (_colt77 == null) {\n                            try {\n                                _colt77 = eval(LiveCodeRegistry.getInstance().getMethod(\"cordova.js108\"));\n                            } catch (e) {\n                                LogUtil.log(\"error\", \"\", \"\", \"cordova.js\", \"live method cordova.js[108]: function(moduleName, symbolPath, opt_deprecationMessage) execute error: \" + e.message, e);\n                                return;\n                            }\n                            LiveCodeRegistry.getInstance().putCachedMethod(\"cordova.js108_\" + __coltScope, _colt77)\n                        }\n                        return _colt77.apply(this, arguments)\n            };\n  exports.defaults = function(moduleName, symbolPath, opt_deprecationMessage) {\n  \n                        var _colt78 = LiveCodeRegistry.getInstance().getCachedMethod(\"cordova.js109_\" + __coltScope)\n                        if (_colt78 == null) {\n                            try {\n                                _colt78 = eval(LiveCodeRegistry.getInstance().getMethod(\"cordova.js109\"));\n                            } catch (e) {\n                                LogUtil.log(\"error\", \"\", \"\", \"cordova.js\", \"live method cordova.js[109]: function(moduleName, symbolPath, opt_deprecationMessage) execute error: \" + e.message, e);\n                                return;\n                            }\n                            LiveCodeRegistry.getInstance().putCachedMethod(\"cordova.js109_\" + __coltScope, _colt78)\n                        }\n                        return _colt78.apply(this, arguments)\n            };\n  exports.runs = function(moduleName) {\n  \n                        var _colt79 = LiveCodeRegistry.getInstance().getCachedMethod(\"cordova.js110_\" + __coltScope)\n                        if (_colt79 == null) {\n                            try {\n                                _colt79 = eval(LiveCodeRegistry.getInstance().getMethod(\"cordova.js110\"));\n                            } catch (e) {\n                                LogUtil.log(\"error\", \"\", \"\", \"cordova.js\", \"live method cordova.js[110]: function(moduleName) execute error: \" + e.message, e);\n                                return;\n                            }\n                            LiveCodeRegistry.getInstance().putCachedMethod(\"cordova.js110_\" + __coltScope, _colt79)\n                        }\n                        return _colt79.apply(this, arguments)\n            };\n  function prepareNamespace(symbolPath, context) {\n    \n                        var _colt7a = LiveCodeRegistry.getInstance().getCachedMethod(\"cordova.js111_\" + __coltScope)\n                        if (_colt7a == null) {\n                            try {\n                                _colt7a = eval(LiveCodeRegistry.getInstance().getMethod(\"cordova.js111\"));\n                            } catch (e) {\n                                LogUtil.log(\"error\", \"\", \"\", \"cordova.js\", \"live method cordova.js[111]: function prepareNamespace(symbolPath, context) execute error: \" + e.message, e);\n                                return;\n                            }\n                            LiveCodeRegistry.getInstance().putCachedMethod(\"cordova.js111_\" + __coltScope, _colt7a)\n                        }\n                        return _colt7a.apply(this, arguments)\n              }\n  exports.mapModules = function(context) {\n  \n                        var _colt7b = LiveCodeRegistry.getInstance().getCachedMethod(\"cordova.js112_\" + __coltScope)\n                        if (_colt7b == null) {\n                            try {\n                                _colt7b = eval(LiveCodeRegistry.getInstance().getMethod(\"cordova.js112\"));\n                            } catch (e) {\n                                LogUtil.log(\"error\", \"\", \"\", \"cordova.js\", \"live method cordova.js[112]: function(context) execute error: \" + e.message, e);\n                                return;\n                            }\n                            LiveCodeRegistry.getInstance().putCachedMethod(\"cordova.js112_\" + __coltScope, _colt7b)\n                        }\n                        return _colt7b.apply(this, arguments)\n            };\n  exports.getOriginalSymbol = function(context, symbolPath) {\n  \n                        var _colt7c = LiveCodeRegistry.getInstance().getCachedMethod(\"cordova.js113_\" + __coltScope)\n                        if (_colt7c == null) {\n                            try {\n                                _colt7c = eval(LiveCodeRegistry.getInstance().getMethod(\"cordova.js113\"));\n                            } catch (e) {\n                                LogUtil.log(\"error\", \"\", \"\", \"cordova.js\", \"live method cordova.js[113]: function(context, symbolPath) execute error: \" + e.message, e);\n                                return;\n                            }\n                            LiveCodeRegistry.getInstance().putCachedMethod(\"cordova.js113_\" + __coltScope, _colt7c)\n                        }\n                        return _colt7c.apply(this, arguments)\n            };\n  exports.reset();\n  \n                    } catch (e) {\n                        LogUtil.log(\"error\", \"\", \"\", \"cordova.js\", \"live method cordova.js[104]: function(require, exports, module) execute error: \" + e.message, e);\n                    } finally {\n                        LiveCodingCodeFlowUtil.checkRecursion2(\"cordova.js[104]: function(require, exports, module)\");\n                    }\n                })")
LiveCodeRegistry.getInstance().putMethod("cordova.js105", "(function() {\n  \n                    var __coltScope = LiveCodeRegistry.getInstance().getScope();\n                    LiveCodingCodeFlowUtil.checkRecursion(\"cordova.js[105]: function()\"); try {\n                  symbolList = [];\n  deprecationMap = {};\n  \n                    } catch (e) {\n                        LogUtil.log(\"error\", \"\", \"\", \"cordova.js\", \"live method cordova.js[105]: function() execute error: \" + e.message, e);\n                    } finally {\n                        LiveCodingCodeFlowUtil.checkRecursion2(\"cordova.js[105]: function()\");\n                    }\n                })")
LiveCodeRegistry.getInstance().putMethod("cordova.js106", "(function(strategy, moduleName, symbolPath, opt_deprecationMessage) {\n  \n                    var __coltScope = LiveCodeRegistry.getInstance().getScope();\n                    LiveCodingCodeFlowUtil.checkRecursion(\"cordova.js[106]: function addEntry(strategy, moduleName, symbolPath, opt_deprecationMessage)\"); try {\n                  if (!(moduleName in moduleMap)) \n  {\n    throw new Error(\'Module \' + moduleName + \' does not exist.\');\n  }\n  symbolList.push(strategy, moduleName, symbolPath);\n  if (opt_deprecationMessage) \n  {\n    deprecationMap[symbolPath] = opt_deprecationMessage;\n  }\n  \n                    } catch (e) {\n                        LogUtil.log(\"error\", \"\", \"\", \"cordova.js\", \"live method cordova.js[106]: function addEntry(strategy, moduleName, symbolPath, opt_deprecationMessage) execute error: \" + e.message, e);\n                    } finally {\n                        LiveCodingCodeFlowUtil.checkRecursion2(\"cordova.js[106]: function addEntry(strategy, moduleName, symbolPath, opt_deprecationMessage)\");\n                    }\n                })")
LiveCodeRegistry.getInstance().putMethod("cordova.js107", "(function(moduleName, symbolPath, opt_deprecationMessage) {\n  \n                    var __coltScope = LiveCodeRegistry.getInstance().getScope();\n                    LiveCodingCodeFlowUtil.checkRecursion(\"cordova.js[107]: function(moduleName, symbolPath, opt_deprecationMessage)\"); try {\n                  addEntry(\'c\', moduleName, symbolPath, opt_deprecationMessage);\n  \n                    } catch (e) {\n                        LogUtil.log(\"error\", \"\", \"\", \"cordova.js\", \"live method cordova.js[107]: function(moduleName, symbolPath, opt_deprecationMessage) execute error: \" + e.message, e);\n                    } finally {\n                        LiveCodingCodeFlowUtil.checkRecursion2(\"cordova.js[107]: function(moduleName, symbolPath, opt_deprecationMessage)\");\n                    }\n                })")
LiveCodeRegistry.getInstance().putMethod("cordova.js108", "(function(moduleName, symbolPath, opt_deprecationMessage) {\n  \n                    var __coltScope = LiveCodeRegistry.getInstance().getScope();\n                    LiveCodingCodeFlowUtil.checkRecursion(\"cordova.js[108]: function(moduleName, symbolPath, opt_deprecationMessage)\"); try {\n                  addEntry(\'m\', moduleName, symbolPath, opt_deprecationMessage);\n  \n                    } catch (e) {\n                        LogUtil.log(\"error\", \"\", \"\", \"cordova.js\", \"live method cordova.js[108]: function(moduleName, symbolPath, opt_deprecationMessage) execute error: \" + e.message, e);\n                    } finally {\n                        LiveCodingCodeFlowUtil.checkRecursion2(\"cordova.js[108]: function(moduleName, symbolPath, opt_deprecationMessage)\");\n                    }\n                })")
LiveCodeRegistry.getInstance().putMethod("cordova.js109", "(function(moduleName, symbolPath, opt_deprecationMessage) {\n  \n                    var __coltScope = LiveCodeRegistry.getInstance().getScope();\n                    LiveCodingCodeFlowUtil.checkRecursion(\"cordova.js[109]: function(moduleName, symbolPath, opt_deprecationMessage)\"); try {\n                  addEntry(\'d\', moduleName, symbolPath, opt_deprecationMessage);\n  \n                    } catch (e) {\n                        LogUtil.log(\"error\", \"\", \"\", \"cordova.js\", \"live method cordova.js[109]: function(moduleName, symbolPath, opt_deprecationMessage) execute error: \" + e.message, e);\n                    } finally {\n                        LiveCodingCodeFlowUtil.checkRecursion2(\"cordova.js[109]: function(moduleName, symbolPath, opt_deprecationMessage)\");\n                    }\n                })")
LiveCodeRegistry.getInstance().putMethod("cordova.js110", "(function(moduleName) {\n  \n                    var __coltScope = LiveCodeRegistry.getInstance().getScope();\n                    LiveCodingCodeFlowUtil.checkRecursion(\"cordova.js[110]: function(moduleName)\"); try {\n                  addEntry(\'r\', moduleName, null);\n  \n                    } catch (e) {\n                        LogUtil.log(\"error\", \"\", \"\", \"cordova.js\", \"live method cordova.js[110]: function(moduleName) execute error: \" + e.message, e);\n                    } finally {\n                        LiveCodingCodeFlowUtil.checkRecursion2(\"cordova.js[110]: function(moduleName)\");\n                    }\n                })")
LiveCodeRegistry.getInstance().putMethod("cordova.js111", "(function(symbolPath, context) {\n  \n                    var __coltScope = LiveCodeRegistry.getInstance().getScope();\n                    LiveCodingCodeFlowUtil.checkRecursion(\"cordova.js[111]: function prepareNamespace(symbolPath, context)\"); try {\n                  if (!symbolPath) \n  {\n    return context;\n  }\n  var parts = symbolPath.split(\'.\');\n  var cur = context;\n  \n                                    var _colte = \"_colte_\" + Date.now();\n                                  for (var i = 0, part; part = parts[i]; ++i) \n    {\n      \n                                    LiveCodingCodeFlowUtil.checkLoop(_colte);\n                                      cur = cur[part] = cur[part] || {};\n    }\n  \n                                    LiveCodingCodeFlowUtil.checkLoop(\"\");\n                                  return cur;\n  \n                    } catch (e) {\n                        LogUtil.log(\"error\", \"\", \"\", \"cordova.js\", \"live method cordova.js[111]: function prepareNamespace(symbolPath, context) execute error: \" + e.message, e);\n                    } finally {\n                        LiveCodingCodeFlowUtil.checkRecursion2(\"cordova.js[111]: function prepareNamespace(symbolPath, context)\");\n                    }\n                })")
LiveCodeRegistry.getInstance().putMethod("cordova.js112", "(function(context) {\n  \n                    var __coltScope = LiveCodeRegistry.getInstance().getScope();\n                    LiveCodingCodeFlowUtil.checkRecursion(\"cordova.js[112]: function(context)\"); try {\n                  var origSymbols = {};\n  context.CDV_origSymbols = origSymbols;\n  \n                                    var _coltf = \"_coltf_\" + Date.now();\n                                  for (var i = 0, len = symbolList.length; i < len; i += 3) \n    {\n      \n                                    LiveCodingCodeFlowUtil.checkLoop(_coltf);\n                                      var strategy = symbolList[i];\n      var moduleName = symbolList[i + 1];\n      var module = require(moduleName);\n      if (strategy == \'r\') \n      {\n        continue;\n      }\n      var symbolPath = symbolList[i + 2];\n      var lastDot = symbolPath.lastIndexOf(\'.\');\n      var namespace = symbolPath.substr(0, lastDot);\n      var lastName = symbolPath.substr(lastDot + 1);\n      var deprecationMsg = symbolPath in deprecationMap ? \'Access made to deprecated symbol: \' + symbolPath + \'. \' + deprecationMsg : null;\n      var parentObj = prepareNamespace(namespace, context);\n      var target = parentObj[lastName];\n      if (strategy == \'m\' && target) \n      {\n        builder.recursiveMerge(target, module);\n      } else if ((strategy == \'d\' && !target) || (strategy != \'d\')) \n      {\n        if (!(symbolPath in origSymbols)) \n        {\n          origSymbols[symbolPath] = target;\n        }\n        builder.assignOrWrapInDeprecateGetter(parentObj, lastName, module, deprecationMsg);\n      }\n    }\n  \n                                    LiveCodingCodeFlowUtil.checkLoop(\"\");\n                                  \n                    } catch (e) {\n                        LogUtil.log(\"error\", \"\", \"\", \"cordova.js\", \"live method cordova.js[112]: function(context) execute error: \" + e.message, e);\n                    } finally {\n                        LiveCodingCodeFlowUtil.checkRecursion2(\"cordova.js[112]: function(context)\");\n                    }\n                })")
LiveCodeRegistry.getInstance().putMethod("cordova.js113", "(function(context, symbolPath) {\n  \n                    var __coltScope = LiveCodeRegistry.getInstance().getScope();\n                    LiveCodingCodeFlowUtil.checkRecursion(\"cordova.js[113]: function(context, symbolPath)\"); try {\n                  var origSymbols = context.CDV_origSymbols;\n  if (origSymbols && (symbolPath in origSymbols)) \n  {\n    return origSymbols[symbolPath];\n  }\n  var parts = symbolPath.split(\'.\');\n  var obj = context;\n  \n                                    var _colt10 = \"_colt10_\" + Date.now();\n                                  for (var i = 0; i < parts.length; ++i) \n    {\n      \n                                    LiveCodingCodeFlowUtil.checkLoop(_colt10);\n                                      obj = obj && obj[parts[i]];\n    }\n  \n                                    LiveCodingCodeFlowUtil.checkLoop(\"\");\n                                  return obj;\n  \n                    } catch (e) {\n                        LogUtil.log(\"error\", \"\", \"\", \"cordova.js\", \"live method cordova.js[113]: function(context, symbolPath) execute error: \" + e.message, e);\n                    } finally {\n                        LiveCodingCodeFlowUtil.checkRecursion2(\"cordova.js[113]: function(context, symbolPath)\");\n                    }\n                })")
LiveCodeRegistry.getInstance().putMethod("cordova.js114", "(function(require, exports, module) {\n  \n                    var __coltScope = LiveCodeRegistry.getInstance().getScope();\n                    LiveCodingCodeFlowUtil.checkRecursion(\"cordova.js[114]: function(require, exports, module)\"); try {\n                  module.exports = {id: \'ios\', bootstrap: function() {\n  \n                        var _colt7e = LiveCodeRegistry.getInstance().getCachedMethod(\"cordova.js115_\" + __coltScope)\n                        if (_colt7e == null) {\n                            try {\n                                _colt7e = eval(LiveCodeRegistry.getInstance().getMethod(\"cordova.js115\"));\n                            } catch (e) {\n                                LogUtil.log(\"error\", \"\", \"\", \"cordova.js\", \"live method cordova.js[115]: function() execute error: \" + e.message, e);\n                                return;\n                            }\n                            LiveCodeRegistry.getInstance().putCachedMethod(\"cordova.js115_\" + __coltScope, _colt7e)\n                        }\n                        return _colt7e.apply(this, arguments)\n            }};\n  \n                    } catch (e) {\n                        LogUtil.log(\"error\", \"\", \"\", \"cordova.js\", \"live method cordova.js[114]: function(require, exports, module) execute error: \" + e.message, e);\n                    } finally {\n                        LiveCodingCodeFlowUtil.checkRecursion2(\"cordova.js[114]: function(require, exports, module)\");\n                    }\n                })")
LiveCodeRegistry.getInstance().putMethod("cordova.js115", "(function() {\n  \n                    var __coltScope = LiveCodeRegistry.getInstance().getScope();\n                    LiveCodingCodeFlowUtil.checkRecursion(\"cordova.js[115]: function()\"); try {\n                  require(\'cordova\/channel\').onNativeReady.fire();\n  \n                    } catch (e) {\n                        LogUtil.log(\"error\", \"\", \"\", \"cordova.js\", \"live method cordova.js[115]: function() execute error: \" + e.message, e);\n                    } finally {\n                        LiveCodingCodeFlowUtil.checkRecursion2(\"cordova.js[115]: function()\");\n                    }\n                })")
LiveCodeRegistry.getInstance().putMethod("cordova.js116", "(function(require, exports, module) {\n  \n                    var __coltScope = LiveCodeRegistry.getInstance().getScope();\n                    LiveCodingCodeFlowUtil.checkRecursion(\"cordova.js[116]: function(require, exports, module)\"); try {\n                  var modulemapper = require(\'cordova\/modulemapper\');\n  function injectScript(url, onload, onerror) {\n    \n                        var _colt80 = LiveCodeRegistry.getInstance().getCachedMethod(\"cordova.js118_\" + __coltScope)\n                        if (_colt80 == null) {\n                            try {\n                                _colt80 = eval(LiveCodeRegistry.getInstance().getMethod(\"cordova.js118\"));\n                            } catch (e) {\n                                LogUtil.log(\"error\", \"\", \"\", \"cordova.js\", \"live method cordova.js[118]: function injectScript(url, onload, onerror) execute error: \" + e.message, e);\n                                return;\n                            }\n                            LiveCodeRegistry.getInstance().putCachedMethod(\"cordova.js118_\" + __coltScope, _colt80)\n                        }\n                        return _colt80.apply(this, arguments)\n              }\n  function onScriptLoadingComplete(moduleList, finishPluginLoading) {\n    \n                        var _colt81 = LiveCodeRegistry.getInstance().getCachedMethod(\"cordova.js119_\" + __coltScope)\n                        if (_colt81 == null) {\n                            try {\n                                _colt81 = eval(LiveCodeRegistry.getInstance().getMethod(\"cordova.js119\"));\n                            } catch (e) {\n                                LogUtil.log(\"error\", \"\", \"\", \"cordova.js\", \"live method cordova.js[119]: function onScriptLoadingComplete(moduleList, finishPluginLoading) execute error: \" + e.message, e);\n                                return;\n                            }\n                            LiveCodeRegistry.getInstance().putCachedMethod(\"cordova.js119_\" + __coltScope, _colt81)\n                        }\n                        return _colt81.apply(this, arguments)\n              }\n  function handlePluginsObject(path, moduleList, finishPluginLoading) {\n    \n                        var _colt82 = LiveCodeRegistry.getInstance().getCachedMethod(\"cordova.js121_\" + __coltScope)\n                        if (_colt82 == null) {\n                            try {\n                                _colt82 = eval(LiveCodeRegistry.getInstance().getMethod(\"cordova.js121\"));\n                            } catch (e) {\n                                LogUtil.log(\"error\", \"\", \"\", \"cordova.js\", \"live method cordova.js[121]: function handlePluginsObject(path, moduleList, finishPluginLoading) execute error: \" + e.message, e);\n                                return;\n                            }\n                            LiveCodeRegistry.getInstance().putCachedMethod(\"cordova.js121_\" + __coltScope, _colt82)\n                        }\n                        return _colt82.apply(this, arguments)\n              }\n  function injectPluginScript(pathPrefix, finishPluginLoading) {\n    \n                        var _colt84 = LiveCodeRegistry.getInstance().getCachedMethod(\"cordova.js123_\" + __coltScope)\n                        if (_colt84 == null) {\n                            try {\n                                _colt84 = eval(LiveCodeRegistry.getInstance().getMethod(\"cordova.js123\"));\n                            } catch (e) {\n                                LogUtil.log(\"error\", \"\", \"\", \"cordova.js\", \"live method cordova.js[123]: function injectPluginScript(pathPrefix, finishPluginLoading) execute error: \" + e.message, e);\n                                return;\n                            }\n                            LiveCodeRegistry.getInstance().putCachedMethod(\"cordova.js123_\" + __coltScope, _colt84)\n                        }\n                        return _colt84.apply(this, arguments)\n              }\n  function findCordovaPath() {\n    \n                        var _colt86 = LiveCodeRegistry.getInstance().getCachedMethod(\"cordova.js125_\" + __coltScope)\n                        if (_colt86 == null) {\n                            try {\n                                _colt86 = eval(LiveCodeRegistry.getInstance().getMethod(\"cordova.js125\"));\n                            } catch (e) {\n                                LogUtil.log(\"error\", \"\", \"\", \"cordova.js\", \"live method cordova.js[125]: function findCordovaPath() execute error: \" + e.message, e);\n                                return;\n                            }\n                            LiveCodeRegistry.getInstance().putCachedMethod(\"cordova.js125_\" + __coltScope, _colt86)\n                        }\n                        return _colt86.apply(this, arguments)\n              }\n  exports.load = function(callback) {\n  \n                        var _colt87 = LiveCodeRegistry.getInstance().getCachedMethod(\"cordova.js126_\" + __coltScope)\n                        if (_colt87 == null) {\n                            try {\n                                _colt87 = eval(LiveCodeRegistry.getInstance().getMethod(\"cordova.js126\"));\n                            } catch (e) {\n                                LogUtil.log(\"error\", \"\", \"\", \"cordova.js\", \"live method cordova.js[126]: function(callback) execute error: \" + e.message, e);\n                                return;\n                            }\n                            LiveCodeRegistry.getInstance().putCachedMethod(\"cordova.js126_\" + __coltScope, _colt87)\n                        }\n                        return _colt87.apply(this, arguments)\n            };\n  \n                    } catch (e) {\n                        LogUtil.log(\"error\", \"\", \"\", \"cordova.js\", \"live method cordova.js[116]: function(require, exports, module) execute error: \" + e.message, e);\n                    } finally {\n                        LiveCodingCodeFlowUtil.checkRecursion2(\"cordova.js[116]: function(require, exports, module)\");\n                    }\n                })")
LiveCodeRegistry.getInstance().putMethod("cordova.js118", "(function(url, onload, onerror) {\n  \n                    var __coltScope = LiveCodeRegistry.getInstance().getScope();\n                    LiveCodingCodeFlowUtil.checkRecursion(\"cordova.js[118]: function injectScript(url, onload, onerror)\"); try {\n                  var script = document.createElement(\"script\");\n  script.onload = onload;\n  script.onerror = onerror || onload;\n  script.src = url;\n  document.head.appendChild(script);\n  \n                    } catch (e) {\n                        LogUtil.log(\"error\", \"\", \"\", \"cordova.js\", \"live method cordova.js[118]: function injectScript(url, onload, onerror) execute error: \" + e.message, e);\n                    } finally {\n                        LiveCodingCodeFlowUtil.checkRecursion2(\"cordova.js[118]: function injectScript(url, onload, onerror)\");\n                    }\n                })")
LiveCodeRegistry.getInstance().putMethod("cordova.js119", "(function(moduleList, finishPluginLoading) {\n  \n                    var __coltScope = LiveCodeRegistry.getInstance().getScope();\n                    LiveCodingCodeFlowUtil.checkRecursion(\"cordova.js[119]: function onScriptLoadingComplete(moduleList, finishPluginLoading)\"); try {\n                  \n                                    var _colt11 = \"_colt11_\" + Date.now();\n                                  for (var i = 0, module; module = moduleList[i]; i++) \n    {\n      \n                                    LiveCodingCodeFlowUtil.checkLoop(_colt11);\n                                      if (module) \n      {\n        try {\n          if (module.clobbers && module.clobbers.length) \n          {\n            \n                                    var _colt12 = \"_colt12_\" + Date.now();\n                                            for (var j = 0; j < module.clobbers.length; j++) \n              {\n                \n                                    LiveCodingCodeFlowUtil.checkLoop(_colt12);\n                                                modulemapper.clobbers(module.id, module.clobbers[j]);\n              }\n            \n                                    LiveCodingCodeFlowUtil.checkLoop(\"\");\n                                          }\n          if (module.merges && module.merges.length) \n          {\n            \n                                    var _colt13 = \"_colt13_\" + Date.now();\n                                            for (var k = 0; k < module.merges.length; k++) \n              {\n                \n                                    LiveCodingCodeFlowUtil.checkLoop(_colt13);\n                                                modulemapper.merges(module.id, module.merges[k]);\n              }\n            \n                                    LiveCodingCodeFlowUtil.checkLoop(\"\");\n                                          }\n          if (module.runs && !(module.clobbers && module.clobbers.length) && !(module.merges && module.merges.length)) \n          {\n            modulemapper.runs(module.id);\n          }\n        }        catch (err) {\n}\n      }\n    }\n  \n                                    LiveCodingCodeFlowUtil.checkLoop(\"\");\n                                  finishPluginLoading();\n  \n                    } catch (e) {\n                        LogUtil.log(\"error\", \"\", \"\", \"cordova.js\", \"live method cordova.js[119]: function onScriptLoadingComplete(moduleList, finishPluginLoading) execute error: \" + e.message, e);\n                    } finally {\n                        LiveCodingCodeFlowUtil.checkRecursion2(\"cordova.js[119]: function onScriptLoadingComplete(moduleList, finishPluginLoading)\");\n                    }\n                })")
LiveCodeRegistry.getInstance().putMethod("cordova.js121", "(function(path, moduleList, finishPluginLoading) {\n  \n                    var __coltScope = LiveCodeRegistry.getInstance().getScope();\n                    LiveCodingCodeFlowUtil.checkRecursion(\"cordova.js[121]: function handlePluginsObject(path, moduleList, finishPluginLoading)\"); try {\n                  var scriptCounter = moduleList.length;\n  if (!scriptCounter) \n  {\n    finishPluginLoading();\n    return;\n  }\n  function scriptLoadedCallback() {\n    \n                        var _colt83 = LiveCodeRegistry.getInstance().getCachedMethod(\"cordova.js122_\" + __coltScope)\n                        if (_colt83 == null) {\n                            try {\n                                _colt83 = eval(LiveCodeRegistry.getInstance().getMethod(\"cordova.js122\"));\n                            } catch (e) {\n                                LogUtil.log(\"error\", \"\", \"\", \"cordova.js\", \"live method cordova.js[122]: function scriptLoadedCallback() execute error: \" + e.message, e);\n                                return;\n                            }\n                            LiveCodeRegistry.getInstance().putCachedMethod(\"cordova.js122_\" + __coltScope, _colt83)\n                        }\n                        return _colt83.apply(this, arguments)\n              }\n  \n                                    var _colt14 = \"_colt14_\" + Date.now();\n                                  for (var i = 0; i < moduleList.length; i++) \n    {\n      \n                                    LiveCodingCodeFlowUtil.checkLoop(_colt14);\n                                      injectScript(path + moduleList[i].file, scriptLoadedCallback);\n    }\n  \n                                    LiveCodingCodeFlowUtil.checkLoop(\"\");\n                                  \n                    } catch (e) {\n                        LogUtil.log(\"error\", \"\", \"\", \"cordova.js\", \"live method cordova.js[121]: function handlePluginsObject(path, moduleList, finishPluginLoading) execute error: \" + e.message, e);\n                    } finally {\n                        LiveCodingCodeFlowUtil.checkRecursion2(\"cordova.js[121]: function handlePluginsObject(path, moduleList, finishPluginLoading)\");\n                    }\n                })")
LiveCodeRegistry.getInstance().putMethod("cordova.js122", "(function() {\n  \n                    var __coltScope = LiveCodeRegistry.getInstance().getScope();\n                    LiveCodingCodeFlowUtil.checkRecursion(\"cordova.js[122]: function scriptLoadedCallback()\"); try {\n                  if (!--scriptCounter) \n  {\n    onScriptLoadingComplete(moduleList, finishPluginLoading);\n  }\n  \n                    } catch (e) {\n                        LogUtil.log(\"error\", \"\", \"\", \"cordova.js\", \"live method cordova.js[122]: function scriptLoadedCallback() execute error: \" + e.message, e);\n                    } finally {\n                        LiveCodingCodeFlowUtil.checkRecursion2(\"cordova.js[122]: function scriptLoadedCallback()\");\n                    }\n                })")
LiveCodeRegistry.getInstance().putMethod("cordova.js123", "(function(pathPrefix, finishPluginLoading) {\n  \n                    var __coltScope = LiveCodeRegistry.getInstance().getScope();\n                    LiveCodingCodeFlowUtil.checkRecursion(\"cordova.js[123]: function injectPluginScript(pathPrefix, finishPluginLoading)\"); try {\n                  injectScript(pathPrefix + \'cordova_plugins.js\', function() {\n  \n                        var _colt85 = LiveCodeRegistry.getInstance().getCachedMethod(\"cordova.js124_\" + __coltScope)\n                        if (_colt85 == null) {\n                            try {\n                                _colt85 = eval(LiveCodeRegistry.getInstance().getMethod(\"cordova.js124\"));\n                            } catch (e) {\n                                LogUtil.log(\"error\", \"\", \"\", \"cordova.js\", \"live method cordova.js[124]: function() execute error: \" + e.message, e);\n                                return;\n                            }\n                            LiveCodeRegistry.getInstance().putCachedMethod(\"cordova.js124_\" + __coltScope, _colt85)\n                        }\n                        return _colt85.apply(this, arguments)\n            }, finishPluginLoading);\n  \n                    } catch (e) {\n                        LogUtil.log(\"error\", \"\", \"\", \"cordova.js\", \"live method cordova.js[123]: function injectPluginScript(pathPrefix, finishPluginLoading) execute error: \" + e.message, e);\n                    } finally {\n                        LiveCodingCodeFlowUtil.checkRecursion2(\"cordova.js[123]: function injectPluginScript(pathPrefix, finishPluginLoading)\");\n                    }\n                })")
LiveCodeRegistry.getInstance().putMethod("cordova.js124", "(function() {\n  \n                    var __coltScope = LiveCodeRegistry.getInstance().getScope();\n                    LiveCodingCodeFlowUtil.checkRecursion(\"cordova.js[124]: function()\"); try {\n                  try {\n    var moduleList = require(\"cordova\/plugin_list\");\n    handlePluginsObject(pathPrefix, moduleList, finishPluginLoading);\n  }  catch (e) {\n  finishPluginLoading();\n}\n  \n                    } catch (e) {\n                        LogUtil.log(\"error\", \"\", \"\", \"cordova.js\", \"live method cordova.js[124]: function() execute error: \" + e.message, e);\n                    } finally {\n                        LiveCodingCodeFlowUtil.checkRecursion2(\"cordova.js[124]: function()\");\n                    }\n                })")
LiveCodeRegistry.getInstance().putMethod("cordova.js125", "(function() {\n  \n                    var __coltScope = LiveCodeRegistry.getInstance().getScope();\n                    LiveCodingCodeFlowUtil.checkRecursion(\"cordova.js[125]: function findCordovaPath()\"); try {\n                  var path = null;\n  var scripts = document.getElementsByTagName(\'script\');\n  var term = \'cordova.js\';\n  \n                                    var _colt15 = \"_colt15_\" + Date.now();\n                                  for (var n = scripts.length - 1; n > -1; n--) \n    {\n      \n                                    LiveCodingCodeFlowUtil.checkLoop(_colt15);\n                                      var src = scripts[n].src;\n      if (src.indexOf(term) == (src.length - term.length)) \n      {\n        path = src.substring(0, src.length - term.length);\n        break;\n      }\n    }\n  \n                                    LiveCodingCodeFlowUtil.checkLoop(\"\");\n                                  return path;\n  \n                    } catch (e) {\n                        LogUtil.log(\"error\", \"\", \"\", \"cordova.js\", \"live method cordova.js[125]: function findCordovaPath() execute error: \" + e.message, e);\n                    } finally {\n                        LiveCodingCodeFlowUtil.checkRecursion2(\"cordova.js[125]: function findCordovaPath()\");\n                    }\n                })")
LiveCodeRegistry.getInstance().putMethod("cordova.js126", "(function(callback) {\n  \n                    var __coltScope = LiveCodeRegistry.getInstance().getScope();\n                    LiveCodingCodeFlowUtil.checkRecursion(\"cordova.js[126]: function(callback)\"); try {\n                  var pathPrefix = findCordovaPath();\n  if (pathPrefix === null) \n  {\n    console.log(\'Could not find cordova.js script tag. Plugin loading may fail.\');\n    pathPrefix = \'\';\n  }\n  injectPluginScript(pathPrefix, callback);\n  \n                    } catch (e) {\n                        LogUtil.log(\"error\", \"\", \"\", \"cordova.js\", \"live method cordova.js[126]: function(callback) execute error: \" + e.message, e);\n                    } finally {\n                        LiveCodingCodeFlowUtil.checkRecursion2(\"cordova.js[126]: function(callback)\");\n                    }\n                })")
LiveCodeRegistry.getInstance().putMethod("cordova.js127", "(function(require, exports, module) {\n  \n                    var __coltScope = LiveCodeRegistry.getInstance().getScope();\n                    LiveCodingCodeFlowUtil.checkRecursion(\"cordova.js[127]: function(require, exports, module)\"); try {\n                  var urlutil = exports;\n  var anchorEl = document.createElement(\'a\');\n  urlutil.makeAbsolute = function(url) {\n  \n                        var _colt89 = LiveCodeRegistry.getInstance().getCachedMethod(\"cordova.js128_\" + __coltScope)\n                        if (_colt89 == null) {\n                            try {\n                                _colt89 = eval(LiveCodeRegistry.getInstance().getMethod(\"cordova.js128\"));\n                            } catch (e) {\n                                LogUtil.log(\"error\", \"\", \"\", \"cordova.js\", \"live method cordova.js[128]: function(url) execute error: \" + e.message, e);\n                                return;\n                            }\n                            LiveCodeRegistry.getInstance().putCachedMethod(\"cordova.js128_\" + __coltScope, _colt89)\n                        }\n                        return _colt89.apply(this, arguments)\n            };\n  \n                    } catch (e) {\n                        LogUtil.log(\"error\", \"\", \"\", \"cordova.js\", \"live method cordova.js[127]: function(require, exports, module) execute error: \" + e.message, e);\n                    } finally {\n                        LiveCodingCodeFlowUtil.checkRecursion2(\"cordova.js[127]: function(require, exports, module)\");\n                    }\n                })")
LiveCodeRegistry.getInstance().putMethod("cordova.js128", "(function(url) {\n  \n                    var __coltScope = LiveCodeRegistry.getInstance().getScope();\n                    LiveCodingCodeFlowUtil.checkRecursion(\"cordova.js[128]: function(url)\"); try {\n                  anchorEl.href = url;\n  return anchorEl.href;\n  \n                    } catch (e) {\n                        LogUtil.log(\"error\", \"\", \"\", \"cordova.js\", \"live method cordova.js[128]: function(url) execute error: \" + e.message, e);\n                    } finally {\n                        LiveCodingCodeFlowUtil.checkRecursion2(\"cordova.js[128]: function(url)\");\n                    }\n                })")
LiveCodeRegistry.getInstance().putMethod("cordova.js129", "(function(require, exports, module) {\n  \n                    var __coltScope = LiveCodeRegistry.getInstance().getScope();\n                    LiveCodingCodeFlowUtil.checkRecursion(\"cordova.js[129]: function(require, exports, module)\"); try {\n                  var utils = exports;\n  utils.defineGetterSetter = function(obj, key, getFunc, opt_setFunc) {\n  \n                        var _colt8b = LiveCodeRegistry.getInstance().getCachedMethod(\"cordova.js130_\" + __coltScope)\n                        if (_colt8b == null) {\n                            try {\n                                _colt8b = eval(LiveCodeRegistry.getInstance().getMethod(\"cordova.js130\"));\n                            } catch (e) {\n                                LogUtil.log(\"error\", \"\", \"\", \"cordova.js\", \"live method cordova.js[130]: function(obj, key, getFunc, opt_setFunc) execute error: \" + e.message, e);\n                                return;\n                            }\n                            LiveCodeRegistry.getInstance().putCachedMethod(\"cordova.js130_\" + __coltScope, _colt8b)\n                        }\n                        return _colt8b.apply(this, arguments)\n            };\n  utils.defineGetter = utils.defineGetterSetter;\n  utils.arrayIndexOf = function(a, item) {\n  \n                        var _colt8c = LiveCodeRegistry.getInstance().getCachedMethod(\"cordova.js131_\" + __coltScope)\n                        if (_colt8c == null) {\n                            try {\n                                _colt8c = eval(LiveCodeRegistry.getInstance().getMethod(\"cordova.js131\"));\n                            } catch (e) {\n                                LogUtil.log(\"error\", \"\", \"\", \"cordova.js\", \"live method cordova.js[131]: function(a, item) execute error: \" + e.message, e);\n                                return;\n                            }\n                            LiveCodeRegistry.getInstance().putCachedMethod(\"cordova.js131_\" + __coltScope, _colt8c)\n                        }\n                        return _colt8c.apply(this, arguments)\n            };\n  utils.arrayRemove = function(a, item) {\n  \n                        var _colt8d = LiveCodeRegistry.getInstance().getCachedMethod(\"cordova.js132_\" + __coltScope)\n                        if (_colt8d == null) {\n                            try {\n                                _colt8d = eval(LiveCodeRegistry.getInstance().getMethod(\"cordova.js132\"));\n                            } catch (e) {\n                                LogUtil.log(\"error\", \"\", \"\", \"cordova.js\", \"live method cordova.js[132]: function(a, item) execute error: \" + e.message, e);\n                                return;\n                            }\n                            LiveCodeRegistry.getInstance().putCachedMethod(\"cordova.js132_\" + __coltScope, _colt8d)\n                        }\n                        return _colt8d.apply(this, arguments)\n            };\n  utils.typeName = function(val) {\n  \n                        var _colt8e = LiveCodeRegistry.getInstance().getCachedMethod(\"cordova.js133_\" + __coltScope)\n                        if (_colt8e == null) {\n                            try {\n                                _colt8e = eval(LiveCodeRegistry.getInstance().getMethod(\"cordova.js133\"));\n                            } catch (e) {\n                                LogUtil.log(\"error\", \"\", \"\", \"cordova.js\", \"live method cordova.js[133]: function(val) execute error: \" + e.message, e);\n                                return;\n                            }\n                            LiveCodeRegistry.getInstance().putCachedMethod(\"cordova.js133_\" + __coltScope, _colt8e)\n                        }\n                        return _colt8e.apply(this, arguments)\n            };\n  utils.isArray = function(a) {\n  \n                        var _colt8f = LiveCodeRegistry.getInstance().getCachedMethod(\"cordova.js134_\" + __coltScope)\n                        if (_colt8f == null) {\n                            try {\n                                _colt8f = eval(LiveCodeRegistry.getInstance().getMethod(\"cordova.js134\"));\n                            } catch (e) {\n                                LogUtil.log(\"error\", \"\", \"\", \"cordova.js\", \"live method cordova.js[134]: function(a) execute error: \" + e.message, e);\n                                return;\n                            }\n                            LiveCodeRegistry.getInstance().putCachedMethod(\"cordova.js134_\" + __coltScope, _colt8f)\n                        }\n                        return _colt8f.apply(this, arguments)\n            };\n  utils.isDate = function(d) {\n  \n                        var _colt90 = LiveCodeRegistry.getInstance().getCachedMethod(\"cordova.js135_\" + __coltScope)\n                        if (_colt90 == null) {\n                            try {\n                                _colt90 = eval(LiveCodeRegistry.getInstance().getMethod(\"cordova.js135\"));\n                            } catch (e) {\n                                LogUtil.log(\"error\", \"\", \"\", \"cordova.js\", \"live method cordova.js[135]: function(d) execute error: \" + e.message, e);\n                                return;\n                            }\n                            LiveCodeRegistry.getInstance().putCachedMethod(\"cordova.js135_\" + __coltScope, _colt90)\n                        }\n                        return _colt90.apply(this, arguments)\n            };\n  utils.clone = function(obj) {\n  \n                        var _colt91 = LiveCodeRegistry.getInstance().getCachedMethod(\"cordova.js136_\" + __coltScope)\n                        if (_colt91 == null) {\n                            try {\n                                _colt91 = eval(LiveCodeRegistry.getInstance().getMethod(\"cordova.js136\"));\n                            } catch (e) {\n                                LogUtil.log(\"error\", \"\", \"\", \"cordova.js\", \"live method cordova.js[136]: function(obj) execute error: \" + e.message, e);\n                                return;\n                            }\n                            LiveCodeRegistry.getInstance().putCachedMethod(\"cordova.js136_\" + __coltScope, _colt91)\n                        }\n                        return _colt91.apply(this, arguments)\n            };\n  utils.close = function(context, func, params) {\n  \n                        var _colt92 = LiveCodeRegistry.getInstance().getCachedMethod(\"cordova.js139_\" + __coltScope)\n                        if (_colt92 == null) {\n                            try {\n                                _colt92 = eval(LiveCodeRegistry.getInstance().getMethod(\"cordova.js139\"));\n                            } catch (e) {\n                                LogUtil.log(\"error\", \"\", \"\", \"cordova.js\", \"live method cordova.js[139]: function(context, func, params) execute error: \" + e.message, e);\n                                return;\n                            }\n                            LiveCodeRegistry.getInstance().putCachedMethod(\"cordova.js139_\" + __coltScope, _colt92)\n                        }\n                        return _colt92.apply(this, arguments)\n            };\n  utils.createUUID = function() {\n  \n                        var _colt95 = LiveCodeRegistry.getInstance().getCachedMethod(\"cordova.js142_\" + __coltScope)\n                        if (_colt95 == null) {\n                            try {\n                                _colt95 = eval(LiveCodeRegistry.getInstance().getMethod(\"cordova.js142\"));\n                            } catch (e) {\n                                LogUtil.log(\"error\", \"\", \"\", \"cordova.js\", \"live method cordova.js[142]: function() execute error: \" + e.message, e);\n                                return;\n                            }\n                            LiveCodeRegistry.getInstance().putCachedMethod(\"cordova.js142_\" + __coltScope, _colt95)\n                        }\n                        return _colt95.apply(this, arguments)\n            };\n  utils.extend = (function() {\n  \n                        var _colt96 = LiveCodeRegistry.getInstance().getCachedMethod(\"cordova.js143_\" + __coltScope)\n                        if (_colt96 == null) {\n                            try {\n                                _colt96 = eval(LiveCodeRegistry.getInstance().getMethod(\"cordova.js143\"));\n                            } catch (e) {\n                                LogUtil.log(\"error\", \"\", \"\", \"cordova.js\", \"live method cordova.js[143]: function() execute error: \" + e.message, e);\n                                return;\n                            }\n                            LiveCodeRegistry.getInstance().putCachedMethod(\"cordova.js143_\" + __coltScope, _colt96)\n                        }\n                        return _colt96.apply(this, arguments)\n            }());\n  utils.alert = function(msg) {\n  \n                        var _colt99 = LiveCodeRegistry.getInstance().getCachedMethod(\"cordova.js146_\" + __coltScope)\n                        if (_colt99 == null) {\n                            try {\n                                _colt99 = eval(LiveCodeRegistry.getInstance().getMethod(\"cordova.js146\"));\n                            } catch (e) {\n                                LogUtil.log(\"error\", \"\", \"\", \"cordova.js\", \"live method cordova.js[146]: function(msg) execute error: \" + e.message, e);\n                                return;\n                            }\n                            LiveCodeRegistry.getInstance().putCachedMethod(\"cordova.js146_\" + __coltScope, _colt99)\n                        }\n                        return _colt99.apply(this, arguments)\n            };\n  function UUIDcreatePart(length) {\n    \n                        var _colt9a = LiveCodeRegistry.getInstance().getCachedMethod(\"cordova.js147_\" + __coltScope)\n                        if (_colt9a == null) {\n                            try {\n                                _colt9a = eval(LiveCodeRegistry.getInstance().getMethod(\"cordova.js147\"));\n                            } catch (e) {\n                                LogUtil.log(\"error\", \"\", \"\", \"cordova.js\", \"live method cordova.js[147]: function UUIDcreatePart(length) execute error: \" + e.message, e);\n                                return;\n                            }\n                            LiveCodeRegistry.getInstance().putCachedMethod(\"cordova.js147_\" + __coltScope, _colt9a)\n                        }\n                        return _colt9a.apply(this, arguments)\n              }\n  \n                    } catch (e) {\n                        LogUtil.log(\"error\", \"\", \"\", \"cordova.js\", \"live method cordova.js[129]: function(require, exports, module) execute error: \" + e.message, e);\n                    } finally {\n                        LiveCodingCodeFlowUtil.checkRecursion2(\"cordova.js[129]: function(require, exports, module)\");\n                    }\n                })")
LiveCodeRegistry.getInstance().putMethod("cordova.js130", "(function(obj, key, getFunc, opt_setFunc) {\n  \n                    var __coltScope = LiveCodeRegistry.getInstance().getScope();\n                    LiveCodingCodeFlowUtil.checkRecursion(\"cordova.js[130]: function(obj, key, getFunc, opt_setFunc)\"); try {\n                  if (Object.defineProperty) \n  {\n    var desc = {get: getFunc, configurable: true};\n    if (opt_setFunc) \n    {\n      desc.set = opt_setFunc;\n    }\n    Object.defineProperty(obj, key, desc);\n  } else {\n    obj.__defineGetter__(key, getFunc);\n    if (opt_setFunc) \n    {\n      obj.__defineSetter__(key, opt_setFunc);\n    }\n  }\n  \n                    } catch (e) {\n                        LogUtil.log(\"error\", \"\", \"\", \"cordova.js\", \"live method cordova.js[130]: function(obj, key, getFunc, opt_setFunc) execute error: \" + e.message, e);\n                    } finally {\n                        LiveCodingCodeFlowUtil.checkRecursion2(\"cordova.js[130]: function(obj, key, getFunc, opt_setFunc)\");\n                    }\n                })")
LiveCodeRegistry.getInstance().putMethod("cordova.js131", "(function(a, item) {\n  \n                    var __coltScope = LiveCodeRegistry.getInstance().getScope();\n                    LiveCodingCodeFlowUtil.checkRecursion(\"cordova.js[131]: function(a, item)\"); try {\n                  if (a.indexOf) \n  {\n    return a.indexOf(item);\n  }\n  var len = a.length;\n  \n                                    var _colt16 = \"_colt16_\" + Date.now();\n                                  for (var i = 0; i < len; ++i) \n    {\n      \n                                    LiveCodingCodeFlowUtil.checkLoop(_colt16);\n                                      if (a[i] == item) \n      {\n        return i;\n      }\n    }\n  \n                                    LiveCodingCodeFlowUtil.checkLoop(\"\");\n                                  return -1;\n  \n                    } catch (e) {\n                        LogUtil.log(\"error\", \"\", \"\", \"cordova.js\", \"live method cordova.js[131]: function(a, item) execute error: \" + e.message, e);\n                    } finally {\n                        LiveCodingCodeFlowUtil.checkRecursion2(\"cordova.js[131]: function(a, item)\");\n                    }\n                })")
LiveCodeRegistry.getInstance().putMethod("cordova.js132", "(function(a, item) {\n  \n                    var __coltScope = LiveCodeRegistry.getInstance().getScope();\n                    LiveCodingCodeFlowUtil.checkRecursion(\"cordova.js[132]: function(a, item)\"); try {\n                  var index = utils.arrayIndexOf(a, item);\n  if (index != -1) \n  {\n    a.splice(index, 1);\n  }\n  return index != -1;\n  \n                    } catch (e) {\n                        LogUtil.log(\"error\", \"\", \"\", \"cordova.js\", \"live method cordova.js[132]: function(a, item) execute error: \" + e.message, e);\n                    } finally {\n                        LiveCodingCodeFlowUtil.checkRecursion2(\"cordova.js[132]: function(a, item)\");\n                    }\n                })")
LiveCodeRegistry.getInstance().putMethod("cordova.js133", "(function(val) {\n  \n                    var __coltScope = LiveCodeRegistry.getInstance().getScope();\n                    LiveCodingCodeFlowUtil.checkRecursion(\"cordova.js[133]: function(val)\"); try {\n                  return Object.prototype.toString.call(val).slice(8, -1);\n  \n                    } catch (e) {\n                        LogUtil.log(\"error\", \"\", \"\", \"cordova.js\", \"live method cordova.js[133]: function(val) execute error: \" + e.message, e);\n                    } finally {\n                        LiveCodingCodeFlowUtil.checkRecursion2(\"cordova.js[133]: function(val)\");\n                    }\n                })")
LiveCodeRegistry.getInstance().putMethod("cordova.js134", "(function(a) {\n  \n                    var __coltScope = LiveCodeRegistry.getInstance().getScope();\n                    LiveCodingCodeFlowUtil.checkRecursion(\"cordova.js[134]: function(a)\"); try {\n                  return utils.typeName(a) == \'Array\';\n  \n                    } catch (e) {\n                        LogUtil.log(\"error\", \"\", \"\", \"cordova.js\", \"live method cordova.js[134]: function(a) execute error: \" + e.message, e);\n                    } finally {\n                        LiveCodingCodeFlowUtil.checkRecursion2(\"cordova.js[134]: function(a)\");\n                    }\n                })")
LiveCodeRegistry.getInstance().putMethod("cordova.js135", "(function(d) {\n  \n                    var __coltScope = LiveCodeRegistry.getInstance().getScope();\n                    LiveCodingCodeFlowUtil.checkRecursion(\"cordova.js[135]: function(d)\"); try {\n                  return utils.typeName(d) == \'Date\';\n  \n                    } catch (e) {\n                        LogUtil.log(\"error\", \"\", \"\", \"cordova.js\", \"live method cordova.js[135]: function(d) execute error: \" + e.message, e);\n                    } finally {\n                        LiveCodingCodeFlowUtil.checkRecursion2(\"cordova.js[135]: function(d)\");\n                    }\n                })")
LiveCodeRegistry.getInstance().putMethod("cordova.js136", "(function(obj) {\n  \n                    var __coltScope = LiveCodeRegistry.getInstance().getScope();\n                    LiveCodingCodeFlowUtil.checkRecursion(\"cordova.js[136]: function(obj)\"); try {\n                  if (!obj || typeof obj == \'function\' || utils.isDate(obj) || typeof obj != \'object\') \n  {\n    return obj;\n  }\n  var retVal, i;\n  if (utils.isArray(obj)) \n  {\n    retVal = [];\n    \n                                    var _colt17 = \"_colt17_\" + Date.now();\n                                    for (i = 0; i < obj.length; ++i) \n      {\n        \n                                    LiveCodingCodeFlowUtil.checkLoop(_colt17);\n                                        retVal.push(utils.clone(obj[i]));\n      }\n    \n                                    LiveCodingCodeFlowUtil.checkLoop(\"\");\n                                    return retVal;\n  }\n  retVal = {};\n  \n                                    var _colt18 = \"_colt18_\" + Date.now();\n                                  for (i in obj) \n    {\n      \n                                    LiveCodingCodeFlowUtil.checkLoop(_colt18);\n                                      if (!(i in retVal) || retVal[i] != obj[i]) \n      {\n        retVal[i] = utils.clone(obj[i]);\n      }\n    }\n  \n                                    LiveCodingCodeFlowUtil.checkLoop(\"\");\n                                  return retVal;\n  \n                    } catch (e) {\n                        LogUtil.log(\"error\", \"\", \"\", \"cordova.js\", \"live method cordova.js[136]: function(obj) execute error: \" + e.message, e);\n                    } finally {\n                        LiveCodingCodeFlowUtil.checkRecursion2(\"cordova.js[136]: function(obj)\");\n                    }\n                })")
LiveCodeRegistry.getInstance().putMethod("cordova.js139", "(function(context, func, params) {\n  \n                    var __coltScope = LiveCodeRegistry.getInstance().getScope();\n                    LiveCodingCodeFlowUtil.checkRecursion(\"cordova.js[139]: function(context, func, params)\"); try {\n                  if (typeof params == \'undefined\') \n  {\n    return function() {\n  \n                        var _colt93 = LiveCodeRegistry.getInstance().getCachedMethod(\"cordova.js140_\" + __coltScope)\n                        if (_colt93 == null) {\n                            try {\n                                _colt93 = eval(LiveCodeRegistry.getInstance().getMethod(\"cordova.js140\"));\n                            } catch (e) {\n                                LogUtil.log(\"error\", \"\", \"\", \"cordova.js\", \"live method cordova.js[140]: function() execute error: \" + e.message, e);\n                                return;\n                            }\n                            LiveCodeRegistry.getInstance().putCachedMethod(\"cordova.js140_\" + __coltScope, _colt93)\n                        }\n                        return _colt93.apply(this, arguments)\n            };\n  } else {\n    return function() {\n  \n                        var _colt94 = LiveCodeRegistry.getInstance().getCachedMethod(\"cordova.js141_\" + __coltScope)\n                        if (_colt94 == null) {\n                            try {\n                                _colt94 = eval(LiveCodeRegistry.getInstance().getMethod(\"cordova.js141\"));\n                            } catch (e) {\n                                LogUtil.log(\"error\", \"\", \"\", \"cordova.js\", \"live method cordova.js[141]: function() execute error: \" + e.message, e);\n                                return;\n                            }\n                            LiveCodeRegistry.getInstance().putCachedMethod(\"cordova.js141_\" + __coltScope, _colt94)\n                        }\n                        return _colt94.apply(this, arguments)\n            };\n  }\n  \n                    } catch (e) {\n                        LogUtil.log(\"error\", \"\", \"\", \"cordova.js\", \"live method cordova.js[139]: function(context, func, params) execute error: \" + e.message, e);\n                    } finally {\n                        LiveCodingCodeFlowUtil.checkRecursion2(\"cordova.js[139]: function(context, func, params)\");\n                    }\n                })")
LiveCodeRegistry.getInstance().putMethod("cordova.js140", "(function() {\n  \n                    var __coltScope = LiveCodeRegistry.getInstance().getScope();\n                    LiveCodingCodeFlowUtil.checkRecursion(\"cordova.js[140]: function()\"); try {\n                  return func.apply(context, arguments);\n  \n                    } catch (e) {\n                        LogUtil.log(\"error\", \"\", \"\", \"cordova.js\", \"live method cordova.js[140]: function() execute error: \" + e.message, e);\n                    } finally {\n                        LiveCodingCodeFlowUtil.checkRecursion2(\"cordova.js[140]: function()\");\n                    }\n                })")
LiveCodeRegistry.getInstance().putMethod("cordova.js141", "(function() {\n  \n                    var __coltScope = LiveCodeRegistry.getInstance().getScope();\n                    LiveCodingCodeFlowUtil.checkRecursion(\"cordova.js[141]: function()\"); try {\n                  return func.apply(context, params);\n  \n                    } catch (e) {\n                        LogUtil.log(\"error\", \"\", \"\", \"cordova.js\", \"live method cordova.js[141]: function() execute error: \" + e.message, e);\n                    } finally {\n                        LiveCodingCodeFlowUtil.checkRecursion2(\"cordova.js[141]: function()\");\n                    }\n                })")
LiveCodeRegistry.getInstance().putMethod("cordova.js142", "(function() {\n  \n                    var __coltScope = LiveCodeRegistry.getInstance().getScope();\n                    LiveCodingCodeFlowUtil.checkRecursion(\"cordova.js[142]: function()\"); try {\n                  return UUIDcreatePart(4) + \'-\' + UUIDcreatePart(2) + \'-\' + UUIDcreatePart(2) + \'-\' + UUIDcreatePart(2) + \'-\' + UUIDcreatePart(6);\n  \n                    } catch (e) {\n                        LogUtil.log(\"error\", \"\", \"\", \"cordova.js\", \"live method cordova.js[142]: function() execute error: \" + e.message, e);\n                    } finally {\n                        LiveCodingCodeFlowUtil.checkRecursion2(\"cordova.js[142]: function()\");\n                    }\n                })")
LiveCodeRegistry.getInstance().putMethod("cordova.js143", "(function() {\n  \n                    var __coltScope = LiveCodeRegistry.getInstance().getScope();\n                    LiveCodingCodeFlowUtil.checkRecursion(\"cordova.js[143]: function()\"); try {\n                  var F = function() {\n  \n                        var _colt97 = LiveCodeRegistry.getInstance().getCachedMethod(\"cordova.js144_\" + __coltScope)\n                        if (_colt97 == null) {\n                            try {\n                                _colt97 = eval(LiveCodeRegistry.getInstance().getMethod(\"cordova.js144\"));\n                            } catch (e) {\n                                LogUtil.log(\"error\", \"\", \"\", \"cordova.js\", \"live method cordova.js[144]: function() execute error: \" + e.message, e);\n                                return;\n                            }\n                            LiveCodeRegistry.getInstance().putCachedMethod(\"cordova.js144_\" + __coltScope, _colt97)\n                        }\n                        return _colt97.apply(this, arguments)\n            };\n  return function(Child, Parent) {\n  \n                        var _colt98 = LiveCodeRegistry.getInstance().getCachedMethod(\"cordova.js145_\" + __coltScope)\n                        if (_colt98 == null) {\n                            try {\n                                _colt98 = eval(LiveCodeRegistry.getInstance().getMethod(\"cordova.js145\"));\n                            } catch (e) {\n                                LogUtil.log(\"error\", \"\", \"\", \"cordova.js\", \"live method cordova.js[145]: function(Child, Parent) execute error: \" + e.message, e);\n                                return;\n                            }\n                            LiveCodeRegistry.getInstance().putCachedMethod(\"cordova.js145_\" + __coltScope, _colt98)\n                        }\n                        return _colt98.apply(this, arguments)\n            };\n  \n                    } catch (e) {\n                        LogUtil.log(\"error\", \"\", \"\", \"cordova.js\", \"live method cordova.js[143]: function() execute error: \" + e.message, e);\n                    } finally {\n                        LiveCodingCodeFlowUtil.checkRecursion2(\"cordova.js[143]: function()\");\n                    }\n                })")
LiveCodeRegistry.getInstance().putMethod("cordova.js144", "(function() {\n})")
LiveCodeRegistry.getInstance().putMethod("cordova.js145", "(function(Child, Parent) {\n  \n                    var __coltScope = LiveCodeRegistry.getInstance().getScope();\n                    LiveCodingCodeFlowUtil.checkRecursion(\"cordova.js[145]: function(Child, Parent)\"); try {\n                  F.prototype = Parent.prototype;\n  Child.prototype = new F();\n  Child.__super__ = Parent.prototype;\n  Child.prototype.constructor = Child;\n  \n                    } catch (e) {\n                        LogUtil.log(\"error\", \"\", \"\", \"cordova.js\", \"live method cordova.js[145]: function(Child, Parent) execute error: \" + e.message, e);\n                    } finally {\n                        LiveCodingCodeFlowUtil.checkRecursion2(\"cordova.js[145]: function(Child, Parent)\");\n                    }\n                })")
LiveCodeRegistry.getInstance().putMethod("cordova.js146", "(function(msg) {\n  \n                    var __coltScope = LiveCodeRegistry.getInstance().getScope();\n                    LiveCodingCodeFlowUtil.checkRecursion(\"cordova.js[146]: function(msg)\"); try {\n                  if (window.alert) \n  {\n    window.alert(msg);\n  } else if (console && console.log) \n  {\n    console.log(msg);\n  }\n  \n                    } catch (e) {\n                        LogUtil.log(\"error\", \"\", \"\", \"cordova.js\", \"live method cordova.js[146]: function(msg) execute error: \" + e.message, e);\n                    } finally {\n                        LiveCodingCodeFlowUtil.checkRecursion2(\"cordova.js[146]: function(msg)\");\n                    }\n                })")
LiveCodeRegistry.getInstance().putMethod("cordova.js147", "(function(length) {\n  \n                    var __coltScope = LiveCodeRegistry.getInstance().getScope();\n                    LiveCodingCodeFlowUtil.checkRecursion(\"cordova.js[147]: function UUIDcreatePart(length)\"); try {\n                  var uuidpart = \"\";\n  \n                                    var _colt19 = \"_colt19_\" + Date.now();\n                                  for (var i = 0; i < length; i++) \n    {\n      \n                                    LiveCodingCodeFlowUtil.checkLoop(_colt19);\n                                      var uuidchar = parseInt((Math.random() * 256), 10).toString(16);\n      if (uuidchar.length == 1) \n      {\n        uuidchar = \"0\" + uuidchar;\n      }\n      uuidpart += uuidchar;\n    }\n  \n                                    LiveCodingCodeFlowUtil.checkLoop(\"\");\n                                  return uuidpart;\n  \n                    } catch (e) {\n                        LogUtil.log(\"error\", \"\", \"\", \"cordova.js\", \"live method cordova.js[147]: function UUIDcreatePart(length) execute error: \" + e.message, e);\n                    } finally {\n                        LiveCodingCodeFlowUtil.checkRecursion2(\"cordova.js[147]: function UUIDcreatePart(length)\");\n                    }\n                })")

LiveCodeRegistry.getInstance().setInspectables([],"cordova.js");
LiveCodeRegistry.getInstance().setLastLoadedPackage(0,"cordova.js");
;
(function() {
  
                        var _colt1a = LiveCodeRegistry.getInstance().getCachedMethod("cordova.js0_" + __coltScope)
                        if (_colt1a == null) {
                            try {
                                _colt1a = eval(LiveCodeRegistry.getInstance().getMethod("cordova.js0"));
                            } catch (e) {
                                LogUtil.log("error", "", "", "cordova.js", "live method cordova.js[0]: function() execute error: " + e.message, e);
                                return;
                            }
                            LiveCodeRegistry.getInstance().putCachedMethod("cordova.js0_" + __coltScope, _colt1a)
                        }
                        return _colt1a.apply(this, arguments)
            })();
